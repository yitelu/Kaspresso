{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kaspresso Kaspresso is a framework for Android UI testing. Based on Espresso and UI Automator , Kaspresso provides a wide range of additional features, such as: 100% stability, no flakiness. Jetpack Compose support [Early access] . Significantly faster execution of UI Automator commands. With Kaspresso, some UI Automator commands run 10 times faster ! Excellent readability due to human DSL. Incredible mechanism of interceptors that allows you to catch all actions and assertions in one place. Full logging. Ability to call ADB commands. UI tests writing philosophy, implemented with DSL. Features screenshotting. Robolectric support. Allure support. And many more! Integration To integrate Kaspresso into your project: 1. If the mavenCentral repository does not exist, include it to your root build.gradle file: allprojects { repositories { mavenCentral () } } Add a dependency to build.gradle : dependencies { androidTestImplementation 'com.kaspersky.android-components:kaspresso:<latest_version>' // Allure support androidTestImplementation \"com.kaspersky.android-components:kaspresso-allure-support:<latest_version>\" // Jetpack Compose support androidTestImplementation \"com.kaspersky.android-components:kaspresso-compose-support:<latest_version>\" } If you are still using the old Android Support libraries, we strongly recommend to migrate to AndroidX. The last version with Android Support libraries is: dependencies { androidTestImplementation 'com.kaspersky.android-components:kaspresso:1.0.1-support' } Tutorial NEW See our website for a step by step guide. Capabilities of Kaspresso Readability We like the syntax that Kakao applies to write UI tests. This wrapper over Espresso uses the Kotlin DSL approach, that makes the code significantly shorter and more readable. See the difference: Espresso : @Test fun testFirstFeature () { onView ( withId ( R . id . toFirstFeature )) . check ( ViewAssertions . matches ( ViewMatchers . withEffectiveVisibility ( ViewMatchers . Visibility . VISIBLE ))) onView ( withId ( R . id . toFirstFeature )). perform ( click ()) } Kakao : @Test fun testFirstFeature () { mainScreen { toFirstFeatureButton { isVisible () click () } } } We used the same approach to develop our own wrapper over UI Automator, and we called it Kautomator . Take a look at the code below: UI Automator : val instrumentation : Instrumentation = InstrumentationRegistry . getInstrumentation () val uiDevice = UiDevice . getInstance ( instrumentation ) val uiObject = uiDevice . wait ( Until . findObject ( By . res ( \"com.kaspersky.kaspresso.sample_kautomator\" , \"editText\" ) ), 2 _000 ) uiObject . text = \"Kaspresso\" assertEquals ( uiObject . text , \"Kaspresso\" ) Kautomator : MainScreen { simpleEditText { replaceText ( \"Kaspresso\" ) hasText ( \"Kaspresso\" ) } } Since Kakao and Kautomator provide almost identical APIs, you don\u2019t have to care about what is under the hood of your tests, either Espresso or UI Automator. With Kaspresso, you write the same tests for both. However, Kakao and Kautomator themselves don't help you to see the relation between the test and the corresponding test case. Also, a long test often becomes a giant piece of code that is impossible to split into smaller parts. That's why we have created an additional Kotlin DSL that allows you to read your test more easily. See the example below: @Test fun shouldPassOnNoInternetScanTest () = beforeTest { activityTestRule . launchActivity ( null ) // some things with the state }. afterTest { // some things with the state }. run { step ( \"Open Simple Screen\" ) { MainScreen { nextButton { isVisible () click () } } } step ( \"Click button_1 and check button_2\" ) { SimpleScreen { button1 { click () } button2 { isVisible () } } } step ( \"Click button_2 and check edit\" ) { SimpleScreen { button2 { click () } edit { flakySafely ( timeoutMs = 7000 ) { isVisible () } hasText ( R . string . text_edit_text ) } } } step ( \"Check all possibilities of edit\" ) { scenario ( CheckEditScenario () ) } } Stability Sometimes your UI test passes ten times, then breaks on the eleventh attempt for some mysterious reason. It\u2019s called flakiness . The most popular reason for flakiness is the instability of the UI tests libraries, such as Espresso and UI Automator. To eliminate this instability, Kaspresso uses DSL wrappers and interceptors . UI test libraries acceleration Let\u2019s watch some short video that shows the difference between the original UI Automator (on the right) and the accelerated one (on the left). Here is a short explanation of why it is possible. Interceptors We developed Kaspresso behavior interceptors on the base of Kakao/Kautomator Interceptors to catch failures. Thanks to interceptors, you can do a lot of useful things, such as: * add custom actions to each library operation like writing a log or taking a screenshot; * overcome flaky library operations by re-running failed actions, scrolling the parent layout or removing the android system dialog; and many more (see the manual ). Writing readable logs Kaspresso writes its own logs, detailed and readable: Ability to call ADB commands Espresso and UI Automator don't allow to call ADB commands from inside a test. To fix this problem, we developed Autotest AdbServer (see the wiki ). Ability to work with Android System You can use Kaspresso classes to work with Android System. For example, with the Device class you can: * push/pull files, * enable/disable network, * give permissions like a user does, * emulate phone calls, * take screenshots, * enable/disable GPS, * set geolocation, * enable/disable accessibility, * change the app language, * collect and parse the logcat output. (see more about the Device class ). Features screenshotting If you develop an application that is available across the world, you have to localize it into different languages. When UI is localized, it\u2019s important for the translator to see the context of a word or a phrase, that is the specific screen. With Kaspresso, translators can automatically take a screenshot of any screen. It\u2019s incredibly fast, even for legacy screens, and you don't have to refactor or mock anything (see the manual ). Configurability You can tune any part of Kaspresso (read more ) Robolectric support You can run your UI-tests on the JVM environment. Additionally, almost all interceptors improving stability, readability and other will work. Read more . Allure support Kaspresso can generate very detailed Allure-reports for each test: More information is available here . Jetpack Compose support (Early access) Now, you can write your Kaspresso tests for Jetpack Compose screens! DSL and all principles are the same. So, you will not see any difference between tests for View screens and for Compose screens. More information is available here . Keep in mind it's early access that may contain bugs. Also, API can be changed, but we are going to avoid it. Be free to create relative issues if you've encountered with any kind of problem. Philosophy The tool itself, even the perfect one, can not solve all the problems in writing UI tests. It\u2019s important to know how to write tests and how to organize the entire process. Our team has great experience in introducing autotests in different companies. We shared our knowledge on Wiki . Wiki For all information check Kaspresso wiki Samples All samples are available in the samples folder. Most of the samples require AdbServer. To start AdbServer you should do the following steps: 1. Go to the Kaspresso folder cd ~/Workspace/Kaspresso 2. Start adbserver-desktop.jar java -jar artifacts/adbserver-desktop.jar Existing issues All existing issues in Kaspresso can be found here Breaking changes Breaking changes can be found here Contribution Kaspresso is an open source project, so you are welcome to contribute (see the Contribution Guidelines ). License Kaspresso is available under the Apache License, Version 2.0 .","title":"About Kaspresso"},{"location":"#kaspresso","text":"Kaspresso is a framework for Android UI testing. Based on Espresso and UI Automator , Kaspresso provides a wide range of additional features, such as: 100% stability, no flakiness. Jetpack Compose support [Early access] . Significantly faster execution of UI Automator commands. With Kaspresso, some UI Automator commands run 10 times faster ! Excellent readability due to human DSL. Incredible mechanism of interceptors that allows you to catch all actions and assertions in one place. Full logging. Ability to call ADB commands. UI tests writing philosophy, implemented with DSL. Features screenshotting. Robolectric support. Allure support. And many more!","title":"Kaspresso"},{"location":"#integration","text":"To integrate Kaspresso into your project: 1. If the mavenCentral repository does not exist, include it to your root build.gradle file: allprojects { repositories { mavenCentral () } } Add a dependency to build.gradle : dependencies { androidTestImplementation 'com.kaspersky.android-components:kaspresso:<latest_version>' // Allure support androidTestImplementation \"com.kaspersky.android-components:kaspresso-allure-support:<latest_version>\" // Jetpack Compose support androidTestImplementation \"com.kaspersky.android-components:kaspresso-compose-support:<latest_version>\" } If you are still using the old Android Support libraries, we strongly recommend to migrate to AndroidX. The last version with Android Support libraries is: dependencies { androidTestImplementation 'com.kaspersky.android-components:kaspresso:1.0.1-support' }","title":"Integration"},{"location":"#tutorial-new","text":"See our website for a step by step guide.","title":"Tutorial NEW"},{"location":"#capabilities-of-kaspresso","text":"","title":"Capabilities of Kaspresso"},{"location":"#readability","text":"We like the syntax that Kakao applies to write UI tests. This wrapper over Espresso uses the Kotlin DSL approach, that makes the code significantly shorter and more readable. See the difference: Espresso : @Test fun testFirstFeature () { onView ( withId ( R . id . toFirstFeature )) . check ( ViewAssertions . matches ( ViewMatchers . withEffectiveVisibility ( ViewMatchers . Visibility . VISIBLE ))) onView ( withId ( R . id . toFirstFeature )). perform ( click ()) } Kakao : @Test fun testFirstFeature () { mainScreen { toFirstFeatureButton { isVisible () click () } } } We used the same approach to develop our own wrapper over UI Automator, and we called it Kautomator . Take a look at the code below: UI Automator : val instrumentation : Instrumentation = InstrumentationRegistry . getInstrumentation () val uiDevice = UiDevice . getInstance ( instrumentation ) val uiObject = uiDevice . wait ( Until . findObject ( By . res ( \"com.kaspersky.kaspresso.sample_kautomator\" , \"editText\" ) ), 2 _000 ) uiObject . text = \"Kaspresso\" assertEquals ( uiObject . text , \"Kaspresso\" ) Kautomator : MainScreen { simpleEditText { replaceText ( \"Kaspresso\" ) hasText ( \"Kaspresso\" ) } } Since Kakao and Kautomator provide almost identical APIs, you don\u2019t have to care about what is under the hood of your tests, either Espresso or UI Automator. With Kaspresso, you write the same tests for both. However, Kakao and Kautomator themselves don't help you to see the relation between the test and the corresponding test case. Also, a long test often becomes a giant piece of code that is impossible to split into smaller parts. That's why we have created an additional Kotlin DSL that allows you to read your test more easily. See the example below: @Test fun shouldPassOnNoInternetScanTest () = beforeTest { activityTestRule . launchActivity ( null ) // some things with the state }. afterTest { // some things with the state }. run { step ( \"Open Simple Screen\" ) { MainScreen { nextButton { isVisible () click () } } } step ( \"Click button_1 and check button_2\" ) { SimpleScreen { button1 { click () } button2 { isVisible () } } } step ( \"Click button_2 and check edit\" ) { SimpleScreen { button2 { click () } edit { flakySafely ( timeoutMs = 7000 ) { isVisible () } hasText ( R . string . text_edit_text ) } } } step ( \"Check all possibilities of edit\" ) { scenario ( CheckEditScenario () ) } }","title":"Readability"},{"location":"#stability","text":"Sometimes your UI test passes ten times, then breaks on the eleventh attempt for some mysterious reason. It\u2019s called flakiness . The most popular reason for flakiness is the instability of the UI tests libraries, such as Espresso and UI Automator. To eliminate this instability, Kaspresso uses DSL wrappers and interceptors .","title":"Stability"},{"location":"#ui-test-libraries-acceleration","text":"Let\u2019s watch some short video that shows the difference between the original UI Automator (on the right) and the accelerated one (on the left). Here is a short explanation of why it is possible.","title":"UI test libraries acceleration"},{"location":"#interceptors","text":"We developed Kaspresso behavior interceptors on the base of Kakao/Kautomator Interceptors to catch failures. Thanks to interceptors, you can do a lot of useful things, such as: * add custom actions to each library operation like writing a log or taking a screenshot; * overcome flaky library operations by re-running failed actions, scrolling the parent layout or removing the android system dialog; and many more (see the manual ).","title":"Interceptors"},{"location":"#writing-readable-logs","text":"Kaspresso writes its own logs, detailed and readable:","title":"Writing readable logs"},{"location":"#ability-to-call-adb-commands","text":"Espresso and UI Automator don't allow to call ADB commands from inside a test. To fix this problem, we developed Autotest AdbServer (see the wiki ).","title":"Ability to call ADB commands"},{"location":"#ability-to-work-with-android-system","text":"You can use Kaspresso classes to work with Android System. For example, with the Device class you can: * push/pull files, * enable/disable network, * give permissions like a user does, * emulate phone calls, * take screenshots, * enable/disable GPS, * set geolocation, * enable/disable accessibility, * change the app language, * collect and parse the logcat output. (see more about the Device class ).","title":"Ability to work with Android System"},{"location":"#features-screenshotting","text":"If you develop an application that is available across the world, you have to localize it into different languages. When UI is localized, it\u2019s important for the translator to see the context of a word or a phrase, that is the specific screen. With Kaspresso, translators can automatically take a screenshot of any screen. It\u2019s incredibly fast, even for legacy screens, and you don't have to refactor or mock anything (see the manual ).","title":"Features screenshotting"},{"location":"#configurability","text":"You can tune any part of Kaspresso (read more )","title":"Configurability"},{"location":"#robolectric-support","text":"You can run your UI-tests on the JVM environment. Additionally, almost all interceptors improving stability, readability and other will work. Read more .","title":"Robolectric support"},{"location":"#allure-support","text":"Kaspresso can generate very detailed Allure-reports for each test: More information is available here .","title":"Allure support"},{"location":"#jetpack-compose-support-early-access","text":"Now, you can write your Kaspresso tests for Jetpack Compose screens! DSL and all principles are the same. So, you will not see any difference between tests for View screens and for Compose screens. More information is available here . Keep in mind it's early access that may contain bugs. Also, API can be changed, but we are going to avoid it. Be free to create relative issues if you've encountered with any kind of problem.","title":"Jetpack Compose support (Early access)"},{"location":"#philosophy","text":"The tool itself, even the perfect one, can not solve all the problems in writing UI tests. It\u2019s important to know how to write tests and how to organize the entire process. Our team has great experience in introducing autotests in different companies. We shared our knowledge on Wiki .","title":"Philosophy"},{"location":"#wiki","text":"For all information check Kaspresso wiki","title":"Wiki"},{"location":"#samples","text":"All samples are available in the samples folder. Most of the samples require AdbServer. To start AdbServer you should do the following steps: 1. Go to the Kaspresso folder cd ~/Workspace/Kaspresso 2. Start adbserver-desktop.jar java -jar artifacts/adbserver-desktop.jar","title":"Samples"},{"location":"#existing-issues","text":"All existing issues in Kaspresso can be found here","title":"Existing issues"},{"location":"#breaking-changes","text":"Breaking changes can be found here","title":"Breaking changes"},{"location":"#contribution","text":"Kaspresso is an open source project, so you are welcome to contribute (see the Contribution Guidelines ).","title":"Contribution"},{"location":"#license","text":"Kaspresso is available under the Apache License, Version 2.0 .","title":"License"},{"location":"Home/Breaking-changes/","text":"Breaking changes 1.2.0 We've totally reworked AdbServer and Kaspresso 1.2.0 works only with new artifacts/adbserver-desktop.jar The old version artifacts/desktop_1_1_0.jar is also available for use with older versions of Kaspresso. If you use device.logcat in your tests, you should call device.logcat.disableChatty in the before section of your test. In previous version of Kaspresso, device.logcat.disableChatty was called automatically during initialization. This resulted in the need to always run AdbServer before tests. 1.2.1 Kaspresso migrated to a new version of Kakao which has io.github.kakaocup.kakao package name. Replace all imports using command find . -type f \\( -name \"*.kt\" -o -name \"*.java\" \\) -print0 | xargs -0 sed -i '' -e 's/com.agoda/io.github.kakaocup/g' or using global replacement tool in IDE.","title":"Breaking changes"},{"location":"Home/Breaking-changes/#breaking-changes","text":"","title":"Breaking changes"},{"location":"Home/Breaking-changes/#120","text":"We've totally reworked AdbServer and Kaspresso 1.2.0 works only with new artifacts/adbserver-desktop.jar The old version artifacts/desktop_1_1_0.jar is also available for use with older versions of Kaspresso. If you use device.logcat in your tests, you should call device.logcat.disableChatty in the before section of your test. In previous version of Kaspresso, device.logcat.disableChatty was called automatically during initialization. This resulted in the need to always run AdbServer before tests.","title":"1.2.0"},{"location":"Home/Breaking-changes/#121","text":"Kaspresso migrated to a new version of Kakao which has io.github.kakaocup.kakao package name. Replace all imports using command find . -type f \\( -name \"*.kt\" -o -name \"*.java\" \\) -print0 | xargs -0 sed -i '' -e 's/com.agoda/io.github.kakaocup/g' or using global replacement tool in IDE.","title":"1.2.1"},{"location":"Home/Contribution_guide/","text":"Contribution guide \u0421ode contribution workflow Find an open issue or create a new issue on issue tracker for the feature you want to contribute. Fork the project on GitHub. You need to create a feature-branch for your work on your fork, as this way you be able to submit a pull request. Make any necessary changes to the source code. Add tests that verify that your contribution works as expected and modify existing tests if required. Run all unit and UI tests and make sure all of them pass. Run code coverage to check if the lines of code you added are covered by unit tests. Once your feature is complete, prepare the commit with appropriate message and the issue number. Create a pull request and wait for the users to review. When you submit a pull request, please, agree to the terms of CLA . Once everything is done, your pull request gets merged. Your feature will be available with the next release and your name will be added to AUTHORS . Branch naming issue-***/detailed_description. Example: issue-306/fix-padding-breaks-autoscroll-interceptor Commits The commit message should begin with: \"Issue #***: ...\". Example: \"Issue #306: Fixed padding-breaks autoscroll interceptor\".","title":"Contribution guide"},{"location":"Home/Contribution_guide/#contribution-guide","text":"","title":"Contribution guide"},{"location":"Home/Contribution_guide/#ode-contribution-workflow","text":"Find an open issue or create a new issue on issue tracker for the feature you want to contribute. Fork the project on GitHub. You need to create a feature-branch for your work on your fork, as this way you be able to submit a pull request. Make any necessary changes to the source code. Add tests that verify that your contribution works as expected and modify existing tests if required. Run all unit and UI tests and make sure all of them pass. Run code coverage to check if the lines of code you added are covered by unit tests. Once your feature is complete, prepare the commit with appropriate message and the issue number. Create a pull request and wait for the users to review. When you submit a pull request, please, agree to the terms of CLA . Once everything is done, your pull request gets merged. Your feature will be available with the next release and your name will be added to AUTHORS .","title":"\u0421ode contribution workflow"},{"location":"Home/Contribution_guide/#branch-naming","text":"issue-***/detailed_description. Example: issue-306/fix-padding-breaks-autoscroll-interceptor","title":"Branch naming"},{"location":"Home/Contribution_guide/#commits","text":"The commit message should begin with: \"Issue #***: ...\". Example: \"Issue #306: Fixed padding-breaks autoscroll interceptor\".","title":"Commits"},{"location":"Home/Kaspresso%20users/","text":"Our Users","title":"Our users"},{"location":"Home/Kaspresso%20users/#our-users","text":"","title":"Our Users"},{"location":"Home/Kaspresso-in-articles/","text":"Kaspresso in articles [RU] \u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u041c\u0430\u0446\u044e\u043a \u2014 Kaspresso: \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0436\u0434\u0430\u043b\u0438 [RU] \u0418\u0432\u0430\u043d \u0424\u0435\u0434\u044f\u043d\u0438\u043d \u2014 Kaspresso tutorials. \u0427\u0430\u0441\u0442\u044c 1. \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 [EN] Eugene Matsyuk \u2014 Kaspresso: The autotest framework that you have been looking forward to. Part I Do you want your article to be included in this list? Everything is simple! Write an article, send it to us and we will add it to this list!","title":"Kaspresso in articles"},{"location":"Home/Kaspresso-in-articles/#kaspresso-in-articles","text":"[RU] \u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u041c\u0430\u0446\u044e\u043a \u2014 Kaspresso: \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0436\u0434\u0430\u043b\u0438 [RU] \u0418\u0432\u0430\u043d \u0424\u0435\u0434\u044f\u043d\u0438\u043d \u2014 Kaspresso tutorials. \u0427\u0430\u0441\u0442\u044c 1. \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 [EN] Eugene Matsyuk \u2014 Kaspresso: The autotest framework that you have been looking forward to. Part I Do you want your article to be included in this list? Everything is simple! Write an article, send it to us and we will add it to this list!","title":"Kaspresso in articles"},{"location":"Home/Kaspresso-in-videos/","text":"Kaspresso in videos [RU] \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u041c\u043e\u0432\u0447\u0430\u043d, \u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u041c\u0430\u0446\u044e\u043a \u2014 \u041a\u0430\u043a \u043d\u0430\u0447\u0430\u0442\u044c \u043f\u0438\u0441\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u044b \u0438 \u043d\u0435 \u0441\u043e\u0439\u0442\u0438 \u0441 \u0443\u043c\u0430 [RU] \u0415\u0433\u043e\u0440 \u041a\u0443\u0440\u043d\u0438\u043a\u043e\u0432 \u2014 \u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435, \u0447\u0442\u043e \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f UI-\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f [RU] \u0412\u043e\u0440\u043a\u0448\u043e\u043f \u043f\u043e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c. 19-12-2019 [RU] \u0420\u0443\u0441\u043b\u0430\u043d \u041c\u0438\u043d\u0433\u0430\u043b\u0438\u0435\u0432 - Live-coding: \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0435 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u044b \u0441 \u043d\u0443\u043b\u044f [RU] \"Kaspresso\" \u0441 \u0415\u0432\u0433\u0435\u043d\u0438\u0435\u043c \u041c\u0430\u0446\u044e\u043a\u043e\u043c \u0438 \u0415\u0433\u043e\u0440\u043e\u043c \u041a\u0443\u0440\u043d\u0438\u043a\u043e\u0432\u044b\u043c [RU] Kaspresso: Q&A Session 9.04.20 [EN] Eugene Matsyuk \u2014 How to start writing autotests and not go crazy","title":"Kasspresso in videos"},{"location":"Home/Kaspresso-in-videos/#kaspresso-in-videos","text":"[RU] \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u041c\u043e\u0432\u0447\u0430\u043d, \u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u041c\u0430\u0446\u044e\u043a \u2014 \u041a\u0430\u043a \u043d\u0430\u0447\u0430\u0442\u044c \u043f\u0438\u0441\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u044b \u0438 \u043d\u0435 \u0441\u043e\u0439\u0442\u0438 \u0441 \u0443\u043c\u0430 [RU] \u0415\u0433\u043e\u0440 \u041a\u0443\u0440\u043d\u0438\u043a\u043e\u0432 \u2014 \u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435, \u0447\u0442\u043e \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f UI-\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f [RU] \u0412\u043e\u0440\u043a\u0448\u043e\u043f \u043f\u043e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c. 19-12-2019 [RU] \u0420\u0443\u0441\u043b\u0430\u043d \u041c\u0438\u043d\u0433\u0430\u043b\u0438\u0435\u0432 - Live-coding: \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0435 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u044b \u0441 \u043d\u0443\u043b\u044f [RU] \"Kaspresso\" \u0441 \u0415\u0432\u0433\u0435\u043d\u0438\u0435\u043c \u041c\u0430\u0446\u044e\u043a\u043e\u043c \u0438 \u0415\u0433\u043e\u0440\u043e\u043c \u041a\u0443\u0440\u043d\u0438\u043a\u043e\u0432\u044b\u043c [RU] Kaspresso: Q&A Session 9.04.20 [EN] Eugene Matsyuk \u2014 How to start writing autotests and not go crazy","title":"Kaspresso in videos"},{"location":"Issues/","text":"Found an issue? Kaspresso has a great community that helps make it better by suggesting new ideas, reporting bugs with detailed descriptions and making pull requests. Creating new issues In our Issues tab you can create a new one. There are two most popular types of issues: bug and enhancement. Template for bugs If you found a bug you can create new issue . Enter a title and provide a description (bug details) in the input fields. We will be very grateful if you use this template: Description: ... Expected Behavior: ... Actual Behavior: ... Steps to Reproduce the Problem: ... Specifications: ... For example: When using newer versions of the library, Gradle is unable to find and download the library sources (which allow you to read and debug the source code directly on the IDE). Expected Behavior Projects with the Kaspresso dependency should be able to download sources. Actual Behavior When trying do download sources, the following error appears: * What went wrong: Execution failed for task ':app:DownloadSources'. > Could not resolve all files for configuration ':app:downloadSources_10c6f7e9-408b-4f6a-8bd9-fe15e255981e'. > Could not find com.kaspersky.android-components:kaspresso:1.4.1@aar. Searched in the following locations: - https://dl.google.com/dl/android/maven2/com/kaspersky/android-components/kaspresso/1.4.1@aar/kaspresso-1.4.1@aar.pom - https://repo.maven.apache.org/maven2/com/kaspersky/android-components/kaspresso/1.4.1@aar/kaspresso-1.4.1@aar.pom Required by: project :app Steps to Reproduce the Problem Create an empty project; Add the dependency androidTestImplementation \"com.kaspersky.android-components:kaspresso:1.4.1\"; Create a test using classes from Kaspresso; Try to access the source (on IntelliJ IDE, Ctrl+left click a Kaspresso class name/method call); You will only be able to see the decompiled bytecode. Specifications Library version: at least >= 1.4.1 IDE used: Android Studio Observations I haven't tested on all versions, but sources were able to be downloaded at least up to version 1.2.1. Template for enhancements If you have an idea of a new enhancement you can create new issue . Enter a title and provide a description in the input fields. We will be very grateful if you use this template: Description: ... How the new enhancement will help?: ... Existing analogs (with links): ... Pull requests are allways welcome If you have not only an issue, but also a ready implementation, you can always submit the pull request on Github. Thanks!","title":"Found an issue?"},{"location":"Issues/#found-an-issue","text":"Kaspresso has a great community that helps make it better by suggesting new ideas, reporting bugs with detailed descriptions and making pull requests.","title":"Found an issue?"},{"location":"Issues/#creating-new-issues","text":"In our Issues tab you can create a new one. There are two most popular types of issues: bug and enhancement.","title":"Creating new issues"},{"location":"Issues/#template-for-bugs","text":"If you found a bug you can create new issue . Enter a title and provide a description (bug details) in the input fields. We will be very grateful if you use this template: Description: ... Expected Behavior: ... Actual Behavior: ... Steps to Reproduce the Problem: ... Specifications: ... For example: When using newer versions of the library, Gradle is unable to find and download the library sources (which allow you to read and debug the source code directly on the IDE). Expected Behavior Projects with the Kaspresso dependency should be able to download sources. Actual Behavior When trying do download sources, the following error appears: * What went wrong: Execution failed for task ':app:DownloadSources'. > Could not resolve all files for configuration ':app:downloadSources_10c6f7e9-408b-4f6a-8bd9-fe15e255981e'. > Could not find com.kaspersky.android-components:kaspresso:1.4.1@aar. Searched in the following locations: - https://dl.google.com/dl/android/maven2/com/kaspersky/android-components/kaspresso/1.4.1@aar/kaspresso-1.4.1@aar.pom - https://repo.maven.apache.org/maven2/com/kaspersky/android-components/kaspresso/1.4.1@aar/kaspresso-1.4.1@aar.pom Required by: project :app Steps to Reproduce the Problem Create an empty project; Add the dependency androidTestImplementation \"com.kaspersky.android-components:kaspresso:1.4.1\"; Create a test using classes from Kaspresso; Try to access the source (on IntelliJ IDE, Ctrl+left click a Kaspresso class name/method call); You will only be able to see the decompiled bytecode. Specifications Library version: at least >= 1.4.1 IDE used: Android Studio Observations I haven't tested on all versions, but sources were able to be downloaded at least up to version 1.2.1.","title":"Template for bugs"},{"location":"Issues/#template-for-enhancements","text":"If you have an idea of a new enhancement you can create new issue . Enter a title and provide a description in the input fields. We will be very grateful if you use this template: Description: ... How the new enhancement will help?: ... Existing analogs (with links): ...","title":"Template for enhancements"},{"location":"Issues/#pull-requests-are-allways-welcome","text":"If you have not only an issue, but also a ready implementation, you can always submit the pull request on Github.","title":"Pull requests are allways welcome"},{"location":"Issues/#thanks","text":"","title":"Thanks!"},{"location":"Issues/Storage_issue/","text":"Storage issues Kaspresso can use external storage to save various data about executed tests. The example of such data is screenshots, xml dumps, logs, video and anymore. But, new Android OS provides absolutely new way to work with external storage - Scoped Storage. Currently, we are working on the support of Scoped Storage. While Scoped Storage support is on the way, there is an option to request different permissions to make an access to saved data possible on any Android OS. Here, it's a detailed instruction: 1. AndroidManifest.xml (in your debug build variant to keep production manifest without any changes) # Please, add these permissions <uses-permission android:name= \"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.READ_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.MANAGE_EXTERNAL_STORAGE\" /> <application # storage support for Android API 29 android:requestLegacyExternalStorage= \"true\" ... </application > 2. Your test class: class SampleTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple ( // simple/advanced - it doesn't matter customize = { // storage support for Android API 30+ if ( isAndroidRuntime ) { UiDevice . getInstance ( instrumentation ) . executeShellCommand ( \"appops set --uid ${ InstrumentationRegistry . getInstrumentation (). targetContext . packageName } MANAGE_EXTERNAL_STORAGE allow\" ) } } ) ) { // storage support for Android API 29- @get : Rule val runtimePermissionRule : GrantPermissionRule = GrantPermissionRule . grant ( Manifest . permission . WRITE_EXTERNAL_STORAGE , Manifest . permission . READ_EXTERNAL_STORAGE ) //... } Remember, it's a temporary working solution. A little bit later, Kaspresso will use external storage only through Scoped Storage and you will not be forced to request all mentioned permissions.","title":"Storage issues"},{"location":"Issues/Storage_issue/#storage-issues","text":"Kaspresso can use external storage to save various data about executed tests. The example of such data is screenshots, xml dumps, logs, video and anymore. But, new Android OS provides absolutely new way to work with external storage - Scoped Storage. Currently, we are working on the support of Scoped Storage. While Scoped Storage support is on the way, there is an option to request different permissions to make an access to saved data possible on any Android OS. Here, it's a detailed instruction: 1. AndroidManifest.xml (in your debug build variant to keep production manifest without any changes) # Please, add these permissions <uses-permission android:name= \"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.READ_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.MANAGE_EXTERNAL_STORAGE\" /> <application # storage support for Android API 29 android:requestLegacyExternalStorage= \"true\" ... </application > 2. Your test class: class SampleTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple ( // simple/advanced - it doesn't matter customize = { // storage support for Android API 30+ if ( isAndroidRuntime ) { UiDevice . getInstance ( instrumentation ) . executeShellCommand ( \"appops set --uid ${ InstrumentationRegistry . getInstrumentation (). targetContext . packageName } MANAGE_EXTERNAL_STORAGE allow\" ) } } ) ) { // storage support for Android API 29- @get : Rule val runtimePermissionRule : GrantPermissionRule = GrantPermissionRule . grant ( Manifest . permission . WRITE_EXTERNAL_STORAGE , Manifest . permission . READ_EXTERNAL_STORAGE ) //... } Remember, it's a temporary working solution. A little bit later, Kaspresso will use external storage only through Scoped Storage and you will not be forced to request all mentioned permissions.","title":"Storage issues"},{"location":"Tutorial/","text":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0412\u0441\u0435\u043c \u043f\u0440\u0438\u0432\u0435\u0442! \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0437\u0434\u0435\u0441\u044c, \u0437\u043d\u0430\u0447\u0438\u0442 \u0432\u044b \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442\u0435\u0441\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c\u0438 \u043f\u043e\u0434 Android. Kaspresso - \u043e\u0442\u043b\u0438\u0447\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043c\u043e\u0447\u044c \u0432\u0430\u043c. \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043d\u0430\u0448\u0435\u043c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0434\u0435\u0441\u044c . \u041a\u043e\u043c\u0430\u043d\u0434\u0430 Kaspresso \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043b\u0430 Tutorial \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 codelabs. \u042d\u0442\u043e\u0442 Tutorial \u043f\u0440\u0438\u0437\u0432\u0430\u043d \u043f\u043e\u043c\u043e\u0447\u044c \u0441 \u043f\u0435\u0440\u0432\u044b\u043c\u0438 \u0448\u0430\u0433\u0430\u043c\u0438 \u0432 Kaspresso \u0438 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u0435\u0433\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044f\u043c\u0438. \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 Tutorial Tutorial \u0440\u0430\u0437\u0431\u0438\u0442 \u043d\u0430 \u0448\u0430\u0433\u0438 (\u0443\u0440\u043e\u043a\u0438). \u041a\u0430\u0436\u0434\u044b\u0439 \u0443\u0440\u043e\u043a \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043a\u0440\u0430\u0442\u043a\u043e\u0433\u043e \u043e\u0431\u0437\u043e\u0440\u0430 \u0438 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u043c\u0438 \u0438\u0442\u043e\u0433\u0430\u043c\u0438 \u0438 \u0432\u044b\u0432\u043e\u0434\u0430\u043c\u0438. \u041a\u0430\u043a \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c \u044d\u0442\u043e\u0442 Tutorial? \u041c\u044b \u0441\u0442\u0440\u0435\u043c\u0438\u043c\u0441\u044f \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0443\u0440\u043e\u043a\u0438 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u043c\u0438 \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430, \u043d\u043e \u044d\u0442\u043e \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f. \u0414\u043b\u044f \u043b\u0443\u0447\u0448\u0435\u0433\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0441 Kaspresso \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430 \u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c. \u0424\u043e\u0440\u043c\u0430\u0442 codelab \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0441\u043e\u043f\u0440\u043e\u0432\u043e\u0436\u0434\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u043d\u0430 \u0441\u0432\u043e\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435, \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044f \u0448\u0430\u0433 \u0437\u0430 \u0448\u0430\u0433\u043e\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0438\u0437 \u0443\u0440\u043e\u043a\u043e\u0432. \u0412 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 Kaspresso \u0432 \u043f\u0430\u043f\u043a\u0435 tutorial \u043b\u0435\u0436\u0438\u0442 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u043a\u0430\u043a \u0435\u0433\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c. \u0412 \u0432\u0435\u0442\u043a\u0435 tutorial_results \u043c\u043e\u0436\u043d\u043e \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0438\u0437 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b\u0430. \u0427\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0437\u043d\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f Tutorial? \u041c\u044b \u043d\u0435 \u0441\u0442\u0430\u0432\u0438\u043c \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0431\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0443 \"\u041d\u0430\u0443\u0447\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c \u0441 \u043d\u0443\u043b\u044f\", \u043d\u043e \u0432 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u044f \u043d\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u044b\u0445 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0437\u043d\u0430\u043d\u0438\u044f\u043c \u0438 \u043e\u043f\u044b\u0442\u0443 \u0438 \u0441\u0442\u0430\u0440\u0430\u0435\u043c\u0441\u044f \u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043d\u043e\u0432\u0438\u0447\u043a\u0430\u043c \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445 \u0438 Android-\u0435. \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e Kaspresso \u0431\u0435\u0437 \u0442\u0435\u0440\u043c\u0438\u043d\u043e\u0432 \u0438\u0437 \u044f\u0437\u044b\u043a\u043e\u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f Java \u0438 Kotlin, \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u043e\u0432 Espresso, Kakao, UiAutomator \u0438 \u043f\u0440\u043e\u0447\u0438\u0445, \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b Android \u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u043a \u043e\u0431\u043b\u0430\u0441\u0442\u0438 IT. \u0412\u0441\u0435 \u0436\u0435, \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0430\u043a\u0446\u0435\u043d\u0442 \u0441\u0434\u0435\u043b\u0430\u043d \u0438\u043c\u0435\u043d\u043d\u043e \u043d\u0430 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0438 \u0441\u0430\u043c\u043e\u0433\u043e Kaspresso, \u0430 \u0432\u043e \u0432\u0441\u0435\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0435\u0440\u043c\u0438\u043d\u043e\u0432 \u043c\u044b \u0434\u0435\u043b\u0438\u043c\u0441\u044f \u0441\u0441\u044b\u043b\u043a\u0430\u043c\u0438 \u043d\u0430 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0433\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0438 \u043b\u0443\u0447\u0448\u0435\u0433\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u044f. \u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0448\u043b\u0438 \u043e\u043f\u0435\u0447\u0430\u0442\u043a\u0443, \u043e\u0448\u0438\u0431\u043a\u0443 \u0438\u043b\u0438 \u043d\u0435\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0432 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0435, \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u0442\u044c \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u044c Tutorial \u043d\u043e\u0432\u044b\u043c\u0438 \u0443\u0440\u043e\u043a\u0430\u043c\u0438, \u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c Issue \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 Kaspresso \u0438\u043b\u0438 \u043e\u0444\u043e\u0440\u043c\u0438\u0442\u044c Pull request (\u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0438\u0437 Tutorial \u043b\u0435\u0436\u0430\u0442 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u0432 \u043f\u0430\u043f\u043a\u0435 docs ). \u0415\u0441\u043b\u0438 Tutorial \u043d\u0435 \u043f\u043e\u043c\u043e\u0433 \u0440\u0435\u0448\u0438\u0442\u044c \u0432\u0430\u0448 \u0432\u043e\u043f\u0440\u043e\u0441, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0438\u0441\u043a\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 Wiki \u0438\u043b\u0438 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0430\u0445 Kaspresso in articles \u0438 Kaspresso in video . \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c\u0441\u044f \u043a \u043d\u0430\u0448\u0438\u043c Telegram-\u043a\u0430\u043d\u0430\u043b\u0430\u043c ru \u0438 en \u0438 \u0437\u0430\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u0442\u0430\u043c. \u0421\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u043d\u0430\u0448 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u044e \u0437\u0432\u0435\u0437\u0434\u0443 \u043d\u0430\u0448\u0435\u043c\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0443 \u043d\u0430 Github .","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"},{"location":"Tutorial/#_1","text":"\u0412\u0441\u0435\u043c \u043f\u0440\u0438\u0432\u0435\u0442! \u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0437\u0434\u0435\u0441\u044c, \u0437\u043d\u0430\u0447\u0438\u0442 \u0432\u044b \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442\u0435\u0441\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c\u0438 \u043f\u043e\u0434 Android. Kaspresso - \u043e\u0442\u043b\u0438\u0447\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043c\u043e\u0447\u044c \u0432\u0430\u043c. \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043d\u0430\u0448\u0435\u043c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0434\u0435\u0441\u044c . \u041a\u043e\u043c\u0430\u043d\u0434\u0430 Kaspresso \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043b\u0430 Tutorial \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 codelabs. \u042d\u0442\u043e\u0442 Tutorial \u043f\u0440\u0438\u0437\u0432\u0430\u043d \u043f\u043e\u043c\u043e\u0447\u044c \u0441 \u043f\u0435\u0440\u0432\u044b\u043c\u0438 \u0448\u0430\u0433\u0430\u043c\u0438 \u0432 Kaspresso \u0438 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u0435\u0433\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044f\u043c\u0438.","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"},{"location":"Tutorial/#tutorial","text":"Tutorial \u0440\u0430\u0437\u0431\u0438\u0442 \u043d\u0430 \u0448\u0430\u0433\u0438 (\u0443\u0440\u043e\u043a\u0438). \u041a\u0430\u0436\u0434\u044b\u0439 \u0443\u0440\u043e\u043a \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043a\u0440\u0430\u0442\u043a\u043e\u0433\u043e \u043e\u0431\u0437\u043e\u0440\u0430 \u0438 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u043c\u0438 \u0438\u0442\u043e\u0433\u0430\u043c\u0438 \u0438 \u0432\u044b\u0432\u043e\u0434\u0430\u043c\u0438.","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 Tutorial"},{"location":"Tutorial/#tutorial_1","text":"\u041c\u044b \u0441\u0442\u0440\u0435\u043c\u0438\u043c\u0441\u044f \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0443\u0440\u043e\u043a\u0438 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u043c\u0438 \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430, \u043d\u043e \u044d\u0442\u043e \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f. \u0414\u043b\u044f \u043b\u0443\u0447\u0448\u0435\u0433\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0441 Kaspresso \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430 \u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c. \u0424\u043e\u0440\u043c\u0430\u0442 codelab \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0441\u043e\u043f\u0440\u043e\u0432\u043e\u0436\u0434\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u043d\u0430 \u0441\u0432\u043e\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435, \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044f \u0448\u0430\u0433 \u0437\u0430 \u0448\u0430\u0433\u043e\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0438\u0437 \u0443\u0440\u043e\u043a\u043e\u0432. \u0412 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 Kaspresso \u0432 \u043f\u0430\u043f\u043a\u0435 tutorial \u043b\u0435\u0436\u0438\u0442 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u043a\u0430\u043a \u0435\u0433\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c. \u0412 \u0432\u0435\u0442\u043a\u0435 tutorial_results \u043c\u043e\u0436\u043d\u043e \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0438\u0437 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b\u0430.","title":"\u041a\u0430\u043a \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c \u044d\u0442\u043e\u0442 Tutorial?"},{"location":"Tutorial/#tutorial_2","text":"\u041c\u044b \u043d\u0435 \u0441\u0442\u0430\u0432\u0438\u043c \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0431\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0443 \"\u041d\u0430\u0443\u0447\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c \u0441 \u043d\u0443\u043b\u044f\", \u043d\u043e \u0432 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u044f \u043d\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u044b\u0445 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0437\u043d\u0430\u043d\u0438\u044f\u043c \u0438 \u043e\u043f\u044b\u0442\u0443 \u0438 \u0441\u0442\u0430\u0440\u0430\u0435\u043c\u0441\u044f \u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043d\u043e\u0432\u0438\u0447\u043a\u0430\u043c \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445 \u0438 Android-\u0435. \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e Kaspresso \u0431\u0435\u0437 \u0442\u0435\u0440\u043c\u0438\u043d\u043e\u0432 \u0438\u0437 \u044f\u0437\u044b\u043a\u043e\u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f Java \u0438 Kotlin, \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u043e\u0432 Espresso, Kakao, UiAutomator \u0438 \u043f\u0440\u043e\u0447\u0438\u0445, \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b Android \u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u043a \u043e\u0431\u043b\u0430\u0441\u0442\u0438 IT. \u0412\u0441\u0435 \u0436\u0435, \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0430\u043a\u0446\u0435\u043d\u0442 \u0441\u0434\u0435\u043b\u0430\u043d \u0438\u043c\u0435\u043d\u043d\u043e \u043d\u0430 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0438 \u0441\u0430\u043c\u043e\u0433\u043e Kaspresso, \u0430 \u0432\u043e \u0432\u0441\u0435\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0435\u0440\u043c\u0438\u043d\u043e\u0432 \u043c\u044b \u0434\u0435\u043b\u0438\u043c\u0441\u044f \u0441\u0441\u044b\u043b\u043a\u0430\u043c\u0438 \u043d\u0430 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0433\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0438 \u043b\u0443\u0447\u0448\u0435\u0433\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u044f.","title":"\u0427\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0437\u043d\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f Tutorial?"},{"location":"Tutorial/#_2","text":"\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0448\u043b\u0438 \u043e\u043f\u0435\u0447\u0430\u0442\u043a\u0443, \u043e\u0448\u0438\u0431\u043a\u0443 \u0438\u043b\u0438 \u043d\u0435\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0432 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0435, \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u0442\u044c \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u044c Tutorial \u043d\u043e\u0432\u044b\u043c\u0438 \u0443\u0440\u043e\u043a\u0430\u043c\u0438, \u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c Issue \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 Kaspresso \u0438\u043b\u0438 \u043e\u0444\u043e\u0440\u043c\u0438\u0442\u044c Pull request (\u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0438\u0437 Tutorial \u043b\u0435\u0436\u0430\u0442 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u0432 \u043f\u0430\u043f\u043a\u0435 docs ). \u0415\u0441\u043b\u0438 Tutorial \u043d\u0435 \u043f\u043e\u043c\u043e\u0433 \u0440\u0435\u0448\u0438\u0442\u044c \u0432\u0430\u0448 \u0432\u043e\u043f\u0440\u043e\u0441, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0438\u0441\u043a\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 Wiki \u0438\u043b\u0438 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0430\u0445 Kaspresso in articles \u0438 Kaspresso in video . \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c\u0441\u044f \u043a \u043d\u0430\u0448\u0438\u043c Telegram-\u043a\u0430\u043d\u0430\u043b\u0430\u043c ru \u0438 en \u0438 \u0437\u0430\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 \u0442\u0430\u043c.","title":"\u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c"},{"location":"Tutorial/#_3","text":"\u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u043d\u0430\u0448 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u044e \u0437\u0432\u0435\u0437\u0434\u0443 \u043d\u0430\u0448\u0435\u043c\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0443 \u043d\u0430 Github .","title":"\u0421\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043f\u0430\u0441\u0438\u0431\u043e"},{"location":"Tutorial/Allure/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u0442\u043e, \u0437\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u0435\u043d Allure, \u043a\u043e\u0440\u043e\u0442\u043a\u043e \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u043e\u043d \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 Allure, \u043a\u0430\u043a \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0438 \u0430\u0440\u0442\u0435\u0444\u0430\u043a\u0442\u044b \u0442\u0435\u0441\u0442\u043e\u0432?","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Allure"},{"location":"Tutorial/Allure/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u0442\u043e, \u0437\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u0435\u043d Allure, \u043a\u043e\u0440\u043e\u0442\u043a\u043e \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u043e\u043d \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 Allure, \u043a\u0430\u043a \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0438 \u0430\u0440\u0442\u0435\u0444\u0430\u043a\u0442\u044b \u0442\u0435\u0441\u0442\u043e\u0432?","title":"Work in progress"},{"location":"Tutorial/Android_permissions/","text":"Work in progress \u0412\u0430\u0436\u043d\u043e! \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043d\u0430\u0448\u0443 \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 - \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0434\u043e\u043f \u043f\u0435\u0440\u043c\u0438\u0448\u0435\u043d \u043d\u0430 \u044d\u0442\u043e \u043d\u0435 \u043d\u0443\u0436\u0435\u043d. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0435\u0442\u044c \u043f\u0430\u0440\u043e\u0447\u043a\u0443 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432, \u0433\u0434\u0435 \u0432 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043d\u0443\u0436\u043d\u0430 \u0432\u044b\u0434\u0430\u0447\u0430 \u043f\u0435\u0440\u043c\u0438\u0448\u0435\u043d\u0430 - \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e TestRules","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Android permissions"},{"location":"Tutorial/Android_permissions/#work-in-progress","text":"\u0412\u0430\u0436\u043d\u043e! \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043d\u0430\u0448\u0443 \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 - \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0434\u043e\u043f \u043f\u0435\u0440\u043c\u0438\u0448\u0435\u043d \u043d\u0430 \u044d\u0442\u043e \u043d\u0435 \u043d\u0443\u0436\u0435\u043d. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0435\u0442\u044c \u043f\u0430\u0440\u043e\u0447\u043a\u0443 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432, \u0433\u0434\u0435 \u0432 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043d\u0443\u0436\u043d\u0430 \u0432\u044b\u0434\u0430\u0447\u0430 \u043f\u0435\u0440\u043c\u0438\u0448\u0435\u043d\u0430 - \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e TestRules","title":"Work in progress"},{"location":"Tutorial/Compose_and_continuously/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043e\u0431 \u044d\u0442\u0438\u0445 \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u0430\u0445 \u0438 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u043e\u0433\u0434\u0430 \u043e\u043d\u0438 \u043f\u043e\u043b\u0435\u0437\u043d\u044b. \u041c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u043b\u0443\u0447\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 matchers","title":"\u041c\u0435\u0442\u043e\u0434\u044b compose \u0438 continuously"},{"location":"Tutorial/Compose_and_continuously/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043e\u0431 \u044d\u0442\u0438\u0445 \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u0430\u0445 \u0438 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u043e\u0433\u0434\u0430 \u043e\u043d\u0438 \u043f\u043e\u043b\u0435\u0437\u043d\u044b. \u041c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u043b\u0443\u0447\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 matchers","title":"Work in progress"},{"location":"Tutorial/Compose_support/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e testTag-\u0438 \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u044b","title":"Compose support"},{"location":"Tutorial/Compose_support/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e testTag-\u0438 \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u044b","title":"Work in progress"},{"location":"Tutorial/Customviews/","text":"Work in progress \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u043a \u0434\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u0432\u044c\u044e\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u044e\u0442\u0441\u044f \u043e\u0442 ViewGroup, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f \u0432\u044c\u044e\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0438\u0441\u0443\u044e\u0442 \u043d\u0430 \u0445\u043e\u043b\u0441\u0442\u0435 \u041c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043d\u0430\u0439\u0442\u0438 \u0443 Kakao. \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435\u043c KBaseView, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 assertion \u0438 actions. \u041a\u0430\u043a \u044d\u0442\u0438 \u0432\u044c\u044e\u0445\u0438 \u043d\u0430\u0439\u0442\u0438 \u0432 \u0442\u0435\u0441\u0442-\u043a\u0435\u0439\u0441\u0435","title":"Custom views"},{"location":"Tutorial/Customviews/#work-in-progress","text":"\u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u043a \u0434\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u0432\u044c\u044e\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u044e\u0442\u0441\u044f \u043e\u0442 ViewGroup, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f \u0432\u044c\u044e\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0438\u0441\u0443\u044e\u0442 \u043d\u0430 \u0445\u043e\u043b\u0441\u0442\u0435 \u041c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043d\u0430\u0439\u0442\u0438 \u0443 Kakao. \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435\u043c KBaseView, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 assertion \u0438 actions. \u041a\u0430\u043a \u044d\u0442\u0438 \u0432\u044c\u044e\u0445\u0438 \u043d\u0430\u0439\u0442\u0438 \u0432 \u0442\u0435\u0441\u0442-\u043a\u0435\u0439\u0441\u0435","title":"Work in progress"},{"location":"Tutorial/Download_Kaspresso_project_and_Android_studio/","text":"\u0414\u0435\u043b\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u0448\u0430\u0433\u0438. \u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0441\u043a\u0430\u0447\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c Android studio \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043c \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440. \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c Android Studio Android Studio \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. \u041d\u0430\u043c \u043e\u043d\u0430 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 Android Studio, \u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u0448\u0430\u0433. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Download Android Studio. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0441\u043a\u0430\u0447\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0442\u0443\u0434\u0438\u0438. \u041c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439 \u0438\u043b\u0438 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 codelabs \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c. \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a Android Studio \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0447\u0435\u043d\u0430, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0435. \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u0414\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0431\u044b\u043b\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439 GIT. \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c GIT \u0438 \u0443\u0437\u043d\u0430\u0442\u044c \u043e \u043d\u0435\u043c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0434\u0435\u0441\u044c \u041a\u043e\u0433\u0434\u0430 GIT \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d, \u0442\u043e \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 . \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Code \u0438 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c Android Studio. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0440\u0430\u043d\u0435\u0435 \u043d\u0435 \u0431\u044b\u043b \u043e\u0442\u043a\u0440\u044b\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 \u0432 \u0441\u0442\u0443\u0434\u0438\u0438, \u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0443\u043d\u043a\u0442 Get From VCS \u0415\u0441\u043b\u0438 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u043e\u0435\u043a\u0442 \u0443\u0436\u0435 \u0431\u044b\u043b \u0437\u0430\u043f\u0443\u0449\u0435\u043d, \u0442\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441 GIT \u043c\u043e\u0436\u043d\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: File -> New -> Project From Version Control \u0412 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u043e\u043a\u043d\u0435 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 URL \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0430\u043f\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d Kaspresso \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 clone \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043c\u0435\u043d\u044e Android Studio \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Tools -> Device Manager \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u044f\u0432\u0438\u0441\u044f \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u043c\u0438 \u0438 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Create Device \u0423\u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \"\u0436\u0435\u043b\u0435\u0437\u0430\", \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u044e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0445\u043e\u0442\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"1\" \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d, \u043f\u043b\u0430\u043d\u0448\u0435\u0442, \u0442\u0435\u043b\u0435\u0432\u0438\u0437\u043e\u0440 \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435. \u041d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0422\u0435\u043b\u0435\u0444\u043e\u043d. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"2\" - \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b\u0430 \u043d\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u044b, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c Pixel 6. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Next \u0438 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u043c \u043d\u0430 \u043e\u043a\u043d\u043e \u0432\u044b\u0431\u043e\u0440\u0430 \u043e\u0431\u0440\u0430\u0437\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b: \u042d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u0431\u043e\u043b\u0435\u0435 \u0432\u0430\u0436\u0435\u043d \u0432 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 - \u0437\u0434\u0435\u0441\u044c \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c, \u043a\u0430\u043a\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e Android \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u044b\u0431\u0435\u0440\u0435\u043c R. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0443 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0441\u043f\u0440\u0430\u0432\u0430 \u043e\u0442 \u0431\u0443\u043a\u0432\u044b R, \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u043c. \u041a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u043e\u043a\u043e\u043d\u0447\u0435\u043d \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Finish: \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e R \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 Next: \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0438\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043e\u0433\u043e \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430, \u0447\u0442\u043e\u0431 \u0438\u0445 \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u043a\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439. \u0414\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u0446\u0435\u043b\u0435\u0439 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Finish. \u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043e \u0438 \u0433\u043e\u0442\u043e\u0432\u043e \u043a \u0440\u0430\u0431\u043e\u0442\u0435. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0433\u043e \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 Play \u043f\u0440\u0430\u0432\u0435\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430: \u0412 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 Android Studio \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c Hypervisor: \u0418\u0442\u043e\u0433 Android Studio \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430, \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d, \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u0442\u0435\u0441\u0442\u044b","title":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 \u0438 Android studio"},{"location":"Tutorial/Download_Kaspresso_project_and_Android_studio/#_1","text":"\u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0441\u043a\u0430\u0447\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c Android studio \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043c \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440.","title":"\u0414\u0435\u043b\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u0448\u0430\u0433\u0438. \u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435"},{"location":"Tutorial/Download_Kaspresso_project_and_Android_studio/#android-studio","text":"Android Studio \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. \u041d\u0430\u043c \u043e\u043d\u0430 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 Android Studio, \u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u0448\u0430\u0433. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Download Android Studio. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0441\u043a\u0430\u0447\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0442\u0443\u0434\u0438\u0438. \u041c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439 \u0438\u043b\u0438 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 codelabs \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c. \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a Android Studio \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0447\u0435\u043d\u0430, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0435.","title":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c Android Studio"},{"location":"Tutorial/Download_Kaspresso_project_and_Android_studio/#kaspresso","text":"\u0414\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0431\u044b\u043b\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439 GIT. \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c GIT \u0438 \u0443\u0437\u043d\u0430\u0442\u044c \u043e \u043d\u0435\u043c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0434\u0435\u0441\u044c \u041a\u043e\u0433\u0434\u0430 GIT \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d, \u0442\u043e \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 . \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Code \u0438 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c Android Studio. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0440\u0430\u043d\u0435\u0435 \u043d\u0435 \u0431\u044b\u043b \u043e\u0442\u043a\u0440\u044b\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 \u0432 \u0441\u0442\u0443\u0434\u0438\u0438, \u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0443\u043d\u043a\u0442 Get From VCS \u0415\u0441\u043b\u0438 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u043e\u0435\u043a\u0442 \u0443\u0436\u0435 \u0431\u044b\u043b \u0437\u0430\u043f\u0443\u0449\u0435\u043d, \u0442\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441 GIT \u043c\u043e\u0436\u043d\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: File -> New -> Project From Version Control \u0412 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u043e\u043a\u043d\u0435 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 URL \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0430\u043f\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d Kaspresso \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 clone","title":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso"},{"location":"Tutorial/Download_Kaspresso_project_and_Android_studio/#_2","text":"\u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043c\u0435\u043d\u044e Android Studio \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Tools -> Device Manager \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u044f\u0432\u0438\u0441\u044f \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u043c\u0438 \u0438 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Create Device \u0423\u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \"\u0436\u0435\u043b\u0435\u0437\u0430\", \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u044e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0445\u043e\u0442\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"1\" \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d, \u043f\u043b\u0430\u043d\u0448\u0435\u0442, \u0442\u0435\u043b\u0435\u0432\u0438\u0437\u043e\u0440 \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435. \u041d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0422\u0435\u043b\u0435\u0444\u043e\u043d. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"2\" - \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b\u0430 \u043d\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u044b, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c Pixel 6. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Next \u0438 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u043c \u043d\u0430 \u043e\u043a\u043d\u043e \u0432\u044b\u0431\u043e\u0440\u0430 \u043e\u0431\u0440\u0430\u0437\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b: \u042d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u0431\u043e\u043b\u0435\u0435 \u0432\u0430\u0436\u0435\u043d \u0432 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 - \u0437\u0434\u0435\u0441\u044c \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c, \u043a\u0430\u043a\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e Android \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u044b\u0431\u0435\u0440\u0435\u043c R. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0443 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0441\u043f\u0440\u0430\u0432\u0430 \u043e\u0442 \u0431\u0443\u043a\u0432\u044b R, \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u043c. \u041a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u043e\u043a\u043e\u043d\u0447\u0435\u043d \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Finish: \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e R \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 Next: \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0438\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043e\u0433\u043e \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430, \u0447\u0442\u043e\u0431 \u0438\u0445 \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u043a\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439. \u0414\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u0446\u0435\u043b\u0435\u0439 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Finish. \u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043e \u0438 \u0433\u043e\u0442\u043e\u0432\u043e \u043a \u0440\u0430\u0431\u043e\u0442\u0435. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0433\u043e \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 Play \u043f\u0440\u0430\u0432\u0435\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430: \u0412 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 Android Studio \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c Hypervisor:","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430"},{"location":"Tutorial/Download_Kaspresso_project_and_Android_studio/#_3","text":"Android Studio \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430, \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d, \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u0442\u0435\u0441\u0442\u044b","title":"\u0418\u0442\u043e\u0433"},{"location":"Tutorial/E2e_and_functional_tests/","text":"Work in progress \u0417\u0430\u0447\u0435\u043c \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0443\u0436\u043d\u043e \u0442\u0430\u043a\u043e\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435. \u041a\u0430\u043a \u0438\u0437 e2e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439. \u041f\u0440\u043e TestApplication \u0438 TestRunner. \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e Advice \u0438 dagger","title":"E2e \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b \u0441 \u043c\u043e\u043a\u0430\u043c\u0438"},{"location":"Tutorial/E2e_and_functional_tests/#work-in-progress","text":"\u0417\u0430\u0447\u0435\u043c \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0443\u0436\u043d\u043e \u0442\u0430\u043a\u043e\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435. \u041a\u0430\u043a \u0438\u0437 e2e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439. \u041f\u0440\u043e TestApplication \u0438 TestRunner. \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e Advice \u0438 dagger","title":"Work in progress"},{"location":"Tutorial/FlakySafely/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043f\u0440\u0438\u0440\u043e\u0434\u0443 \u0444\u043b\u0430\u043a\u043e\u0432, \u043f\u0440\u043e \u0442\u043e, \u043a\u0430\u043a\u0430\u044f \u044d\u0442\u043e \u0431\u043e\u043b\u044c. \u041d\u0435 \u0432\u0434\u0430\u0432\u0430\u044f\u0441\u044c \u0432 \u0434\u0435\u0442\u0430\u043b\u0438 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a \u041a\u0430\u0441\u043f\u0440\u0435\u0441\u0441\u043e \u0440\u0435\u0448\u0438\u043b \u044d\u0442\u0443 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443. (\u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440\u044b \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0443\u0440\u043e\u043a). \u041c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0432 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u0430\u0440\u0443 \u0442\u0435\u0441\u0442\u043e\u0432, \u0433\u0434\u0435 \u044d\u0442\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0440\u0435\u0448\u0430\u043b\u0430\u0441\u044c. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b \u0431\u044b \u043f\u0440\u0438\u043c\u0435\u0440, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0439 \u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u0434\u0430\u0432\u0430\u043b \u0420\u0443\u0441\u043b\u0430\u043d \u043d\u0430 workshop-e. \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0430\u043a\u0446\u0435\u043d\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0438\u043c\u0435\u043d\u043d\u043e \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 flakySafely - \u0447\u0442\u043e \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435, \u0433\u0434\u0435 \u043c\u043e\u0436\u0435\u0442 \u043b\u0430\u0433\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u0443. \u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0430\u043a\u0446\u0435\u043d\u0442 \u043d\u0430 \u0442\u043e\u043c, \u0447\u0442\u043e flakySafely \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0432\u0441\u0435\u0433\u043e Kaspresso \u0443\u0436\u0435 \u0440\u0435\u0448\u0435\u043d, \u0442\u0430\u0439\u043c\u0430\u0443\u0442 \u043c\u043e\u0436\u043d\u043e \u043c\u0435\u043d\u044f\u0442\u044c \u043a\u0430\u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430/\u0442\u0435\u0441\u0442\u0430, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435. \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043e\u0442\u043b\u0438\u0447\u0438\u0435 flakySafely \u043e\u0442 Thread.sleep","title":"flakySafely"},{"location":"Tutorial/FlakySafely/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043f\u0440\u0438\u0440\u043e\u0434\u0443 \u0444\u043b\u0430\u043a\u043e\u0432, \u043f\u0440\u043e \u0442\u043e, \u043a\u0430\u043a\u0430\u044f \u044d\u0442\u043e \u0431\u043e\u043b\u044c. \u041d\u0435 \u0432\u0434\u0430\u0432\u0430\u044f\u0441\u044c \u0432 \u0434\u0435\u0442\u0430\u043b\u0438 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a \u041a\u0430\u0441\u043f\u0440\u0435\u0441\u0441\u043e \u0440\u0435\u0448\u0438\u043b \u044d\u0442\u0443 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443. (\u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440\u044b \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0443\u0440\u043e\u043a). \u041c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0432 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u0430\u0440\u0443 \u0442\u0435\u0441\u0442\u043e\u0432, \u0433\u0434\u0435 \u044d\u0442\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0440\u0435\u0448\u0430\u043b\u0430\u0441\u044c. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b \u0431\u044b \u043f\u0440\u0438\u043c\u0435\u0440, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0439 \u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u0434\u0430\u0432\u0430\u043b \u0420\u0443\u0441\u043b\u0430\u043d \u043d\u0430 workshop-e. \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0430\u043a\u0446\u0435\u043d\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0438\u043c\u0435\u043d\u043d\u043e \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 flakySafely - \u0447\u0442\u043e \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435, \u0433\u0434\u0435 \u043c\u043e\u0436\u0435\u0442 \u043b\u0430\u0433\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u0443. \u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0430\u043a\u0446\u0435\u043d\u0442 \u043d\u0430 \u0442\u043e\u043c, \u0447\u0442\u043e flakySafely \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0432\u0441\u0435\u0433\u043e Kaspresso \u0443\u0436\u0435 \u0440\u0435\u0448\u0435\u043d, \u0442\u0430\u0439\u043c\u0430\u0443\u0442 \u043c\u043e\u0436\u043d\u043e \u043c\u0435\u043d\u044f\u0442\u044c \u043a\u0430\u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430/\u0442\u0435\u0441\u0442\u0430, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435. \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043e\u0442\u043b\u0438\u0447\u0438\u0435 flakySafely \u043e\u0442 Thread.sleep","title":"Work in progress"},{"location":"Tutorial/Init_and_transform/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u044d\u0442\u043e \u0437\u0430 \u0441\u0435\u043a\u0446\u0438\u0438, \u0437\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u044b, \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440","title":"\u0421\u0435\u043a\u0446\u0438\u0438 init \u0438 transform"},{"location":"Tutorial/Init_and_transform/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u044d\u0442\u043e \u0437\u0430 \u0441\u0435\u043a\u0446\u0438\u0438, \u0437\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u044b, \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440","title":"Work in progress"},{"location":"Tutorial/Interceptors/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440\u044b \u0443\u0436\u0435 \u0435\u0441\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0435\u0441\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u043d\u0430\u0431\u043e\u0440\u044b \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440\u043e\u0432. \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 Watcher \u0438 Behavior \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440 \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e Kaspresso Builder \u0438 \u043a\u043b\u0430\u0441\u0441 Kaspresso","title":"\u0418\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440\u044b \u0438 \u0440\u0435\u0436\u0438\u043c\u044b \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"Tutorial/Interceptors/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440\u044b \u0443\u0436\u0435 \u0435\u0441\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0435\u0441\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u043d\u0430\u0431\u043e\u0440\u044b \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440\u043e\u0432. \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 Watcher \u0438 Behavior \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u0438\u043d\u0442\u0435\u0440\u0441\u0435\u043f\u0442\u043e\u0440 \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e Kaspresso Builder \u0438 \u043a\u043b\u0430\u0441\u0441 Kaspresso","title":"Work in progress"},{"location":"Tutorial/LayoutId_and_viewClass/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043e\u043d\u0438 \u043d\u0443\u0436\u043d\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432, \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u0438 \u0443\u0434\u043e\u0441\u0442\u0432\u043e \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433\u0430. \u0420\u0410\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043c\u0438\u043d\u0443\u0441\u044b, \u0447\u0442\u043e \u044d\u0442\u043e \u043d\u0435 \u043b\u0443\u0447\u0448\u0435\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0441 compose \u044d\u0442\u043e \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442. \u0414\u0435\u0442\u0430\u043b\u0438 \u043f\u0440\u043e \u043a\u043e\u043c\u043f\u043e\u0443\u0437 \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0435\u043c \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u0443\u0440\u043e\u043a\u0435","title":"LayoutId \u0438 ViewClass"},{"location":"Tutorial/LayoutId_and_viewClass/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043e\u043d\u0438 \u043d\u0443\u0436\u043d\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432, \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u0438 \u0443\u0434\u043e\u0441\u0442\u0432\u043e \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433\u0430. \u0420\u0410\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043c\u0438\u043d\u0443\u0441\u044b, \u0447\u0442\u043e \u044d\u0442\u043e \u043d\u0435 \u043b\u0443\u0447\u0448\u0435\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0441 compose \u044d\u0442\u043e \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442. \u0414\u0435\u0442\u0430\u043b\u0438 \u043f\u0440\u043e \u043a\u043e\u043c\u043f\u043e\u0443\u0437 \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0435\u043c \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u0443\u0440\u043e\u043a\u0435","title":"Work in progress"},{"location":"Tutorial/Logger_and_screenshots/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u043b\u043e\u0433\u0438 \u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u0437\u0430\u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u043e\u0433\u043e\u0432 \u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u043e\u0432 \u041a\u0430\u043a \u0438\u0445 \u0434\u0435\u043b\u0430\u0442\u044c, \u0433\u0434\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438 \u0437\u0430\u0431\u0438\u0440\u0430\u0442\u044c (\u0443\u0447\u0435\u0441\u0442\u044c \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u043e storage)","title":"\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b"},{"location":"Tutorial/Logger_and_screenshots/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u043b\u043e\u0433\u0438 \u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u0437\u0430\u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u043e\u0433\u043e\u0432 \u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u043e\u0432 \u041a\u0430\u043a \u0438\u0445 \u0434\u0435\u043b\u0430\u0442\u044c, \u0433\u0434\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438 \u0437\u0430\u0431\u0438\u0440\u0430\u0442\u044c (\u0443\u0447\u0435\u0441\u0442\u044c \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u043e storage)","title":"Work in progress"},{"location":"Tutorial/Recyclerview/","text":"Work in progress \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0435\u0441\u0430\u0439\u043a\u043b\u0435\u0440\u043e\u043c. \u041a\u0430\u043a \u043d\u0430\u0439\u0442\u0438 \u043d\u0443\u0436\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0443 \u0440\u0435\u0441\u0430\u0439\u043a\u043b\u0435\u0440\u0430, \u043a\u0430\u043a \u0438\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u0430\u0442\u044c \u041d\u0430 workshop \u043f\u0440\u043e recycler \u0438 flakySafely \u0431\u044b\u043b\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043d\u043e \u0432\u043c\u0435\u0441\u0442\u0435, \u044f \u0434\u0443\u043c\u0430\u044e, \u043b\u0443\u0447\u0448\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c","title":"RecyclerView"},{"location":"Tutorial/Recyclerview/#work-in-progress","text":"\u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0435\u0441\u0430\u0439\u043a\u043b\u0435\u0440\u043e\u043c. \u041a\u0430\u043a \u043d\u0430\u0439\u0442\u0438 \u043d\u0443\u0436\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0443 \u0440\u0435\u0441\u0430\u0439\u043a\u043b\u0435\u0440\u0430, \u043a\u0430\u043a \u0438\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u0430\u0442\u044c \u041d\u0430 workshop \u043f\u0440\u043e recycler \u0438 flakySafely \u0431\u044b\u043b\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043d\u043e \u0432\u043c\u0435\u0441\u0442\u0435, \u044f \u0434\u0443\u043c\u0430\u044e, \u043b\u0443\u0447\u0448\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c","title":"Work in progress"},{"location":"Tutorial/Robolectic/","text":"Work in progress \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u0435\u043d, \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440","title":"\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 Robolectic"},{"location":"Tutorial/Robolectic/#work-in-progress","text":"\u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u0435\u043d, \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440","title":"Work in progress"},{"location":"Tutorial/Screenshot_tests/","text":"Work in progress \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043b\u0435\u0433\u043a\u0438\u0435 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b - \u0431\u0435\u0437 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435. \u0427\u0442\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0445\u043e\u043b\u0441, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 MVP, MVVM \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \"\u043d\u0435 \u043b\u0435\u0433\u043a\u043e\u0439\" \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0438\u043b\u043a\u0438, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439 \u0434\u0430\u0433\u0433\u0435\u0440 \u0433\u0440\u0430\u0444\u0430 \u0413\u0434\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b (\u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 target30) \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0432 compose, \u0447\u0442\u043e \u043c\u044b \u0438\u0445 \u0443\u0441\u0442\u0440\u0430\u043d\u0438\u043c","title":"Screenshot-\u0442\u0435\u0441\u0442\u044b"},{"location":"Tutorial/Screenshot_tests/#work-in-progress","text":"\u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043b\u0435\u0433\u043a\u0438\u0435 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b - \u0431\u0435\u0437 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435. \u0427\u0442\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0445\u043e\u043b\u0441, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 MVP, MVVM \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \"\u043d\u0435 \u043b\u0435\u0433\u043a\u043e\u0439\" \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0438\u043b\u043a\u0438, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439 \u0434\u0430\u0433\u0433\u0435\u0440 \u0433\u0440\u0430\u0444\u0430 \u0413\u0434\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b (\u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 target30) \u0420\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0432 compose, \u0447\u0442\u043e \u043c\u044b \u0438\u0445 \u0443\u0441\u0442\u0440\u0430\u043d\u0438\u043c","title":"Work in progress"},{"location":"Tutorial/UiAutomator/","text":"Kautomator. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0412 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u0434\u043b\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u041d\u043e \u0447\u0430\u0441\u0442\u043e \u0431\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e, \u0438 \u043f\u043e\u043c\u0438\u043c\u043e \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0437\u0430 \u0435\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play \u0432 \u043d\u0435\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c Google Play \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 Sign In \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0440\u0430\u0437\u043b\u043e\u0433\u0438\u043d\u0438\u0442\u044c\u0441\u044f \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u0410\u0432\u0442\u043e\u0442\u0435\u0441\u0442 Google Play \u041f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0435\u043c \u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0442\u0435\u0441\u0442\u0430 \u2013 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0430\u0441\u0441 GooglePlayTest \u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u0441\u044f \u043e\u0442 TestCase package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class GooglePlayTest : TestCase () { } \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { } } \u041f\u0435\u0440\u0432\u044b\u0439 \u0448\u0430\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u2013 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Google Play, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0423 Google Play \u044d\u0442\u043e com.android.vending , \u043f\u043e\u0437\u0436\u0435 \u043c\u044b \u043f\u043e\u043a\u0430\u0436\u0435\u043c, \u0433\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c \u044d\u0442\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e. \u042d\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0432 \u0442\u0435\u0441\u0442\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437, \u043f\u043e\u044d\u0442\u043e\u043c\u0443, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0434, \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443, \u043a\u0443\u0434\u0430 \u0432\u044b\u043d\u0435\u0441\u0435\u043c \u044d\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { } companion object { private const val GOOGLE_PLAY_PACKAGE = \"com.android.vending\" } } \u0414\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043b\u044e\u0431\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0432 Android \u043d\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u043e\u0431\u044a\u0435\u043a\u0442 Intent . \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0437\u0434\u0435\u0441\u044c \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c Intent \u043c\u043e\u0436\u043d\u043e \u0438\u0437 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Context : val intent = device . targetContext . packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) \u0412 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u0447\u043a\u0435 \u043c\u044b \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c targetContext \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 device \u2013 \u043c\u044b \u044d\u0442\u043e \u0443\u0436\u0435 \u0434\u0435\u043b\u0430\u043b\u0438 \u0432 \u043e\u0434\u043d\u043e\u043c \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u043e\u0432. \u0417\u0430\u0442\u0435\u043c, \u0443 targetContext \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c packageManager , \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c Intent \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u044d\u043a\u0440\u0430\u043d\u0430 Google Play \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 getLaunchIntentForPackage . \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 Intent \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043f\u0430\u043a\u0435\u0442 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u044b\u043b \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0445\u043e\u0442\u0438\u043c \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 Google Play. \u041c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 Intent , \u0442\u0435\u043f\u0435\u0440\u044c \u0441 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u044d\u043a\u0440\u0430\u043d. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 targetContext \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 startActivity \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c intent \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430: val intent = device . targetContext . packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) device . targetContext . startActivity ( intent ) \u0412 \u044d\u0442\u043e\u043c \u043a\u043e\u0434\u0435 \u043c\u044b \u0434\u0432\u0430\u0436\u0434\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c targetContext \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 device . \u0427\u0442\u043e\u0431\u044b \u043d\u0435 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0434, \u043c\u043e\u0436\u043d\u043e \u044d\u0442\u0443 \u0437\u0430\u043f\u0438\u0441\u044c \u0441\u043e\u043a\u0440\u0430\u0442\u0438\u0442\u044c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e with Info \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e with \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 (\u0430\u043d\u0433\u043b. scope functions) \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { step ( \"Open Google Play\" ) { with ( device . targetContext ) { val intent = packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) startActivity ( intent ) } } } companion object { private const val GOOGLE_PLAY_PACKAGE = \"com.android.vending\" } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 Google Play. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u043d\u0430 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u044d\u043a\u0440\u0430\u043d\u0435 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c Sign in . \u042d\u0442\u043e \u043d\u0435 \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c id \u043a\u043d\u043e\u043f\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 Layout Inspector \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f. \u041d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b. \u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438 UIAutomator UI Automator \u2013 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0438 \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u043a\u043b\u0438\u043a\u0438, \u0441\u0432\u0430\u0439\u043f\u044b, \u0432\u0432\u043e\u0434 \u0442\u0435\u043a\u0441\u0442\u0430 \u0438 \u0442.\u0434.). \u041e\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c \u0442\u0430\u043a, \u043a\u0430\u043a \u0431\u044b \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u043b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u2013 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043b\u044e\u0431\u044b\u043c\u0438 \u0435\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0432 \u043d\u0438\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0435\u0433\u043e \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443. Info \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e UiAutomator \u0438 \u0435\u0433\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0412 Android SDK \u0442\u0430\u043a\u0436\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 Ui Automator Viewer. \u041e\u043d\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u0439\u0442\u0438 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c, \u0438\u0445 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Ui Automator Viewer, \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043f\u0430\u043f\u043a\u0435 ../Android/sdk/tools/bin \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 uiautomatorviewer \u0423 \u0432\u0430\u0441 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0441\u044f \u0432\u043e\u0442 \u0442\u0430\u043a\u043e\u0435 \u043e\u043a\u043d\u043e: \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e \u0438 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043b\u0430\u0441\u044c \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430, \u0442\u043e \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u043e\u0433\u0443\u0433\u043b\u0438\u0442\u044c \u0442\u0435\u0441\u0442 \u043e\u0448\u0438\u0431\u043a\u0438. \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u0430\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u2013 \u0432\u0435\u0440\u0441\u0438\u044f Java \u043d\u0435 \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u0430 \u0441 uiautomatorviewer. \u0412 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c Java 8 (\u0432\u0430\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u0430\u043d\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f \u0431\u044b\u043b\u0430 \u0432\u044b\u043f\u0443\u0449\u0435\u043d\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0435\u0439 Oracle) \u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u043a \u043d\u0435\u0439 \u043f\u0443\u0442\u044c \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u044b. \u041a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043c\u044b \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u0432 \u0443\u0440\u043e\u043a\u0435 \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 adb-\u043a\u043e\u043c\u0430\u043d\u0434 \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442 \u0434\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play, \u0447\u0442\u043e\u0431\u044b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043d\u0438\u043c \u0438\u0437 Ui Automator Viewer, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435 \u0438 \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Device Screenshot \u041d\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 \u041e\u0421 \u044d\u0442\u0438 \u0438\u043a\u043e\u043d\u043a\u0438 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u043a\u0440\u044b\u0442\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0443 \u0432\u0430\u0441 \u043d\u0435 \u0432\u0438\u0434\u043d\u044b, \u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u0442\u044f\u043d\u0438\u0442\u0435 \u044d\u043a\u0440\u0430\u043d. \u0412 \u043f\u0440\u0430\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u043d\u043e \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u0421\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043a\u043d\u043e\u043f\u043a\u0430 Sign in . \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u043e\u043f\u043a\u0435: \u0417\u0434\u0435\u0441\u044c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0434\u0435\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043f\u043e\u043b\u0435\u0437\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e: Package \u2013 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435\u0441\u0442\u0435. \u041e\u0434\u0438\u043d \u0438\u0437 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0443\u0437\u043d\u0430\u0442\u044c \u0435\u0433\u043e \u2013 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u044d\u0442\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 Resource-id \u2013 \u0437\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u043e\u043c \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043d\u0430\u0439\u0442\u0438 \u043a\u043d\u043e\u043f\u043a\u0443 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043d\u0435\u0439 \u0438\u0437 \u0442\u0435\u0441\u0442\u0430. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0438 id \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0438\u043c\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0431\u044b\u043b\u043e \u043e\u0431\u0444\u0443\u0441\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043e, \u0442\u043e \u0435\u0441\u0442\u044c \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043e. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e id \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d Text \u2013 \u043e\u0434\u0438\u043d \u0438\u0437 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u2013 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430 \u043d\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0439\u0442\u0438 \u043a\u043d\u043e\u043f\u043a\u0443 \u043d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0443 text Developer Assistant \u0415\u0441\u043b\u0438 \u043f\u043e \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u0432\u0430\u043c \u043d\u0435\u0443\u0434\u043e\u0431\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f Ui Automator Viewer, \u0438\u043b\u0438 \u0432\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u0435\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c Developer Assistant. \u0415\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0432 Google Play. \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0435\u0433\u043e, \u043a\u0430\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435-\u0430\u0441\u0441\u0438\u0441\u0442\u0435\u043d\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u201cChoose\u201d \u0438 \u0441\u043b\u0435\u0434\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c: \u041f\u043e\u0441\u043b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 Google Play \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u0435 \u0434\u043e\u043b\u0433\u043e\u0435 \u043d\u0430\u0436\u0430\u0442\u0438\u0435 \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Home \u0423 \u0432\u0430\u0441 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043e\u043a\u043d\u043e \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0438\u043b\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u044c. \u041d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 App \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u2013 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430, \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u0430\u044f \u0432 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Activity \u0438 \u0442.\u0434. \u041d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 Element \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u0417\u0434\u0435\u0441\u044c \u0435\u0441\u0442\u044c \u0432\u0441\u0435 \u0442\u0435 \u0436\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0432\u0438\u0434\u0435\u043b\u0438 \u0432 Ui Automator Viewer \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430 \u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u043d\u0430\u0448\u043b\u0438 \u043d\u0443\u0436\u043d\u044b\u0435 \u043d\u0430\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0442\u044c \u043a \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e. \u041a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u043e \u043c\u044b \u043d\u0430\u0447\u043d\u0435\u043c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Page Object \u044d\u043a\u0440\u0430\u043d\u0430 Google Play package com.kaspersky.kaspresso.tutorial.screen object GooglePlayScreen { } \u0420\u0430\u043d\u0435\u0435 \u0432\u0441\u0435 Page Object-\u044b \u043c\u044b \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043b\u0438 \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen . \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 layoutId \u0438 viewClass override val layoutId : Int? = null override val viewClass : Class <*>? = null \u041c\u044b \u0442\u0430\u043a \u0434\u0435\u043b\u0430\u043b\u0438, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u044d\u043a\u0440\u0430\u043d, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0443 \u043d\u0430\u0441 \u0431\u044b\u043b \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443, \u043c\u0430\u043a\u0435\u0442\u0443 \u0438 Activity, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c. \u041d\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 \u044d\u043a\u0440\u0430\u043d\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0441\u043a\u0430\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432 \u043d\u0435\u043c, \u043a\u043b\u0438\u043a\u0430\u0442\u044c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0430\u043c \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043d\u0438\u043c \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c. \u0412\u043c\u0435\u0441\u0442\u043e \u043d\u0430\u0441 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u0435\u043b\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 UiAutomator. UiAutomator \u043c\u043e\u0436\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043b\u044e\u0431\u044b\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a. \u0422\u0430\u043a\u0436\u0435 \u0442\u0430\u043a\u043e\u0439 \u043a\u043e\u0434 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u0439 \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u0438\u044f\u0442\u0438\u044f, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0442\u0440\u0443\u0434\u043d\u0438\u0442\u044c \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0443\u044e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 Kaspresso \u0431\u044b\u043b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d Kautomator - \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u043d\u0430\u0434 UiAutomator, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u044f\u0434 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432, \u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 Wiki . \u0422\u0435\u043f\u0435\u0440\u044c Page Object GooglePlayScreen \u043c\u044b \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u043d\u0435 \u043e\u0442 KScreen , \u0430 \u043e\u0442 UiScreen \u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043c\u0435\u0442\u043e\u0434 packageName , \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u043b \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.screen.UiScreen object GooglePlayScreen : UiScreen < GooglePlayScreen > () { override val packageName : String = \"com.android.vending\" } \u0414\u0430\u043b\u0435\u0435 \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u0431\u043e\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0441 \u043f\u0440\u0438\u0441\u0442\u0430\u0432\u043a\u043e\u0439 Ui ( UiButton , UiTextView , UiEditText ...), \u0430 \u043d\u0435 K ( KButton , KTextView , KEditText ...), \u043a\u0430\u043a \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u043d\u044c\u0448\u0435. \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0434\u0440\u0443\u0433\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430\u044f \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u0445 Kautomator, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0431\u0443\u0434\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 \u0438\u0437 \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u0438\u043b\u043e\u0442\u0435\u043a\u0438. \u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043a\u043d\u043e\u043f\u043a\u0430 signIn , \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0435: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiButton import com.kaspersky.components.kautomator.screen.UiScreen object GooglePlayScreen : UiScreen < GooglePlayScreen > () { override val packageName : String = \"com.android.vending\" val signInButton = UiButton { } } \u0412\u043d\u0443\u0442\u0440\u0438 \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a\u043e\u0439-\u0442\u043e matcher, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043c\u044b \u043d\u0430\u0439\u0434\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435. \u0420\u0430\u043d\u0435\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e withId , \u043d\u043e \u0441\u0435\u0439\u0447\u0430\u0441 id \u043a\u043d\u043e\u043f\u043a\u0438 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0438 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0434\u0440\u0443\u0433\u043e\u0439. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 matcher-\u044b, \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 UiButton (\u0443\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f ctrl , \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043b\u0435\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043b\u0430\u0441\u0441\u0430). \u0412\u043d\u0443\u0442\u0440\u0438 \u043d\u0435\u0433\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441 UiViewBuilder \u2013 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u0435 \u0432 \u043d\u0435\u0433\u043e \u0417\u0434\u0435\u0441\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e matcher-\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c withText , \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u044d\u0442\u043e\u0442 \u0442\u0435\u043a\u0441\u0442, \u0438\u043b\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 withClassName \u043d\u0430\u0439\u0442\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u0430\u043a\u043e\u0433\u043e-\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u0430. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430 \u043d\u0435\u0439 \u0443\u043a\u0430\u0437\u0430\u043d package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiButton import com.kaspersky.components.kautomator.screen.UiScreen object GooglePlayScreen : UiScreen < GooglePlayScreen > () { override val packageName : String = \"com.android.vending\" val signInButton = UiButton { withText ( \"Sign in\" ) } } \u041c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0442\u0435\u0441\u0442 \u2013 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 Google Play \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u043d\u043e\u043f\u043a\u0430 \u043b\u043e\u0433\u0438\u043d\u0430 package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.GooglePlayScreen import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { step ( \"Open Google Play\" ) { with ( device . targetContext ) { val intent = packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) startActivity ( intent ) } } step ( \"Check sign in button visibility\" ) { GooglePlayScreen { signInButton . isDisplayed () } } } companion object { private const val GOOGLE_PLAY_PACKAGE = \"com.android.vending\" } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e UI \u041c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u043e\u0434\u0438\u043d \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043a\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c UI automator \u2013 \u0435\u0441\u043b\u0438 \u043c\u044b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u043c \u0441\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c. \u041d\u043e \u044d\u0442\u043e \u043d\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u0435\u0433\u043e \u0441\u0442\u043e\u0438\u0442 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u043a\u0440\u043e\u0435\u043c \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial \u0438 \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d Notification Activity \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u201cShow notification\u201d \u2013 \u0441\u0432\u0435\u0440\u0445\u0443 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c Page Object \u0434\u043b\u044f \u044d\u043a\u0440\u0430\u043d\u0430 \u0441 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u00ab\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435\u00bb. \u042d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u0437\u043d\u0430\u0447\u0438\u0442 \u043c\u043e\u0436\u0435\u043c \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 KScreen . Id \u043a\u043d\u043e\u043f\u043a\u0438 \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0439\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 Layout Inspector package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object NotificationActivityScreen : KScreen < NotificationActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val showNotificationButton = KButton { withId ( R . id . show_notification_button ) } } \u0412 Page Object \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f NotificationActivity package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } val wifiActivityButton = KButton { withId ( R . id . wifi_activity_btn ) } val loginActivityButton = KButton { withId ( R . id . login_activity_btn ) } val notificationActivityButton = KButton { withId ( R . id . notification_activity_btn ) } } \u041c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442, \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u043a\u0430\u0436\u0435\u043c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435, \u043a\u043b\u0438\u043a\u043d\u0443\u0432 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.NotificationActivityScreen import org.junit.Rule import org.junit.Test class NotificationActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun checkNotification () = run { step ( \"Open notification activity\" ) { MainScreen { notificationActivityButton { isVisible () isClickable () click () } } } step ( \"Show notification\" ) { NotificationActivityScreen { showNotificationButton . isVisible () showNotificationButton . isClickable () showNotificationButton . click () } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0442\u0435\u043a\u0441\u0442\u044b \u0432 \u0441\u0430\u043c\u043e\u043c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0438, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u0442\u0435\u043a\u0441\u0442. \u041d\u0430\u0439\u0442\u0438 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \"Layout Inspector\" \u0438\u043b\u0438 \"Developer Assistant\" \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f, \u0442.\u043a. \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c\u0443 UI. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Ui Automator Viewer \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u0433\u043e. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u0438 \u0434\u0435\u043b\u0430\u0435\u043c \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442 \u0417\u0434\u0435\u0441\u044c \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043f\u0430\u043a\u0435\u0442\u0430 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0434\u0435\u0442\u044c, \u0447\u0442\u043e \u0448\u0442\u043e\u0440\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043d\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u043d\u0430\u0448\u0435\u043c\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 UiScreen \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Kautomator. \u0421\u043e\u0437\u0434\u0430\u0435\u043c Page Object \u044d\u043a\u0440\u0430\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" } \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 packageName \u0431\u044b\u043b\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0447\u0435\u0440\u0435\u0437 Ui Automator Viewer. \u041e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0431\u0443\u0434\u0435\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c. package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { } val content = UiTextView { } } \u041d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u043e\u0436\u043d\u043e \u043f\u043e \u0440\u0430\u0437\u043d\u044b\u043c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044f\u043c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443 \u0438\u043b\u0438 \u043f\u043e id. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0435\u0433\u043e id. \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u043c matcher withId package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { withId ( \"\" , \"\" ) } val content = UiTextView { withId ( \"\" , \"\" ) } } \u041f\u0435\u0440\u0432\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430, \u0432 \u0440\u0435\u0441\u0443\u0440\u0441\u0430\u0445 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u0435\u043d \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430. \u041c\u044b \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 packageName \u0438 resource_id , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0447\u0435\u0440\u0435\u0437 Ui Automator Viewer package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen<NotificationScreen>() { override val packageName: String = \"com.android.systemui\" val title = UiTextView { withId(this@NotificationScreen.packageName, \"android:id/title\") } val content = UiTextView { withId(this@NotificationScreen.packageName, \"android:id/text\") } } \u041d\u043e \u0432 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438 \u0432\u043e\u0442 \u043f\u043e \u043a\u0430\u043a\u043e\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0435: \u0421\u0445\u0435\u043c\u0430 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0438\u0449\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: package_name:id/resource_id \u042d\u0442\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438\u0437 \u0434\u0432\u0443\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0432 \u043c\u0435\u0442\u043e\u0434 withId . \u0412\u043c\u0435\u0441\u0442\u043e package_name \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430 com.android.systemui , \u0432\u043c\u0435\u0441\u0442\u043e resource_id \u2013 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 android:id/title \u0412 \u0438\u0442\u043e\u0433\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0439\u0441\u044f resource_id \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: com.android.systemui:id/android:id/title \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u044b :id/ \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0437\u0430 \u043d\u0430\u0441, \u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e, \u0447\u0442\u043e \u043f\u0440\u0430\u0432\u0435\u0435 \u043a\u043e\u0441\u043e\u0439 \u0447\u0435\u0440\u0442\u044b, \u044d\u0442\u043e \u0438 \u0435\u0441\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { withId ( this @NotificationScreen.packageName , \"title\" ) } val content = UiTextView { withId ( this @NotificationScreen.packageName , \"text\" ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043b\u043d\u044b\u0439 resource_id \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: com.android.systemui:id/title \u0438 com.android.systemui:id/text \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c (package_name) \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0432 Ui Automator Viewer, \u043c\u044b \u0443\u043a\u0430\u0437\u0430\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 com.android.systemui , \u0430 \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e android . \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u043e\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u0438 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0433\u0434\u0435 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u0437\u0434\u0430\u043d, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0441\u0443\u0440\u0441\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b Android. \u041e\u043d\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043e\u0431\u0449\u0438\u043c\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 android . \u042d\u0442\u043e \u043a\u0430\u043a \u0440\u0430\u0437 \u0442\u0430\u043a\u043e\u0439 \u0441\u043b\u0443\u0447\u0430\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c android . package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { withId ( \"android\" , \"title\" ) } val content = UiTextView { withId ( \"android\" , \"text\" ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d. \u0423\u0431\u0435\u0434\u0438\u043c\u0441\u044f, \u0447\u0442\u043e \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0438 \u0432 \u0442\u0435\u043b\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u0442\u0435\u043a\u0441\u0442\u044b: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.NotificationActivityScreen import com.kaspersky.kaspresso.tutorial.screen.NotificationScreen import org.junit.Rule import org.junit.Test class NotificationActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun checkNotification () = run { step ( \"Open notification activity\" ) { MainScreen { notificationActivityButton { isVisible () isClickable () click () } } } step ( \"Show notification\" ) { NotificationActivityScreen { showNotificationButton . isVisible () showNotificationButton . isClickable () showNotificationButton . click () } } step ( \"Check notification texts\" ) { NotificationScreen { title . isDisplayed () title . hasText ( \"Notification Title\" ) content . isDisplayed () content . hasText ( \"Notification Content\" ) } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0418\u0442\u043e\u0433 \u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0443\u0437\u043d\u0430\u043b\u0438, \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 UI \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 UiAutomator, \u0430 \u0442\u043e\u0447\u043d\u0435\u0435 \u0435\u0433\u043e \u043e\u0431\u0435\u0440\u0442\u043a\u0438 - Kautomator. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u043c\u044b \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430\u043c\u0438, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u043c\u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c UI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0438\u0445 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443 \u2013 \u044d\u0442\u043e Ui Automator Viewer \u0438 Developer Assistant.","title":"UiAutomator. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u0440\u0430\u043c\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},{"location":"Tutorial/UiAutomator/#kautomator","text":"\u0412 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u0434\u043b\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u041d\u043e \u0447\u0430\u0441\u0442\u043e \u0431\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e, \u0438 \u043f\u043e\u043c\u0438\u043c\u043e \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0437\u0430 \u0435\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play \u0432 \u043d\u0435\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c Google Play \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 Sign In \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0440\u0430\u0437\u043b\u043e\u0433\u0438\u043d\u0438\u0442\u044c\u0441\u044f \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438.","title":"Kautomator. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439"},{"location":"Tutorial/UiAutomator/#google-play","text":"\u041f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0435\u043c \u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0442\u0435\u0441\u0442\u0430 \u2013 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0430\u0441\u0441 GooglePlayTest \u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u0441\u044f \u043e\u0442 TestCase package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class GooglePlayTest : TestCase () { } \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { } } \u041f\u0435\u0440\u0432\u044b\u0439 \u0448\u0430\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u2013 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Google Play, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0423 Google Play \u044d\u0442\u043e com.android.vending , \u043f\u043e\u0437\u0436\u0435 \u043c\u044b \u043f\u043e\u043a\u0430\u0436\u0435\u043c, \u0433\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c \u044d\u0442\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e. \u042d\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0432 \u0442\u0435\u0441\u0442\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437, \u043f\u043e\u044d\u0442\u043e\u043c\u0443, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0434, \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443, \u043a\u0443\u0434\u0430 \u0432\u044b\u043d\u0435\u0441\u0435\u043c \u044d\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { } companion object { private const val GOOGLE_PLAY_PACKAGE = \"com.android.vending\" } } \u0414\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043b\u044e\u0431\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0432 Android \u043d\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u043e\u0431\u044a\u0435\u043a\u0442 Intent . \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0437\u0434\u0435\u0441\u044c \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c Intent \u043c\u043e\u0436\u043d\u043e \u0438\u0437 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Context : val intent = device . targetContext . packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) \u0412 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u0447\u043a\u0435 \u043c\u044b \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c targetContext \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 device \u2013 \u043c\u044b \u044d\u0442\u043e \u0443\u0436\u0435 \u0434\u0435\u043b\u0430\u043b\u0438 \u0432 \u043e\u0434\u043d\u043e\u043c \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u043e\u0432. \u0417\u0430\u0442\u0435\u043c, \u0443 targetContext \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c packageManager , \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c Intent \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u044d\u043a\u0440\u0430\u043d\u0430 Google Play \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 getLaunchIntentForPackage . \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 Intent \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043f\u0430\u043a\u0435\u0442 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u044b\u043b \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0445\u043e\u0442\u0438\u043c \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 Google Play. \u041c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 Intent , \u0442\u0435\u043f\u0435\u0440\u044c \u0441 \u0435\u0433\u043e \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u044d\u043a\u0440\u0430\u043d. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 targetContext \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 startActivity \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c intent \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430: val intent = device . targetContext . packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) device . targetContext . startActivity ( intent ) \u0412 \u044d\u0442\u043e\u043c \u043a\u043e\u0434\u0435 \u043c\u044b \u0434\u0432\u0430\u0436\u0434\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c targetContext \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 device . \u0427\u0442\u043e\u0431\u044b \u043d\u0435 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0434, \u043c\u043e\u0436\u043d\u043e \u044d\u0442\u0443 \u0437\u0430\u043f\u0438\u0441\u044c \u0441\u043e\u043a\u0440\u0430\u0442\u0438\u0442\u044c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e with Info \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e with \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u0438 (\u0430\u043d\u0433\u043b. scope functions) \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { step ( \"Open Google Play\" ) { with ( device . targetContext ) { val intent = packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) startActivity ( intent ) } } } companion object { private const val GOOGLE_PLAY_PACKAGE = \"com.android.vending\" } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 Google Play. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u043d\u0430 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u044d\u043a\u0440\u0430\u043d\u0435 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c Sign in . \u042d\u0442\u043e \u043d\u0435 \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c id \u043a\u043d\u043e\u043f\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 Layout Inspector \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f. \u041d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b.","title":"\u0410\u0432\u0442\u043e\u0442\u0435\u0441\u0442 Google Play"},{"location":"Tutorial/UiAutomator/#_1","text":"","title":"\u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438"},{"location":"Tutorial/UiAutomator/#uiautomator","text":"UI Automator \u2013 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0438 \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u043a\u043b\u0438\u043a\u0438, \u0441\u0432\u0430\u0439\u043f\u044b, \u0432\u0432\u043e\u0434 \u0442\u0435\u043a\u0441\u0442\u0430 \u0438 \u0442.\u0434.). \u041e\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c \u0442\u0430\u043a, \u043a\u0430\u043a \u0431\u044b \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u043b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u2013 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043b\u044e\u0431\u044b\u043c\u0438 \u0435\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0432 \u043d\u0438\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0435\u0433\u043e \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443. Info \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e UiAutomator \u0438 \u0435\u0433\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0412 Android SDK \u0442\u0430\u043a\u0436\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 Ui Automator Viewer. \u041e\u043d\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u0439\u0442\u0438 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c, \u0438\u0445 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Ui Automator Viewer, \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043f\u0430\u043f\u043a\u0435 ../Android/sdk/tools/bin \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 uiautomatorviewer \u0423 \u0432\u0430\u0441 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0441\u044f \u0432\u043e\u0442 \u0442\u0430\u043a\u043e\u0435 \u043e\u043a\u043d\u043e: \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e \u0438 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043b\u0430\u0441\u044c \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430, \u0442\u043e \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u043e\u0433\u0443\u0433\u043b\u0438\u0442\u044c \u0442\u0435\u0441\u0442 \u043e\u0448\u0438\u0431\u043a\u0438. \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u0430\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u2013 \u0432\u0435\u0440\u0441\u0438\u044f Java \u043d\u0435 \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u0430 \u0441 uiautomatorviewer. \u0412 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c Java 8 (\u0432\u0430\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u0430\u043d\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f \u0431\u044b\u043b\u0430 \u0432\u044b\u043f\u0443\u0449\u0435\u043d\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0435\u0439 Oracle) \u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u043a \u043d\u0435\u0439 \u043f\u0443\u0442\u044c \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u044b. \u041a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043c\u044b \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u0432 \u0443\u0440\u043e\u043a\u0435 \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 adb-\u043a\u043e\u043c\u0430\u043d\u0434 \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442 \u0434\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play, \u0447\u0442\u043e\u0431\u044b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043d\u0438\u043c \u0438\u0437 Ui Automator Viewer, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435 \u0438 \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Device Screenshot \u041d\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 \u041e\u0421 \u044d\u0442\u0438 \u0438\u043a\u043e\u043d\u043a\u0438 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u043a\u0440\u044b\u0442\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0443 \u0432\u0430\u0441 \u043d\u0435 \u0432\u0438\u0434\u043d\u044b, \u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u0442\u044f\u043d\u0438\u0442\u0435 \u044d\u043a\u0440\u0430\u043d. \u0412 \u043f\u0440\u0430\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0438\u0434\u043d\u043e \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u0421\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043a\u043d\u043e\u043f\u043a\u0430 Sign in . \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u043e\u043f\u043a\u0435: \u0417\u0434\u0435\u0441\u044c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0434\u0435\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043f\u043e\u043b\u0435\u0437\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e: Package \u2013 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435\u0441\u0442\u0435. \u041e\u0434\u0438\u043d \u0438\u0437 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0443\u0437\u043d\u0430\u0442\u044c \u0435\u0433\u043e \u2013 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u044d\u0442\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 Resource-id \u2013 \u0437\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u043e\u043c \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043d\u0430\u0439\u0442\u0438 \u043a\u043d\u043e\u043f\u043a\u0443 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043d\u0435\u0439 \u0438\u0437 \u0442\u0435\u0441\u0442\u0430. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0438 id \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0438\u043c\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0431\u044b\u043b\u043e \u043e\u0431\u0444\u0443\u0441\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043e, \u0442\u043e \u0435\u0441\u0442\u044c \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043e. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e id \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d Text \u2013 \u043e\u0434\u0438\u043d \u0438\u0437 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u2013 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430 \u043d\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0439\u0442\u0438 \u043a\u043d\u043e\u043f\u043a\u0443 \u043d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0443 text","title":"UIAutomator"},{"location":"Tutorial/UiAutomator/#developer-assistant","text":"\u0415\u0441\u043b\u0438 \u043f\u043e \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u0432\u0430\u043c \u043d\u0435\u0443\u0434\u043e\u0431\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f Ui Automator Viewer, \u0438\u043b\u0438 \u0432\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u0435\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c Developer Assistant. \u0415\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0432 Google Play. \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0435\u0433\u043e, \u043a\u0430\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435-\u0430\u0441\u0441\u0438\u0441\u0442\u0435\u043d\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u201cChoose\u201d \u0438 \u0441\u043b\u0435\u0434\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c: \u041f\u043e\u0441\u043b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 Google Play \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u0435 \u0434\u043e\u043b\u0433\u043e\u0435 \u043d\u0430\u0436\u0430\u0442\u0438\u0435 \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Home \u0423 \u0432\u0430\u0441 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043e\u043a\u043d\u043e \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0438\u043b\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u044c. \u041d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 App \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u2013 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430, \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u0430\u044f \u0432 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Activity \u0438 \u0442.\u0434. \u041d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 Element \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u0417\u0434\u0435\u0441\u044c \u0435\u0441\u0442\u044c \u0432\u0441\u0435 \u0442\u0435 \u0436\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0432\u0438\u0434\u0435\u043b\u0438 \u0432 Ui Automator Viewer","title":"Developer Assistant"},{"location":"Tutorial/UiAutomator/#_2","text":"\u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u043d\u0430\u0448\u043b\u0438 \u043d\u0443\u0436\u043d\u044b\u0435 \u043d\u0430\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0442\u044c \u043a \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e. \u041a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u043e \u043c\u044b \u043d\u0430\u0447\u043d\u0435\u043c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Page Object \u044d\u043a\u0440\u0430\u043d\u0430 Google Play package com.kaspersky.kaspresso.tutorial.screen object GooglePlayScreen { } \u0420\u0430\u043d\u0435\u0435 \u0432\u0441\u0435 Page Object-\u044b \u043c\u044b \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043b\u0438 \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen . \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 layoutId \u0438 viewClass override val layoutId : Int? = null override val viewClass : Class <*>? = null \u041c\u044b \u0442\u0430\u043a \u0434\u0435\u043b\u0430\u043b\u0438, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u044d\u043a\u0440\u0430\u043d, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0443 \u043d\u0430\u0441 \u0431\u044b\u043b \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443, \u043c\u0430\u043a\u0435\u0442\u0443 \u0438 Activity, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c. \u041d\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 \u044d\u043a\u0440\u0430\u043d\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0441\u043a\u0430\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432 \u043d\u0435\u043c, \u043a\u043b\u0438\u043a\u0430\u0442\u044c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0430\u043c \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043d\u0438\u043c \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c. \u0412\u043c\u0435\u0441\u0442\u043e \u043d\u0430\u0441 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u0435\u043b\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 UiAutomator. UiAutomator \u043c\u043e\u0436\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043b\u044e\u0431\u044b\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a. \u0422\u0430\u043a\u0436\u0435 \u0442\u0430\u043a\u043e\u0439 \u043a\u043e\u0434 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u0439 \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u0438\u044f\u0442\u0438\u044f, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0442\u0440\u0443\u0434\u043d\u0438\u0442\u044c \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0443\u044e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 Kaspresso \u0431\u044b\u043b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d Kautomator - \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u043d\u0430\u0434 UiAutomator, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u044f\u0434 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432, \u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 Wiki . \u0422\u0435\u043f\u0435\u0440\u044c Page Object GooglePlayScreen \u043c\u044b \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u043d\u0435 \u043e\u0442 KScreen , \u0430 \u043e\u0442 UiScreen \u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043c\u0435\u0442\u043e\u0434 packageName , \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u043b \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.screen.UiScreen object GooglePlayScreen : UiScreen < GooglePlayScreen > () { override val packageName : String = \"com.android.vending\" } \u0414\u0430\u043b\u0435\u0435 \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u0431\u043e\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0441 \u043f\u0440\u0438\u0441\u0442\u0430\u0432\u043a\u043e\u0439 Ui ( UiButton , UiTextView , UiEditText ...), \u0430 \u043d\u0435 K ( KButton , KTextView , KEditText ...), \u043a\u0430\u043a \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u043d\u044c\u0448\u0435. \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0434\u0440\u0443\u0433\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430\u044f \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u0445 Kautomator, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0431\u0443\u0434\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 \u0438\u0437 \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u0438\u043b\u043e\u0442\u0435\u043a\u0438. \u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043a\u043d\u043e\u043f\u043a\u0430 signIn , \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0435: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiButton import com.kaspersky.components.kautomator.screen.UiScreen object GooglePlayScreen : UiScreen < GooglePlayScreen > () { override val packageName : String = \"com.android.vending\" val signInButton = UiButton { } } \u0412\u043d\u0443\u0442\u0440\u0438 \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a\u043e\u0439-\u0442\u043e matcher, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043c\u044b \u043d\u0430\u0439\u0434\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435. \u0420\u0430\u043d\u0435\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e withId , \u043d\u043e \u0441\u0435\u0439\u0447\u0430\u0441 id \u043a\u043d\u043e\u043f\u043a\u0438 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0438 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0434\u0440\u0443\u0433\u043e\u0439. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 matcher-\u044b, \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 UiButton (\u0443\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f ctrl , \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043b\u0435\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043a\u043b\u0430\u0441\u0441\u0430). \u0412\u043d\u0443\u0442\u0440\u0438 \u043d\u0435\u0433\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441 UiViewBuilder \u2013 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u0435 \u0432 \u043d\u0435\u0433\u043e \u0417\u0434\u0435\u0441\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e matcher-\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c withText , \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u044d\u0442\u043e\u0442 \u0442\u0435\u043a\u0441\u0442, \u0438\u043b\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 withClassName \u043d\u0430\u0439\u0442\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u0430\u043a\u043e\u0433\u043e-\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u0430. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430 \u043d\u0435\u0439 \u0443\u043a\u0430\u0437\u0430\u043d package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiButton import com.kaspersky.components.kautomator.screen.UiScreen object GooglePlayScreen : UiScreen < GooglePlayScreen > () { override val packageName : String = \"com.android.vending\" val signInButton = UiButton { withText ( \"Sign in\" ) } } \u041c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0442\u0435\u0441\u0442 \u2013 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 Google Play \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u043d\u043e\u043f\u043a\u0430 \u043b\u043e\u0433\u0438\u043d\u0430 package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.GooglePlayScreen import org.junit.Test class GooglePlayTest : TestCase () { @Test fun testNotSignIn () = run { step ( \"Open Google Play\" ) { with ( device . targetContext ) { val intent = packageManager . getLaunchIntentForPackage ( GOOGLE_PLAY_PACKAGE ) startActivity ( intent ) } } step ( \"Check sign in button visibility\" ) { GooglePlayScreen { signInButton . isDisplayed () } } } companion object { private const val GOOGLE_PLAY_PACKAGE = \"com.android.vending\" } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","title":"\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430"},{"location":"Tutorial/UiAutomator/#ui","text":"\u041c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u043e\u0434\u0438\u043d \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043a\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c UI automator \u2013 \u0435\u0441\u043b\u0438 \u043c\u044b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u043c \u0441\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c. \u041d\u043e \u044d\u0442\u043e \u043d\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u0435\u0433\u043e \u0441\u0442\u043e\u0438\u0442 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u043a\u0440\u043e\u0435\u043c \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial \u0438 \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d Notification Activity \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u201cShow notification\u201d \u2013 \u0441\u0432\u0435\u0440\u0445\u0443 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c Page Object \u0434\u043b\u044f \u044d\u043a\u0440\u0430\u043d\u0430 \u0441 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u00ab\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435\u00bb. \u042d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u0437\u043d\u0430\u0447\u0438\u0442 \u043c\u043e\u0436\u0435\u043c \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 KScreen . Id \u043a\u043d\u043e\u043f\u043a\u0438 \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0439\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 Layout Inspector package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object NotificationActivityScreen : KScreen < NotificationActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val showNotificationButton = KButton { withId ( R . id . show_notification_button ) } } \u0412 Page Object \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f NotificationActivity package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } val wifiActivityButton = KButton { withId ( R . id . wifi_activity_btn ) } val loginActivityButton = KButton { withId ( R . id . login_activity_btn ) } val notificationActivityButton = KButton { withId ( R . id . notification_activity_btn ) } } \u041c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442, \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u043a\u0430\u0436\u0435\u043c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435, \u043a\u043b\u0438\u043a\u043d\u0443\u0432 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.NotificationActivityScreen import org.junit.Rule import org.junit.Test class NotificationActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun checkNotification () = run { step ( \"Open notification activity\" ) { MainScreen { notificationActivityButton { isVisible () isClickable () click () } } } step ( \"Show notification\" ) { NotificationActivityScreen { showNotificationButton . isVisible () showNotificationButton . isClickable () showNotificationButton . click () } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0442\u0435\u043a\u0441\u0442\u044b \u0432 \u0441\u0430\u043c\u043e\u043c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0438, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u0442\u0435\u043a\u0441\u0442. \u041d\u0430\u0439\u0442\u0438 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \"Layout Inspector\" \u0438\u043b\u0438 \"Developer Assistant\" \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f, \u0442.\u043a. \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c\u0443 UI. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Ui Automator Viewer \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u0433\u043e. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u0438 \u0434\u0435\u043b\u0430\u0435\u043c \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442 \u0417\u0434\u0435\u0441\u044c \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043f\u0430\u043a\u0435\u0442\u0430 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0434\u0435\u0442\u044c, \u0447\u0442\u043e \u0448\u0442\u043e\u0440\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043d\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u043d\u0430\u0448\u0435\u043c\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 UiScreen \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Kautomator. \u0421\u043e\u0437\u0434\u0430\u0435\u043c Page Object \u044d\u043a\u0440\u0430\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" } \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 packageName \u0431\u044b\u043b\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0447\u0435\u0440\u0435\u0437 Ui Automator Viewer. \u041e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0431\u0443\u0434\u0435\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c. package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { } val content = UiTextView { } } \u041d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u043e\u0436\u043d\u043e \u043f\u043e \u0440\u0430\u0437\u043d\u044b\u043c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044f\u043c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443 \u0438\u043b\u0438 \u043f\u043e id. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0435\u0433\u043e id. \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u043c matcher withId package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { withId ( \"\" , \"\" ) } val content = UiTextView { withId ( \"\" , \"\" ) } } \u041f\u0435\u0440\u0432\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430, \u0432 \u0440\u0435\u0441\u0443\u0440\u0441\u0430\u0445 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u0435\u043d \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430. \u041c\u044b \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 packageName \u0438 resource_id , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0447\u0435\u0440\u0435\u0437 Ui Automator Viewer package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen<NotificationScreen>() { override val packageName: String = \"com.android.systemui\" val title = UiTextView { withId(this@NotificationScreen.packageName, \"android:id/title\") } val content = UiTextView { withId(this@NotificationScreen.packageName, \"android:id/text\") } } \u041d\u043e \u0432 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438 \u0432\u043e\u0442 \u043f\u043e \u043a\u0430\u043a\u043e\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0435: \u0421\u0445\u0435\u043c\u0430 id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0438\u0449\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: package_name:id/resource_id \u042d\u0442\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438\u0437 \u0434\u0432\u0443\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0432 \u043c\u0435\u0442\u043e\u0434 withId . \u0412\u043c\u0435\u0441\u0442\u043e package_name \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430 com.android.systemui , \u0432\u043c\u0435\u0441\u0442\u043e resource_id \u2013 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 android:id/title \u0412 \u0438\u0442\u043e\u0433\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0439\u0441\u044f resource_id \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: com.android.systemui:id/android:id/title \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u044b :id/ \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0437\u0430 \u043d\u0430\u0441, \u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e, \u0447\u0442\u043e \u043f\u0440\u0430\u0432\u0435\u0435 \u043a\u043e\u0441\u043e\u0439 \u0447\u0435\u0440\u0442\u044b, \u044d\u0442\u043e \u0438 \u0435\u0441\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { withId ( this @NotificationScreen.packageName , \"title\" ) } val content = UiTextView { withId ( this @NotificationScreen.packageName , \"text\" ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043b\u043d\u044b\u0439 resource_id \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: com.android.systemui:id/title \u0438 com.android.systemui:id/text \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c (package_name) \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0432 Ui Automator Viewer, \u043c\u044b \u0443\u043a\u0430\u0437\u0430\u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 com.android.systemui , \u0430 \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e android . \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u043e\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u0438 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0433\u0434\u0435 \u0440\u0435\u0441\u0443\u0440\u0441 \u0441\u043e\u0437\u0434\u0430\u043d, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0441\u0443\u0440\u0441\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b Android. \u041e\u043d\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043e\u0431\u0449\u0438\u043c\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 android . \u042d\u0442\u043e \u043a\u0430\u043a \u0440\u0430\u0437 \u0442\u0430\u043a\u043e\u0439 \u0441\u043b\u0443\u0447\u0430\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c android . package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.components.kautomator.component.text.UiTextView import com.kaspersky.components.kautomator.screen.UiScreen object NotificationScreen : UiScreen < NotificationScreen > () { override val packageName : String = \"com.android.systemui\" val title = UiTextView { withId ( \"android\" , \"title\" ) } val content = UiTextView { withId ( \"android\" , \"text\" ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d. \u0423\u0431\u0435\u0434\u0438\u043c\u0441\u044f, \u0447\u0442\u043e \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0438 \u0432 \u0442\u0435\u043b\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u0442\u0435\u043a\u0441\u0442\u044b: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.NotificationActivityScreen import com.kaspersky.kaspresso.tutorial.screen.NotificationScreen import org.junit.Rule import org.junit.Test class NotificationActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun checkNotification () = run { step ( \"Open notification activity\" ) { MainScreen { notificationActivityButton { isVisible () isClickable () click () } } } step ( \"Show notification\" ) { NotificationActivityScreen { showNotificationButton . isVisible () showNotificationButton . isClickable () showNotificationButton . click () } } step ( \"Check notification texts\" ) { NotificationScreen { title . isDisplayed () title . hasText ( \"Notification Title\" ) content . isDisplayed () content . hasText ( \"Notification Content\" ) } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e UI"},{"location":"Tutorial/UiAutomator/#_3","text":"\u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0443\u0437\u043d\u0430\u043b\u0438, \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 UI \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 UiAutomator, \u0430 \u0442\u043e\u0447\u043d\u0435\u0435 \u0435\u0433\u043e \u043e\u0431\u0435\u0440\u0442\u043a\u0438 - Kautomator. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u043c\u044b \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430\u043c\u0438, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u043c\u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c UI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0438\u0445 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443 \u2013 \u044d\u0442\u043e Ui Automator Viewer \u0438 Developer Assistant.","title":"\u0418\u0442\u043e\u0433"},{"location":"Tutorial/WebView/","text":"Work in progress \u041c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0441 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435\u043c \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e. \u041c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0437 KISA","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 WebView"},{"location":"Tutorial/WebView/#work-in-progress","text":"\u041c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0441 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435\u043c \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e. \u041c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0437 KISA","title":"Work in progress"},{"location":"Tutorial/Wifi_sample_test/","text":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u043c Device \u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0442\u0435\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u044d\u043a\u0440\u0430\u043d\u0430 Internet Availability ( WifiActivity ) \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Internet Availability \u0420\u0443\u0447\u043d\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u0440\u0443\u043a\u0430\u043c\u0438 \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 CHECK WIFI STATUS , \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0438\u043a\u0430\u043a\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0435\u0442. \u041d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Wifi \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u042d\u0442\u0430 \u043a\u043d\u043e\u043f\u043a\u0430 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430, \u043f\u043e\u0441\u043b\u0435 \u043a\u043b\u0438\u043a\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f Wifi - enabled. \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441\u043d\u043e\u0432\u0430 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043c \u0441\u0442\u0430\u0442\u0443\u0441 Wifi \u0441\u0435\u0439\u0447\u0430\u0441 \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 - \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0432\u0435\u0440\u043d\u0435\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438 \u0443\u0431\u0435\u0434\u0438\u043c\u0441\u044f, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0422\u0435\u043a\u0441\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0432\u0441\u0435 \u0442\u0435\u0441\u0442\u044b \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u044b. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0438\u0442\u044c\u0441\u044f \u0442\u0430\u043a\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0435 \u0442\u0435 \u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u0438\u0441\u044c \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435. \u0410\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u044b \u0421\u0435\u0439\u0447\u0430\u0441 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u0435\u043d\u044f\u0442\u044c \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0430 \u0430\u043b\u044c\u0431\u043e\u043c\u043d\u0443\u044e. \u042d\u0442\u043e \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u0440\u0430\u043c\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0430 \u0437\u043d\u0430\u0447\u0438\u0442 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u043d\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b \u0437\u0430\u043f\u0443\u0449\u0435\u043d ADB-\u0441\u0435\u0440\u0432\u0435\u0440. \u041c\u044b \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 . \u0415\u0441\u043b\u0438 \u0432\u0434\u0440\u0443\u0433 \u0437\u0430\u0431\u044b\u043b\u0438, \u043a\u0430\u043a \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f, \u043f\u0435\u0440\u0435\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0435\u0433\u043e. \u0421\u0435\u0439\u0447\u0430\u0441 \u0432 \u043d\u0430\u0448\u0435\u043c \u0442\u0435\u0441\u0442\u0435 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Internet Availability . \u0410 \u0437\u043d\u0430\u0447\u0438\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c Page Object \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430, \u0434\u043e\u0431\u0430\u0432\u0438\u0432 \u0442\u0443\u0434\u0430 \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043a\u043d\u043e\u043f\u043a\u0443: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } val wifiActivityButton = KButton { withId ( R . id . wifi_activity_btn ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441. \u0412 \u0442\u043e\u043c \u0436\u0435 \u043f\u0430\u043a\u0435\u0442\u0435, \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u043b\u0435\u0436\u0430\u0442 \u0434\u0440\u0443\u0433\u0438\u0435 \u0442\u0435\u0441\u0442\u044b, \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c WifiSampleTest package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class WifiSampleTest : TestCase () { } \u0414\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u0430 \u0441 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c\u044e Wifi \u043d\u0430 \u043d\u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u0435\u043c \u0442\u0430\u043a\u0438\u0435 \u0436\u0435 \u0448\u0430\u0433\u0438, \u043a\u0430\u043a \u0432 \u0443\u0440\u043e\u043a\u0435 , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442: \u0414\u043e\u0431\u0430\u0432\u0438\u043c activityRule, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u043b\u0430\u0441\u044c MainActivity \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u043e\u0432\u0435\u043a\u0438 Wifi \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041a\u043b\u0438\u043a\u043d\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \"Internet Availability\" package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 Wifi \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f. \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e. \u0414\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043d\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u043c\u0435\u043d\u044f\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a Wifi, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u0435\u043d\u044f\u0442\u044c \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 BaseTestCase (\u043e\u0442 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d \u043d\u0430\u0448 \u043a\u043b\u0430\u0441\u0441 WifiSampleTest) \u0435\u0441\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 Device , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0442\u0430\u043a \u0438 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f device . \u041c\u044b \u0443\u0436\u0435 \u0441\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u043b\u0438\u0441\u044c \u0441 \u043d\u0438\u043c \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u043b\u0438 packageName \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0423 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0435\u0441\u0442\u044c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432, \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0442\u0443\u0442 \u041f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043c\u0435\u0442\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442/\u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442. \u0417\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0441\u0435\u0442\u044c\u044e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 network , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0435\u0441\u0442\u044c \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 Device . \u0415\u0441\u043b\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 Wifi, \u0442\u043e \u043c\u043e\u0436\u0435\u043c \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: /** * \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0442\u0438\u043f boolean, false \u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u0438\u043c \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442\u044c WIFI, true - \u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u0438\u043c \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c */ device . network . toggleWiFi ( false ) \u041a\u0440\u043e\u043c\u0435 WIFI \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0439 \u0441\u0435\u0442\u044c\u044e, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432 \u0446\u0435\u043b\u043e\u043c (Wifi + \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u0435\u0442\u044c). \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0432\u044b\u0448\u0435, \u043d\u043e \u0435\u0441\u0442\u044c \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u0440\u043e\u0449\u0435 - \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0443 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u041f\u043e \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u043e\u043d\u0438 \u0434\u0435\u043b\u0430\u044e\u0442. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0442\u0435\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442 \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u043a\u0440\u043e\u043c\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 - \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442\u043e\u043c \u043c\u044b \u0437\u0430\u0439\u043c\u0435\u043c\u0441\u044f \u0447\u0443\u0442\u044c \u043f\u043e\u0437\u0436\u0435. \u041f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c Page Object \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f WifiScreen . \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043f\u0430\u043a\u0435\u0442\u0435 com.kaspersky.kaspresso.tutorial.screen package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton import io.github.kakaocup.kakao.text.KTextView object WifiScreen : KScreen < WifiScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val checkWifiButton = KButton { withId ( R . id . check_wifi_btn ) } val wifiStatus = KTextView { withId ( R . id . wifi_status ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0448\u0430\u0433\u0438: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"enabled\" \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"disabled\" package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () device . network . toggleWiFi ( true ) checkWifiButton . click () wifiStatus . hasText ( \"enabled\" ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( \"disabled\" ) } } } \u0412\u0441\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u043c, \u0447\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442, \u043b\u0443\u0447\u0448\u0435 \u0432\u043c\u0435\u0441\u0442\u043e \u043d\u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b. package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } } Info \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c Wifi \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435, \u0442.\u043a. \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043e\u043d \u0443 \u0432\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d \u0438 \u043f\u0440\u0438 \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u043e\u0433\u043e\u043d\u0435 \u0442\u0435\u0441\u0442 \u043d\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u0442. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438. \u0417\u0430 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 exploit \u0438\u0437 \u043a\u043b\u0430\u0441\u0441\u0430 Device , \u043f\u0440\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0412\u0435\u0441\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0442\u0435\u0441\u0442\u0430 \u0442\u0435\u043f\u0435\u0440\u044c \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u043a\u043d\u0438\u0436\u043d\u0443\u044e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"enabled\" \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"disabled\" \u041f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0441\u044f \"disabled\" package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0418\u0442\u043e\u0433 \u0418\u0442\u0430\u043a, \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u043c\u044b \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c device , \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0435\u0439\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u044d\u043a\u0440\u0430\u043d\u0430 \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0442\u0435\u0441\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f, \u0432\u0441\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u044e\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u043d\u043e \u0432 \u043d\u0430\u0448\u0435\u043c \u043a\u043e\u0434\u0435 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u0440\u044c\u0435\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c: \u0422\u0435\u0441\u0442 \u043d\u0435 \u0440\u0430\u0437\u0431\u0438\u0442 \u043d\u0430 \u0448\u0430\u0433\u0438. \u0412 \u0438\u0442\u043e\u0433\u0435 \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u043a\u043e\u0434\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0422\u0435\u0441\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043c\u044b \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u043f\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0430\u0434\u0430\u0442\u044c \u0438\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0435\u0433\u043e Wifi \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u043c\u044b \u0443\u0437\u043d\u0430\u0435\u043c, \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438 \u0440\u0435\u0448\u0438\u0442\u044c \u0432\u043e\u0437\u043d\u0438\u043a\u0448\u0438\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b.","title":"Wifi_sample_test"},{"location":"Tutorial/Wifi_sample_test/#-device","text":"\u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0442\u0435\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u044d\u043a\u0440\u0430\u043d\u0430 Internet Availability ( WifiActivity ) \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Internet Availability","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u043c Device"},{"location":"Tutorial/Wifi_sample_test/#_1","text":"\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u0440\u0443\u043a\u0430\u043c\u0438 \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 CHECK WIFI STATUS , \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0438\u043a\u0430\u043a\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0435\u0442. \u041d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Wifi \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u042d\u0442\u0430 \u043a\u043d\u043e\u043f\u043a\u0430 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430, \u043f\u043e\u0441\u043b\u0435 \u043a\u043b\u0438\u043a\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f Wifi - enabled. \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441\u043d\u043e\u0432\u0430 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043c \u0441\u0442\u0430\u0442\u0443\u0441 Wifi \u0441\u0435\u0439\u0447\u0430\u0441 \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 - \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0432\u0435\u0440\u043d\u0435\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438 \u0443\u0431\u0435\u0434\u0438\u043c\u0441\u044f, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0422\u0435\u043a\u0441\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0432\u0441\u0435 \u0442\u0435\u0441\u0442\u044b \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u044b. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0438\u0442\u044c\u0441\u044f \u0442\u0430\u043a\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0435 \u0442\u0435 \u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u0438\u0441\u044c \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435.","title":"\u0420\u0443\u0447\u043d\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"Tutorial/Wifi_sample_test/#_2","text":"\u0421\u0435\u0439\u0447\u0430\u0441 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u0435\u043d\u044f\u0442\u044c \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0430 \u0430\u043b\u044c\u0431\u043e\u043c\u043d\u0443\u044e. \u042d\u0442\u043e \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u0440\u0430\u043c\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0430 \u0437\u043d\u0430\u0447\u0438\u0442 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u043d\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b \u0437\u0430\u043f\u0443\u0449\u0435\u043d ADB-\u0441\u0435\u0440\u0432\u0435\u0440. \u041c\u044b \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 . \u0415\u0441\u043b\u0438 \u0432\u0434\u0440\u0443\u0433 \u0437\u0430\u0431\u044b\u043b\u0438, \u043a\u0430\u043a \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f, \u043f\u0435\u0440\u0435\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0435\u0433\u043e. \u0421\u0435\u0439\u0447\u0430\u0441 \u0432 \u043d\u0430\u0448\u0435\u043c \u0442\u0435\u0441\u0442\u0435 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Internet Availability . \u0410 \u0437\u043d\u0430\u0447\u0438\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c Page Object \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430, \u0434\u043e\u0431\u0430\u0432\u0438\u0432 \u0442\u0443\u0434\u0430 \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043a\u043d\u043e\u043f\u043a\u0443: package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } val wifiActivityButton = KButton { withId ( R . id . wifi_activity_btn ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441. \u0412 \u0442\u043e\u043c \u0436\u0435 \u043f\u0430\u043a\u0435\u0442\u0435, \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u043b\u0435\u0436\u0430\u0442 \u0434\u0440\u0443\u0433\u0438\u0435 \u0442\u0435\u0441\u0442\u044b, \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c WifiSampleTest package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class WifiSampleTest : TestCase () { } \u0414\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u0430 \u0441 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c\u044e Wifi \u043d\u0430 \u043d\u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u0435\u043c \u0442\u0430\u043a\u0438\u0435 \u0436\u0435 \u0448\u0430\u0433\u0438, \u043a\u0430\u043a \u0432 \u0443\u0440\u043e\u043a\u0435 , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442: \u0414\u043e\u0431\u0430\u0432\u0438\u043c activityRule, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u043b\u0430\u0441\u044c MainActivity \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u043e\u0432\u0435\u043a\u0438 Wifi \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041a\u043b\u0438\u043a\u043d\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \"Internet Availability\" package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 Wifi \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f. \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e. \u0414\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043d\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u043c\u0435\u043d\u044f\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a Wifi, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u0435\u043d\u044f\u0442\u044c \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 BaseTestCase (\u043e\u0442 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d \u043d\u0430\u0448 \u043a\u043b\u0430\u0441\u0441 WifiSampleTest) \u0435\u0441\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 Device , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0442\u0430\u043a \u0438 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f device . \u041c\u044b \u0443\u0436\u0435 \u0441\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u043b\u0438\u0441\u044c \u0441 \u043d\u0438\u043c \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u043b\u0438 packageName \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0423 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0435\u0441\u0442\u044c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432, \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0442\u0443\u0442 \u041f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043c\u0435\u0442\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442/\u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442. \u0417\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0441\u0435\u0442\u044c\u044e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 network , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0435\u0441\u0442\u044c \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 Device . \u0415\u0441\u043b\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 Wifi, \u0442\u043e \u043c\u043e\u0436\u0435\u043c \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: /** * \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0442\u0438\u043f boolean, false \u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u0438\u043c \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442\u044c WIFI, true - \u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u0438\u043c \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c */ device . network . toggleWiFi ( false ) \u041a\u0440\u043e\u043c\u0435 WIFI \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0439 \u0441\u0435\u0442\u044c\u044e, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432 \u0446\u0435\u043b\u043e\u043c (Wifi + \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u0435\u0442\u044c). \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0432\u044b\u0448\u0435, \u043d\u043e \u0435\u0441\u0442\u044c \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u0440\u043e\u0449\u0435 - \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0443 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u041f\u043e \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u043e\u043d\u0438 \u0434\u0435\u043b\u0430\u044e\u0442. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0442\u0435\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442 \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u043a\u0440\u043e\u043c\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 - \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442\u043e\u043c \u043c\u044b \u0437\u0430\u0439\u043c\u0435\u043c\u0441\u044f \u0447\u0443\u0442\u044c \u043f\u043e\u0437\u0436\u0435. \u041f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c Page Object \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f WifiScreen . \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043f\u0430\u043a\u0435\u0442\u0435 com.kaspersky.kaspresso.tutorial.screen package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton import io.github.kakaocup.kakao.text.KTextView object WifiScreen : KScreen < WifiScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val checkWifiButton = KButton { withId ( R . id . check_wifi_btn ) } val wifiStatus = KTextView { withId ( R . id . wifi_status ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0448\u0430\u0433\u0438: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"enabled\" \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"disabled\" package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () device . network . toggleWiFi ( true ) checkWifiButton . click () wifiStatus . hasText ( \"enabled\" ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( \"disabled\" ) } } } \u0412\u0441\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u043c, \u0447\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442, \u043b\u0443\u0447\u0448\u0435 \u0432\u043c\u0435\u0441\u0442\u043e \u043d\u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b. package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } } Info \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c Wifi \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435, \u0442.\u043a. \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043e\u043d \u0443 \u0432\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d \u0438 \u043f\u0440\u0438 \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u043e\u0433\u043e\u043d\u0435 \u0442\u0435\u0441\u0442 \u043d\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u0442. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438. \u0417\u0430 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 exploit \u0438\u0437 \u043a\u043b\u0430\u0441\u0441\u0430 Device , \u043f\u0440\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0412\u0435\u0441\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0442\u0435\u0441\u0442\u0430 \u0442\u0435\u043f\u0435\u0440\u044c \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u043a\u043d\u0438\u0436\u043d\u0443\u044e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"enabled\" \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi \u041a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0442\u0430\u043b \"disabled\" \u041f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0441\u044f \"disabled\" package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","title":"\u0410\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u044b"},{"location":"Tutorial/Wifi_sample_test/#_3","text":"\u0418\u0442\u0430\u043a, \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u043c\u044b \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c device , \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0435\u0439\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u044d\u043a\u0440\u0430\u043d\u0430 \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0442\u0435\u0441\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f, \u0432\u0441\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u044e\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u043d\u043e \u0432 \u043d\u0430\u0448\u0435\u043c \u043a\u043e\u0434\u0435 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u0440\u044c\u0435\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c: \u0422\u0435\u0441\u0442 \u043d\u0435 \u0440\u0430\u0437\u0431\u0438\u0442 \u043d\u0430 \u0448\u0430\u0433\u0438. \u0412 \u0438\u0442\u043e\u0433\u0435 \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u043a\u043e\u0434\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0422\u0435\u0441\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043c\u044b \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u043f\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0430\u0434\u0430\u0442\u044c \u0438\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0435\u0433\u043e Wifi \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u043c\u044b \u0443\u0437\u043d\u0430\u0435\u043c, \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438 \u0440\u0435\u0448\u0438\u0442\u044c \u0432\u043e\u0437\u043d\u0438\u043a\u0448\u0438\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b.","title":"\u0418\u0442\u043e\u0433"},{"location":"Tutorial/Writing_simple_test/","text":"\u0412\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043d\u0430 \u043d\u0443\u0436\u043d\u0443\u044e \u0432\u0435\u0442\u043a\u0443 \u0432 GIT \u0412 Android Studio \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0432\u0435\u0442\u043a\u0430\u043c\u0438 \u0438 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0430\u0437\u043e\u043c \u0432\u0438\u0434\u0435\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e, \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 Kaspresso \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0432\u0435\u0442\u043a\u0435 - master \u0412 \u044d\u0442\u043e\u0439 \u0432\u0435\u0442\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u0430\u043c\u0438. \u0412 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0430 \u043f\u043e\u0448\u0430\u0433\u043e\u0432\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 codelabs \u043f\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0432\u0435\u0442\u043a\u0435 TECH-tutorial-results , \u0432\u044b \u0432 \u043b\u044e\u0431\u043e\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043d\u0435\u0435 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0442\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0438 \u0432 \u043f\u043e\u0438\u0441\u043a\u0435 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0435\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0435\u0439 \u0432\u0430\u0441 \u0432\u0435\u0442\u043a\u0438. \u0420\u0443\u0447\u043d\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0442\u044c \u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0442\u0435\u0441\u0442\u0430, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0431\u043b\u0438\u0436\u0435 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043c\u0441\u044f \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043d\u0430 master-\u0432\u0435\u0442\u043a\u0443. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0432\u044b\u0431\u043e\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (1) \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c tutorial (2): \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u043d \u043d\u0443\u0436\u043d\u044b\u0439 \u0434\u0435\u0432\u0430\u0439\u0441 (1) \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (2): \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Tutorial. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \"Simple test\" \u0438 \u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437: 1. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 TextView 2. \u041f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 EditText 3. \u041a\u043d\u043e\u043f\u043a\u0438 Button Info \u041f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0438\u0434\u0436\u0435\u0442\u043e\u0432 \u0432 android \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430. \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u041c\u044b \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043b\u0438, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f\u043c: \u041d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleTest (\u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043d\u0430\u0441 \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0442) \u042d\u0442\u0430 \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u041d\u0430 \u043d\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u041f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u043d\u0435\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleTest \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 SimpleTest \u0435\u0441\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b - \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u0438 \u043a\u043d\u043e\u043f\u043a\u0430 \u0412\u0441\u0435 \u044d\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0438\u0434\u0438\u043c\u044b \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u0441\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0415\u0441\u043b\u0438 \u0432\u0432\u0435\u0441\u0442\u0438 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u0438 \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443, \u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0432\u0441\u0435 \u0442\u0435 \u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u043a\u043e\u0434\u0435, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u043b\u0438\u0441\u044c \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 Kaspresso, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Kaspresso \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c Kaspresso \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443 \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u0430\u043a Project (1) \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0432 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0441\u0435\u043a\u0446\u0438\u044e dependencies \u0432 \u0444\u0430\u0439\u043b\u0435 build.gradle \u043c\u043e\u0434\u0443\u043b\u044f Tutorial : dependencies { androidTestImplementation ( \"com.kaspersky.android-components:kaspresso:1.4.3\" ) androidTestUtil ( \"androidx.test:orchestrator:1.4.2\" ) } \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430 \u043d\u0430\u0447\u043d\u0435\u043c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Page object \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u041c\u043e\u0436\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u043d\u0430\u0448\u0435\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0427\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0442\u0435\u0441\u0442\u0435, \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c (\u043a\u043b\u0430\u0441\u0441), \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 (\u043a\u043d\u043e\u043f\u043a\u0438, \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435 \u043f\u043e\u043b\u044f \u0438 \u0442.\u0434.), \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u044d\u043a\u0440\u0430\u043d, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442. \u0422\u0430\u043a\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f Page Object \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e \u043d\u0435\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0412 \u043f\u0435\u0440\u0432\u044b\u0445 \u0447\u0435\u0442\u044b\u0440\u0435\u0445 \u043f\u0443\u043d\u043a\u0442\u0430\u0445 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u043c \u0441 \u0433\u043b\u0430\u0432\u043d\u044b\u043c \u044d\u043a\u0440\u0430\u043d\u043e\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c Page Object \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u0420\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0432 \u043f\u0430\u043f\u043a\u0435 androidTest \u0432 \u043c\u043e\u0434\u0443\u043b\u0435 tutorial. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u044d\u0442\u043e\u0439 \u043f\u0430\u043f\u043a\u0438 \u043d\u0435\u0442, \u0442\u043e \u0435\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u043d\u0430 \u043f\u0430\u043f\u043a\u0443 src \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442 New -> Directory \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442 androidTest/kotlin \u0412\u043d\u0443\u0442\u0440\u0438 \u043f\u0430\u043f\u043a\u0438 kotlin \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u043a\u0435\u0442 (package), \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432\u0441\u0435 Page Object-\u044b. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0430\u043a\u0435\u0442\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0435 \u0432\u043b\u0438\u044f\u0435\u0442, \u043c\u044b \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430, \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432 \u043b\u0435\u0436\u0430\u043b\u0438 \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430\u0442\u044c \u043f\u0430\u043a\u0435\u0442\u0443 \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f (\u0437\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c), \u043d\u043e \u043e\u0431\u044b\u0447\u043d\u043e \u0432 \u0442\u0435\u0441\u0442\u0430\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0442\u0430\u043a\u0438\u0435 \u0436\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f, \u043a\u0430\u043a \u0432 \u0441\u0430\u043c\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u0444\u0430\u0439\u043b MainActivity \u0438 \u0442\u0443\u0442 \u0441\u0432\u0435\u0440\u0445\u0443 \u0431\u0443\u0434\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430. \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e \u0438\u043c\u044f \u0438 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430. \u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0432 \u044d\u0442\u043e\u043c \u043f\u0430\u043a\u0435\u0442\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432 (Page Object-\u044b), \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c .screen . \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0442\u0435\u0441\u0442\u0430\u043c\u0438, \u0442\u043e \u0431\u0443\u0434\u0435\u043c \u043a\u043b\u0430\u0441\u0442\u044c \u0438\u0445 \u0443\u0436\u0435 \u0432 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b, \u043d\u043e \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 com.kaspersky.kaspresso.tutorial . \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c \u043f\u0430\u043a\u0435\u0442\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u044d\u043a\u0440\u0430\u043d\u0430 (\u043a\u043b\u0430\u0441\u0441) \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0442\u0438\u043f Object \u0438 \u0438\u043c\u0435\u043d\u0443\u0435\u043c MainScreen. MainScreen \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen, \u0438 \u0432 \u0443\u0433\u043b\u043e\u0432\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430. Info \u0423\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 \u0432 \u0443\u0433\u043b\u043e\u0432\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u0432 Java \u0438 Kotlin \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f Generics. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u043e Java \u0438 Kotlin package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { } \u0423 \u043d\u0430\u0441 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430 - \u0440\u0430\u0437 \u043c\u044b \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430. \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u0431\u044b\u0441\u0442\u0440\u043e \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0436\u0430\u0442\u044c \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044e \u043a\u043b\u0430\u0432\u0438\u0448 ctrl + i \u0438 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c. \u0423\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f ctrl \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u043f\u0443\u043d\u043a\u0442\u044b \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c OK. package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? get () = TODO ( \"Not yet implemented\" ) override val viewClass : Class <*>? get () = TODO ( \"Not yet implemented\" ) } \u0417\u0434\u0435\u0441\u044c \u0432\u043c\u0435\u0441\u0442\u043e TODO \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e - id \u043c\u0430\u043a\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c \u0432\u0435\u0440\u0441\u0442\u043a\u0438 \u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u043c activity. \u042d\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0442\u0435\u0441\u0442\u0430, \u043d\u043e \u043f\u043e\u043a\u0430 \u043f\u0435\u0440\u0435\u0434 \u043d\u0430\u043c\u0438 \u0441\u0442\u043e\u0438\u0442 \u0437\u0430\u0434\u0430\u0447\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 null package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null } \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043d\u043e\u043f\u043a\u0430 SimpleTest. \u0427\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442 \u043c\u043e\u0433 \u0441 \u043d\u0435\u0439 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c, \u043d\u0443\u0436\u043d\u043e \u0437\u043d\u0430\u0442\u044c id, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435. \u042d\u0442\u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0427\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 id \u0431\u044b\u043b \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d \u043a\u0430\u043a\u043e\u043c\u0443-\u0442\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u043c, \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u043c \u0432 Android Studio - LayoutInspector. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0412 \u043f\u0440\u0430\u0432\u043e\u043c \u043d\u0438\u0436\u043d\u0435\u043c \u0443\u0433\u043b\u0443 Android Studio \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442 Layout Inspector \u0416\u0434\u0435\u043c \u043f\u043e\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d \u0415\u0441\u043b\u0438 \u044d\u043a\u0440\u0430\u043d \u043d\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b\u0441\u044f, \u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u0432\u044b\u0431\u0440\u0430\u043d \u043d\u0443\u0436\u043d\u044b\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0418\u0449\u0435\u043c \u043f\u0443\u043d\u043a\u0442 id - \u044d\u0442\u043e \u0442\u043e\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442. \u0422\u0430\u043a\u0436\u0435 \u0432\u0430\u0436\u043d\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c, \u0441 \u043a\u0430\u043a\u0438\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c UI \u043c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043c\u0430\u043a\u0435\u0442, \u0433\u0434\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u044b\u043b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0435\u043c. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442 Button c \u0432\u043e\u0442 \u0442\u0430\u043a\u0438\u043c id simple_activity_btn \u041c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u0432 MainScreen, \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0434\u0430\u044e\u0442 \u0442\u0430\u043a\u043e\u0435 \u0436\u0435, \u043a\u0430\u043a id, \u043d\u043e \u0431\u0435\u0437 \u043d\u0438\u0436\u043d\u0438\u0445 \u043f\u043e\u0434\u0447\u0435\u0440\u043a\u0438\u0432\u0430\u043d\u0438\u0439, \u043a\u0430\u043a\u0436\u0434\u043e\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 \u0441\u043b\u043e\u0432\u043e \u0441 \u0437\u0430\u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0431\u0443\u043a\u0432\u044b (\u044d\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f camelCase) package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = } \u041f\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 simpleActivityButton \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043e\u043d\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c - \u0437\u0430 \u044d\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 class KButton. \u0412\u043e\u0442 \u0442\u0430\u043a \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u044d\u0442\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u044d\u0442\u043e\u0442 \u043a\u043e\u0434. package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } } \u0412\u043e-\u043f\u0435\u0440\u0432\u044b\u0445, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 KButton \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u043e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e, \u0443\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f ctrl, \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 KButton \u043b\u0435\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438. \u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 KBaseView \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 TextViewAssertions. \u041c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 KBaseView \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435\u0445 \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u043e\u0432 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430, \u0438\u0445 \u0442\u0443\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043c\u043d\u043e\u0433\u043e. \u0417\u0430\u0447\u0435\u043c \u043e\u043d\u0438 \u0432\u0441\u0435 \u043d\u0443\u0436\u043d\u044b? \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0440\u0430\u0437\u043d\u043e\u043c\u0443. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443, \u0443 TextView \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u0442\u0435\u043a\u0441\u0442 \u0441\u0435\u0439\u0447\u0430\u0441 \u0432 \u043d\u0435\u0433\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d, \u043c\u043e\u0436\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442, \u0432 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u044f ProgressBar - \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0442\u0435\u043a\u0441\u0442 \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0442\u043e, \u043a\u0430\u043a\u043e\u0439 \u0442\u0435\u043a\u0441\u0442 \u0432 \u043d\u0435\u0433\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d, \u043d\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c, \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e KBaseView. \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u044b\u0431\u0440\u0430\u043b\u0438 KButton. \u041d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a (TextView) \u0438 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 (EditText) \u0438 \u0432\u044b\u0431\u0435\u0440\u0435\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 KBaseView. \u0418\u0434\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435, \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e \u043a\u0430\u043a\u043e\u043c\u0443-\u0442\u043e \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044e. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u043c \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e id, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0430\u0442\u0447\u0435\u0440 withId, \u043a\u0443\u0434\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043d\u043e\u043f\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043d\u0430\u0448\u043b\u0438 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f Layout Inpector. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u044d\u0442\u043e\u0442 id \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 R.id..., \u0433\u0434\u0435 R - \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043d\u0435\u043c\u0443, \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0441\u0442\u0440\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435, \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u0438 \u0442.\u0434. \u041f\u0440\u0438 \u0432\u0432\u043e\u0434\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 Android Studio \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u043d\u043e \u0438\u043d\u043e\u0433\u0434\u0430 \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442, \u0442\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u044d\u0442\u043e\u0442 \u0438\u043c\u043f\u043e\u0440\u0442 \u0432\u0440\u0443\u0447\u043d\u0443\u044e import com.kaspersky.kaspresso.tutorial.R \u0412\u0441\u0435, \u0442\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0438 \u044d\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043d\u043e\u043f\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \u041c\u043e\u0436\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0441\u0430\u043c \u0442\u0435\u0441\u0442 \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c SimpleActivityTest \u0412 \u043f\u0430\u043f\u043a\u0435 androidTest - kotlin , \u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u0430\u043c\u0438 \u043f\u0430\u043a\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043b\u0430\u0441\u0441 SimpleActivityTest . \u041d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0431\u044b\u043b \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d \u0432 \u043f\u0430\u043a\u0435\u0442\u0435 screen , \u043d\u043e \u043c\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u0431\u044b, \u0447\u0442\u043e\u0431\u044b \u0432 \u043d\u0435\u043c \u043b\u0435\u0436\u0430\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u0441\u0442 \u043c\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u043c \u0432 \u043a\u043e\u0440\u0435\u043d\u044c \u043f\u0430\u043a\u0435\u0442\u0430 com.kaspersky.kaspresso.tutorial . \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Refactor -> Move \u0418 \u0443\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0447\u0430\u0441\u0442\u044c .screen \u041a\u043b\u0430\u0441\u0441 \u0442\u0435\u0441\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 TestCase. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u044b, \u043a\u043b\u0430\u0441\u0441 TestCase \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u0438\u0437 \u043f\u0430\u043a\u0435\u0442\u0430 import com.kaspersky.kaspresso.testcases.api.testcase.TestCase . package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class SimpleActivityTest : TestCase () { } \u0418 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u0435\u0442\u043e\u0434 test(), \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0423 \u043d\u0435\u0433\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \"test\", \u043d\u043e \u0432\u0430\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0431\u044b\u043b \u043f\u043e\u043c\u0435\u0447\u0435\u043d \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0435\u0439 @Test (import org.junit.Test). package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class SimpleActivityTest : TestCase () { @Test fun test () { } } \u0422\u0435\u0441\u0442 SimpleActivityTest \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c. \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u0421\u0435\u0439\u0447\u0430\u0441 \u044d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u0435\u043b\u0430\u0435\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0435\u043c\u0443 \u043b\u043e\u0433\u0438\u043a\u0438 \u0438 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c MainScreen. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen class SimpleActivityTest : TestCase () { @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () } } } } \u0412\u043d\u0443\u0442\u0440\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 test \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 MainScreen, \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 \u0438 \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u043c\u0441\u044f \u043a \u043a\u043d\u043e\u043f\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0431\u0443\u0434\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0434\u0430\u043b\u044c\u0448\u0435 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0435\u0449\u0435 \u0440\u0430\u0437 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 \u0438 \u0442\u0443\u0442 \u043f\u0438\u0448\u0435\u043c \u0432\u0441\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438. \u0421\u0435\u0439\u0447\u0430\u0441, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043c\u0435\u0442\u043e\u0434\u0430\u043c isVisible() \u0438 isClickable() \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043f\u043e \u043d\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0438 \u043d\u0430\u0448 \u0442\u0435\u0441\u0442 \u043f\u0430\u0434\u0430\u0435\u0442. \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e Page Object MainScreen \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a MainActivity (\u0438\u043c\u0435\u043d\u043d\u043e \u044d\u0442\u0443 \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0432\u0438\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435) \u0438, \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043b\u0438\u0441\u044c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435, \u044d\u0442\u0443 \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u043c \u0442\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u0441\u0442\u043e\u043c \u0431\u044b\u043b\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u0430 \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438, \u043d\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438: @get : Rule val activityRule = activityScenarioRule < MainActivity > () \u042d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442 \u0437\u0430\u043f\u0443\u0441\u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 activity MainActivity \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0438 \u0437\u0430\u043a\u0440\u043e\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e activityScenarioRule \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0437\u0434\u0435\u0441\u044c \u0422\u043e\u0433\u0434\u0430 \u0432\u0435\u0441\u044c \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.MainActivity import org.junit.Rule import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0412\u0441\u0435 \u043e\u0442\u043b\u0438\u0447\u043d\u043e, \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043d\u0430 \u0434\u0435\u0432\u0430\u0439\u0441\u0435, \u0447\u0442\u043e \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0443\u0436\u043d\u0430\u044f \u043d\u0430\u043c \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430. \u0425\u043e\u0440\u043e\u0448\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, \u043d\u043e \u0438 \u043f\u0430\u0434\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \u0422\u0430\u043a \u0432\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u043a\u043e\u0433\u0434\u0430 \u0442\u0435\u0441\u0442\u044b \"\u0437\u0435\u043b\u0435\u043d\u044b\u0435\", \u043d\u043e \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0438\u0437-\u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u043a\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u0438\u0441\u044c. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442. class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () containsText ( \"Incorrect text\" ) } } } } \u0422\u0435\u0441\u0442 \u043f\u0430\u0434\u0430\u0435\u0442, \u043c\u0435\u043d\u044f\u0435\u043c \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439. class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () containsText ( \"Simple test\" ) } } } } \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c SimpleActivity. \u0414\u0435\u043b\u0430\u0435\u043c \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441 MainScreen - \u0441\u043e\u0437\u0434\u0430\u0435\u043c Page Object object SimpleActivityScreen : KScreen < SimpleActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null } \u0418\u0449\u0435\u043c \u0430\u0439\u0434\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 Layout Inspector \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 View \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 - KTextView, \u0434\u043b\u044f \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 - KEditText, \u0434\u043b\u044f \u043a\u043d\u043e\u043f\u043a\u0438 - KButton object SimpleActivityScreen : KScreen < SimpleActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleTitle = KTextView { withId ( R . id . simple_title ) } val inputText = KEditText { withId ( R . id . input_text ) } val changeTitleButton = KButton { withId ( R . id . change_title_btn ) } } \u0418 \u0442\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d. \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043d\u0430 \u043d\u0435\u0433\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438, \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443, \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c click() \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.MainActivity import org.junit.Rule import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.SimpleActivityScreen class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () click () } } SimpleActivityScreen { simpleTitle . isVisible () changeTitleButton . isClickable () simpleTitle . hasText ( \"Default title\" ) inputText . replaceText ( \"new title\" ) changeTitleButton . click () simpleTitle . hasText ( \"new title\" ) } } } \u041d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u043e\u0442\u043e\u0432. \u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0441\u0442\u043e\u0438\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c - \u0442\u0443\u0442 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \"Default title\". \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0442\u0435\u0441\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442, \u043d\u043e \u0435\u0441\u043b\u0438 \u0432\u0434\u0440\u0443\u0433 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u044f\u0437\u044b\u043a\u0438, \u0442\u043e \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0441 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0439 \u043b\u043e\u043a\u0430\u043b\u044c\u044e \u0442\u0435\u0441\u0442 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0430 \u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0441 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u043b\u043e\u043a\u0430\u043b\u044c\u044e, \u0442\u043e \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u0434\u0435\u0442. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0445\u0430\u0440\u0434\u043a\u043e\u0434\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443, \u043c\u044b \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0435\u0435 \u0438\u0437 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u043c\u0430\u043a\u0435\u0442\u0435 \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0430\u0441\u044c \u0432 \u044d\u0442\u043e\u043c TextView. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b (\u0444\u0430\u0439\u043b values/strings.xml) \u0438 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c id \u0441\u0442\u0440\u043e\u043a\u0438 \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 hasText \u0432\u043c\u0435\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \"Default title\" \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0435\u0435 id. R.string.simple_activity_default_title \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 R import com.kaspersky.kaspresso.tutorial.R \u0424\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0432\u043e\u0442 \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.MainActivity import com.kaspersky.kaspresso.tutorial.R import org.junit.Rule import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.SimpleActivityScreen class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () click () } } SimpleActivityScreen { simpleTitle . isVisible () changeTitleButton . isClickable () simpleTitle . hasText ( R . string . simple_activity_default_title ) inputText . replaceText ( \"new title\" ) changeTitleButton . click () simpleTitle . hasText ( \"new title\" ) } } } \u0418\u0442\u043e\u0433 \u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso. \u041d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043b\u0438\u0441\u044c \u0441 \u043f\u043e\u0434\u0445\u043e\u0434\u043e\u043c PageObject. \u041d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 Layout instector.","title":"\u041f\u0438\u0448\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442 \u0441 Kaspresso"},{"location":"Tutorial/Writing_simple_test/#kaspresso","text":"","title":"\u0412\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso"},{"location":"Tutorial/Writing_simple_test/#git","text":"\u0412 Android Studio \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0432\u0435\u0442\u043a\u0430\u043c\u0438 \u0438 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0430\u0437\u043e\u043c \u0432\u0438\u0434\u0435\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e, \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 Kaspresso \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0432\u0435\u0442\u043a\u0435 - master \u0412 \u044d\u0442\u043e\u0439 \u0432\u0435\u0442\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u0430\u043c\u0438. \u0412 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0430 \u043f\u043e\u0448\u0430\u0433\u043e\u0432\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 codelabs \u043f\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0432\u0435\u0442\u043a\u0435 TECH-tutorial-results , \u0432\u044b \u0432 \u043b\u044e\u0431\u043e\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043d\u0435\u0435 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0442\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0438 \u0432 \u043f\u043e\u0438\u0441\u043a\u0435 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0435\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0435\u0439 \u0432\u0430\u0441 \u0432\u0435\u0442\u043a\u0438.","title":"\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043d\u0430 \u043d\u0443\u0436\u043d\u0443\u044e \u0432\u0435\u0442\u043a\u0443 \u0432 GIT"},{"location":"Tutorial/Writing_simple_test/#_1","text":"\u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0442\u044c \u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0442\u0435\u0441\u0442\u0430, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0431\u043b\u0438\u0436\u0435 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043c\u0441\u044f \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043d\u0430 master-\u0432\u0435\u0442\u043a\u0443. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0432\u044b\u0431\u043e\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (1) \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c tutorial (2): \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u043d \u043d\u0443\u0436\u043d\u044b\u0439 \u0434\u0435\u0432\u0430\u0439\u0441 (1) \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (2): \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Tutorial. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \"Simple test\" \u0438 \u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437: 1. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 TextView 2. \u041f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 EditText 3. \u041a\u043d\u043e\u043f\u043a\u0438 Button Info \u041f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0438\u0434\u0436\u0435\u0442\u043e\u0432 \u0432 android \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430.","title":"\u0420\u0443\u0447\u043d\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"Tutorial/Writing_simple_test/#_2","text":"\u041c\u044b \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043b\u0438, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f\u043c: \u041d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u0435\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleTest (\u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043d\u0430\u0441 \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0442) \u042d\u0442\u0430 \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u041d\u0430 \u043d\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u041f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u043d\u0435\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleTest \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 SimpleTest \u0435\u0441\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b - \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u0438 \u043a\u043d\u043e\u043f\u043a\u0430 \u0412\u0441\u0435 \u044d\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0438\u0434\u0438\u043c\u044b \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u0441\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0415\u0441\u043b\u0438 \u0432\u0432\u0435\u0441\u0442\u0438 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u0438 \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443, \u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0432\u0441\u0435 \u0442\u0435 \u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u043a\u043e\u0434\u0435, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u043b\u0438\u0441\u044c \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 Kaspresso, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Kaspresso \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u0430.","title":"\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"Tutorial/Writing_simple_test/#kaspresso_1","text":"\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u0430\u043a Project (1) \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0432 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0441\u0435\u043a\u0446\u0438\u044e dependencies \u0432 \u0444\u0430\u0439\u043b\u0435 build.gradle \u043c\u043e\u0434\u0443\u043b\u044f Tutorial : dependencies { androidTestImplementation ( \"com.kaspersky.android-components:kaspresso:1.4.3\" ) androidTestUtil ( \"androidx.test:orchestrator:1.4.2\" ) }","title":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c Kaspresso \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443"},{"location":"Tutorial/Writing_simple_test/#page-object","text":"\u041c\u043e\u0436\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u043d\u0430\u0448\u0435\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0427\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0442\u0435\u0441\u0442\u0435, \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c (\u043a\u043b\u0430\u0441\u0441), \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 (\u043a\u043d\u043e\u043f\u043a\u0438, \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435 \u043f\u043e\u043b\u044f \u0438 \u0442.\u0434.), \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u044d\u043a\u0440\u0430\u043d, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442. \u0422\u0430\u043a\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f Page Object \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e \u043d\u0435\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0412 \u043f\u0435\u0440\u0432\u044b\u0445 \u0447\u0435\u0442\u044b\u0440\u0435\u0445 \u043f\u0443\u043d\u043a\u0442\u0430\u0445 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u043c \u0441 \u0433\u043b\u0430\u0432\u043d\u044b\u043c \u044d\u043a\u0440\u0430\u043d\u043e\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c Page Object \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u0420\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0432 \u043f\u0430\u043f\u043a\u0435 androidTest \u0432 \u043c\u043e\u0434\u0443\u043b\u0435 tutorial. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u044d\u0442\u043e\u0439 \u043f\u0430\u043f\u043a\u0438 \u043d\u0435\u0442, \u0442\u043e \u0435\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u043d\u0430 \u043f\u0430\u043f\u043a\u0443 src \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442 New -> Directory \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442 androidTest/kotlin \u0412\u043d\u0443\u0442\u0440\u0438 \u043f\u0430\u043f\u043a\u0438 kotlin \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u043a\u0435\u0442 (package), \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432\u0441\u0435 Page Object-\u044b. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0430\u043a\u0435\u0442\u0430 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0435 \u0432\u043b\u0438\u044f\u0435\u0442, \u043c\u044b \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430, \u0447\u0442\u043e\u0431\u044b \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432 \u043b\u0435\u0436\u0430\u043b\u0438 \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430\u0442\u044c \u043f\u0430\u043a\u0435\u0442\u0443 \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f (\u0437\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c), \u043d\u043e \u043e\u0431\u044b\u0447\u043d\u043e \u0432 \u0442\u0435\u0441\u0442\u0430\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0442\u0430\u043a\u0438\u0435 \u0436\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f, \u043a\u0430\u043a \u0432 \u0441\u0430\u043c\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u0444\u0430\u0439\u043b MainActivity \u0438 \u0442\u0443\u0442 \u0441\u0432\u0435\u0440\u0445\u0443 \u0431\u0443\u0434\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430. \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e \u0438\u043c\u044f \u0438 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430. \u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0432 \u044d\u0442\u043e\u043c \u043f\u0430\u043a\u0435\u0442\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432 (Page Object-\u044b), \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c .screen . \u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0442\u0435\u0441\u0442\u0430\u043c\u0438, \u0442\u043e \u0431\u0443\u0434\u0435\u043c \u043a\u043b\u0430\u0441\u0442\u044c \u0438\u0445 \u0443\u0436\u0435 \u0432 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b, \u043d\u043e \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 com.kaspersky.kaspresso.tutorial . \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c \u043f\u0430\u043a\u0435\u0442\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u044d\u043a\u0440\u0430\u043d\u0430 (\u043a\u043b\u0430\u0441\u0441) \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0442\u0438\u043f Object \u0438 \u0438\u043c\u0435\u043d\u0443\u0435\u043c MainScreen. MainScreen \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen, \u0438 \u0432 \u0443\u0433\u043b\u043e\u0432\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430. Info \u0423\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 \u0432 \u0443\u0433\u043b\u043e\u0432\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u0432 Java \u0438 Kotlin \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f Generics. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u043e Java \u0438 Kotlin package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { } \u0423 \u043d\u0430\u0441 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430 - \u0440\u0430\u0437 \u043c\u044b \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430. \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u0431\u044b\u0441\u0442\u0440\u043e \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0436\u0430\u0442\u044c \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044e \u043a\u043b\u0430\u0432\u0438\u0448 ctrl + i \u0438 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c. \u0423\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f ctrl \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u043f\u0443\u043d\u043a\u0442\u044b \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c OK. package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? get () = TODO ( \"Not yet implemented\" ) override val viewClass : Class <*>? get () = TODO ( \"Not yet implemented\" ) } \u0417\u0434\u0435\u0441\u044c \u0432\u043c\u0435\u0441\u0442\u043e TODO \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e - id \u043c\u0430\u043a\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c \u0432\u0435\u0440\u0441\u0442\u043a\u0438 \u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u043c activity. \u042d\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0442\u0435\u0441\u0442\u0430, \u043d\u043e \u043f\u043e\u043a\u0430 \u043f\u0435\u0440\u0435\u0434 \u043d\u0430\u043c\u0438 \u0441\u0442\u043e\u0438\u0442 \u0437\u0430\u0434\u0430\u0447\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 null package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null } \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0430\u0441\u0441\u0430 KScreen \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043d\u043e\u043f\u043a\u0430 SimpleTest. \u0427\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442 \u043c\u043e\u0433 \u0441 \u043d\u0435\u0439 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c, \u043d\u0443\u0436\u043d\u043e \u0437\u043d\u0430\u0442\u044c id, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435. \u042d\u0442\u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0427\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 id \u0431\u044b\u043b \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d \u043a\u0430\u043a\u043e\u043c\u0443-\u0442\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u043c, \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u043c \u0432 Android Studio - LayoutInspector. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0412 \u043f\u0440\u0430\u0432\u043e\u043c \u043d\u0438\u0436\u043d\u0435\u043c \u0443\u0433\u043b\u0443 Android Studio \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0443\u043d\u043a\u0442 Layout Inspector \u0416\u0434\u0435\u043c \u043f\u043e\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d \u0415\u0441\u043b\u0438 \u044d\u043a\u0440\u0430\u043d \u043d\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b\u0441\u044f, \u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u0432\u044b\u0431\u0440\u0430\u043d \u043d\u0443\u0436\u043d\u044b\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0418\u0449\u0435\u043c \u043f\u0443\u043d\u043a\u0442 id - \u044d\u0442\u043e \u0442\u043e\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442. \u0422\u0430\u043a\u0436\u0435 \u0432\u0430\u0436\u043d\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c, \u0441 \u043a\u0430\u043a\u0438\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c UI \u043c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043c\u0430\u043a\u0435\u0442, \u0433\u0434\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u044b\u043b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0435\u043c. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442 Button c \u0432\u043e\u0442 \u0442\u0430\u043a\u0438\u043c id simple_activity_btn \u041c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u0432 MainScreen, \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0434\u0430\u044e\u0442 \u0442\u0430\u043a\u043e\u0435 \u0436\u0435, \u043a\u0430\u043a id, \u043d\u043e \u0431\u0435\u0437 \u043d\u0438\u0436\u043d\u0438\u0445 \u043f\u043e\u0434\u0447\u0435\u0440\u043a\u0438\u0432\u0430\u043d\u0438\u0439, \u043a\u0430\u043a\u0436\u0434\u043e\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 \u0441\u043b\u043e\u0432\u043e \u0441 \u0437\u0430\u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0431\u0443\u043a\u0432\u044b (\u044d\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f camelCase) package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = } \u041f\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 simpleActivityButton \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043e\u043d\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c - \u0437\u0430 \u044d\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 class KButton. \u0412\u043e\u0442 \u0442\u0430\u043a \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u044d\u0442\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u044d\u0442\u043e\u0442 \u043a\u043e\u0434. package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } } \u0412\u043e-\u043f\u0435\u0440\u0432\u044b\u0445, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 KButton \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u043e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e, \u0443\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f ctrl, \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 KButton \u043b\u0435\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438. \u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 KBaseView \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 TextViewAssertions. \u041c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 KBaseView \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435\u0445 \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u043e\u0432 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430, \u0438\u0445 \u0442\u0443\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043c\u043d\u043e\u0433\u043e. \u0417\u0430\u0447\u0435\u043c \u043e\u043d\u0438 \u0432\u0441\u0435 \u043d\u0443\u0436\u043d\u044b? \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0440\u0430\u0437\u043d\u043e\u043c\u0443. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443, \u0443 TextView \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u0442\u0435\u043a\u0441\u0442 \u0441\u0435\u0439\u0447\u0430\u0441 \u0432 \u043d\u0435\u0433\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d, \u043c\u043e\u0436\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442, \u0432 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u044f ProgressBar - \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0442\u0435\u043a\u0441\u0442 \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0442\u043e, \u043a\u0430\u043a\u043e\u0439 \u0442\u0435\u043a\u0441\u0442 \u0432 \u043d\u0435\u0433\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d, \u043d\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c, \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e KBaseView. \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u044b\u0431\u0440\u0430\u043b\u0438 KButton. \u041d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a (TextView) \u0438 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 (EditText) \u0438 \u0432\u044b\u0431\u0435\u0440\u0435\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 KBaseView. \u0418\u0434\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435, \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e \u043a\u0430\u043a\u043e\u043c\u0443-\u0442\u043e \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044e. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u043c \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e id, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0430\u0442\u0447\u0435\u0440 withId, \u043a\u0443\u0434\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043d\u043e\u043f\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043d\u0430\u0448\u043b\u0438 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f Layout Inpector. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u044d\u0442\u043e\u0442 id \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 R.id..., \u0433\u0434\u0435 R - \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043d\u0435\u043c\u0443, \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c id \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0441\u0442\u0440\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435, \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u0438 \u0442.\u0434. \u041f\u0440\u0438 \u0432\u0432\u043e\u0434\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 Android Studio \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u043d\u043e \u0438\u043d\u043e\u0433\u0434\u0430 \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442, \u0442\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u044d\u0442\u043e\u0442 \u0438\u043c\u043f\u043e\u0440\u0442 \u0432\u0440\u0443\u0447\u043d\u0443\u044e import com.kaspersky.kaspresso.tutorial.R \u0412\u0441\u0435, \u0442\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0438 \u044d\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043d\u043e\u043f\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \u041c\u043e\u0436\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0441\u0430\u043c \u0442\u0435\u0441\u0442","title":"\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430 \u043d\u0430\u0447\u043d\u0435\u043c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Page object \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430."},{"location":"Tutorial/Writing_simple_test/#simpleactivitytest","text":"\u0412 \u043f\u0430\u043f\u043a\u0435 androidTest - kotlin , \u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u0430\u043c\u0438 \u043f\u0430\u043a\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043b\u0430\u0441\u0441 SimpleActivityTest . \u041d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0431\u044b\u043b \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d \u0432 \u043f\u0430\u043a\u0435\u0442\u0435 screen , \u043d\u043e \u043c\u044b \u0445\u043e\u0442\u0435\u043b\u0438 \u0431\u044b, \u0447\u0442\u043e\u0431\u044b \u0432 \u043d\u0435\u043c \u043b\u0435\u0436\u0430\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u0441\u0442 \u043c\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u043c \u0432 \u043a\u043e\u0440\u0435\u043d\u044c \u043f\u0430\u043a\u0435\u0442\u0430 com.kaspersky.kaspresso.tutorial . \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Refactor -> Move \u0418 \u0443\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0447\u0430\u0441\u0442\u044c .screen \u041a\u043b\u0430\u0441\u0441 \u0442\u0435\u0441\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 TestCase. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u044b, \u043a\u043b\u0430\u0441\u0441 TestCase \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u0438\u0437 \u043f\u0430\u043a\u0435\u0442\u0430 import com.kaspersky.kaspresso.testcases.api.testcase.TestCase . package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class SimpleActivityTest : TestCase () { } \u0418 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u0435\u0442\u043e\u0434 test(), \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0423 \u043d\u0435\u0433\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043b\u044e\u0431\u043e\u0435 \u0438\u043c\u044f, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \"test\", \u043d\u043e \u0432\u0430\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0431\u044b\u043b \u043f\u043e\u043c\u0435\u0447\u0435\u043d \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0435\u0439 @Test (import org.junit.Test). package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class SimpleActivityTest : TestCase () { @Test fun test () { } } \u0422\u0435\u0441\u0442 SimpleActivityTest \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c. \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u0421\u0435\u0439\u0447\u0430\u0441 \u044d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u0435\u043b\u0430\u0435\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0435\u043c\u0443 \u043b\u043e\u0433\u0438\u043a\u0438 \u0438 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c MainScreen. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen class SimpleActivityTest : TestCase () { @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () } } } } \u0412\u043d\u0443\u0442\u0440\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 test \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 MainScreen, \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 \u0438 \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u043c\u0441\u044f \u043a \u043a\u043d\u043e\u043f\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0431\u0443\u0434\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0434\u0430\u043b\u044c\u0448\u0435 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0435\u0449\u0435 \u0440\u0430\u0437 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 \u0438 \u0442\u0443\u0442 \u043f\u0438\u0448\u0435\u043c \u0432\u0441\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438. \u0421\u0435\u0439\u0447\u0430\u0441, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043c\u0435\u0442\u043e\u0434\u0430\u043c isVisible() \u0438 isClickable() \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0432\u0438\u0434\u0438\u043c\u0430 \u0438 \u043f\u043e \u043d\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0438 \u043d\u0430\u0448 \u0442\u0435\u0441\u0442 \u043f\u0430\u0434\u0430\u0435\u0442. \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e Page Object MainScreen \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a MainActivity (\u0438\u043c\u0435\u043d\u043d\u043e \u044d\u0442\u0443 \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0432\u0438\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435) \u0438, \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043b\u0438\u0441\u044c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435, \u044d\u0442\u0443 \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u043c \u0442\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u0441\u0442\u043e\u043c \u0431\u044b\u043b\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u0430 \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438, \u043d\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438: @get : Rule val activityRule = activityScenarioRule < MainActivity > () \u042d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442 \u0437\u0430\u043f\u0443\u0441\u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 activity MainActivity \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0438 \u0437\u0430\u043a\u0440\u043e\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e activityScenarioRule \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0437\u0434\u0435\u0441\u044c \u0422\u043e\u0433\u0434\u0430 \u0432\u0435\u0441\u044c \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.MainActivity import org.junit.Rule import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0412\u0441\u0435 \u043e\u0442\u043b\u0438\u0447\u043d\u043e, \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043d\u0430 \u0434\u0435\u0432\u0430\u0439\u0441\u0435, \u0447\u0442\u043e \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0443\u0436\u043d\u0430\u044f \u043d\u0430\u043c \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430. \u0425\u043e\u0440\u043e\u0448\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, \u043d\u043e \u0438 \u043f\u0430\u0434\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \u0422\u0430\u043a \u0432\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u043a\u043e\u0433\u0434\u0430 \u0442\u0435\u0441\u0442\u044b \"\u0437\u0435\u043b\u0435\u043d\u044b\u0435\", \u043d\u043e \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0438\u0437-\u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u043a\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u0438\u0441\u044c. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442. class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () containsText ( \"Incorrect text\" ) } } } } \u0422\u0435\u0441\u0442 \u043f\u0430\u0434\u0430\u0435\u0442, \u043c\u0435\u043d\u044f\u0435\u043c \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439. class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () containsText ( \"Simple test\" ) } } } } \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c SimpleActivity. \u0414\u0435\u043b\u0430\u0435\u043c \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441 MainScreen - \u0441\u043e\u0437\u0434\u0430\u0435\u043c Page Object object SimpleActivityScreen : KScreen < SimpleActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null } \u0418\u0449\u0435\u043c \u0430\u0439\u0434\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 Layout Inspector \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 View \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 - KTextView, \u0434\u043b\u044f \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 - KEditText, \u0434\u043b\u044f \u043a\u043d\u043e\u043f\u043a\u0438 - KButton object SimpleActivityScreen : KScreen < SimpleActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleTitle = KTextView { withId ( R . id . simple_title ) } val inputText = KEditText { withId ( R . id . input_text ) } val changeTitleButton = KButton { withId ( R . id . change_title_btn ) } } \u0418 \u0442\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d. \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043d\u0430 \u043d\u0435\u0433\u043e \u043f\u0435\u0440\u0435\u0439\u0442\u0438, \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043a\u043b\u0438\u043a\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443, \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c click() \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.MainActivity import org.junit.Rule import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.SimpleActivityScreen class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () click () } } SimpleActivityScreen { simpleTitle . isVisible () changeTitleButton . isClickable () simpleTitle . hasText ( \"Default title\" ) inputText . replaceText ( \"new title\" ) changeTitleButton . click () simpleTitle . hasText ( \"new title\" ) } } } \u041d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u043e\u0442\u043e\u0432. \u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0441\u0442\u043e\u0438\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c - \u0442\u0443\u0442 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \"Default title\". \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0442\u0435\u0441\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442, \u043d\u043e \u0435\u0441\u043b\u0438 \u0432\u0434\u0440\u0443\u0433 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u044f\u0437\u044b\u043a\u0438, \u0442\u043e \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0441 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0439 \u043b\u043e\u043a\u0430\u043b\u044c\u044e \u0442\u0435\u0441\u0442 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0430 \u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0441 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u043b\u043e\u043a\u0430\u043b\u044c\u044e, \u0442\u043e \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u0434\u0435\u0442. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0445\u0430\u0440\u0434\u043a\u043e\u0434\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443, \u043c\u044b \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0435\u0435 \u0438\u0437 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u043c\u0430\u043a\u0435\u0442\u0435 \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0430\u0441\u044c \u0432 \u044d\u0442\u043e\u043c TextView. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u0432 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b (\u0444\u0430\u0439\u043b values/strings.xml) \u0438 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c id \u0441\u0442\u0440\u043e\u043a\u0438 \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 hasText \u0432\u043c\u0435\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \"Default title\" \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0435\u0435 id. R.string.simple_activity_default_title \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 R import com.kaspersky.kaspresso.tutorial.R \u0424\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0432\u043e\u0442 \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.MainActivity import com.kaspersky.kaspresso.tutorial.R import org.junit.Rule import org.junit.Test import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.SimpleActivityScreen class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () isClickable () click () } } SimpleActivityScreen { simpleTitle . isVisible () changeTitleButton . isClickable () simpleTitle . hasText ( R . string . simple_activity_default_title ) inputText . replaceText ( \"new title\" ) changeTitleButton . click () simpleTitle . hasText ( \"new title\" ) } } }","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c SimpleActivityTest"},{"location":"Tutorial/Writing_simple_test/#_3","text":"\u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso. \u041d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043b\u0438\u0441\u044c \u0441 \u043f\u043e\u0434\u0445\u043e\u0434\u043e\u043c PageObject. \u041d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 Layout instector.","title":"\u0418\u0442\u043e\u0433"},{"location":"Tutorial/%D0%92%D1%8B%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D1%81%D0%B5%D0%BA%D1%86%D0%B8%D0%B9%20%D0%B8%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2/","text":"Steps \u0423\u043b\u0443\u0447\u0448\u0430\u0435\u043c \u043a\u043e\u0434 \u0412 \u043f\u0440\u043e\u0448\u043b\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0442\u0435\u0441\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430, \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u043b \u0432\u043e\u0442 \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u0418 \u043c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u0438 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u0434\u043d\u0430 \u0438\u0437 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0435\u0433\u043e \u0441\u043b\u043e\u0436\u043d\u043e \u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0434\u0430\u0436\u0435 \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435, \u0430 \u0435\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u044d\u043a\u0440\u0430\u043d\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u0441\u044f \u0438 \u043d\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0435\u0449\u0435 \u0442\u0435\u0441\u0442\u044b, \u0442\u043e \u043a\u043e\u0434 \u0441\u0442\u0430\u043d\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435\u0447\u0438\u0442\u0430\u0435\u043c\u044b\u043c. \u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u043e\u0431\u044b\u0447\u043d\u043e \u043b\u044e\u0431\u044b\u0435 \u0442\u0435\u0441\u0442\u044b (\u0432 \u0442.\u0447. \u0440\u0443\u0447\u043d\u044b\u0435) \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043f\u043e test-\u043a\u0435\u0439\u0441\u0430\u043c. \u0422\u043e \u0435\u0441\u0442\u044c \u0443 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0430 \u0435\u0441\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u044d\u043a\u0440\u0430\u043d\u0430. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u044d\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432, \u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u043e\u043d\u0430 \u0441\u043f\u043b\u043e\u0448\u043d\u044b\u043c \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u0438 \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0433\u0434\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u0448\u0430\u0433 \u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0434\u0440\u0443\u0433\u043e\u0439. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0435\u0448\u0438\u0442\u044c \u044d\u0442\u0443 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 WifiSampleTest \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u043c \u0432 \u044d\u0442\u043e\u0442 \u0436\u0435 \u043f\u0430\u043a\u0435\u0442, \u043d\u043e \u0443\u0436\u0435 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c WifiSampleWithStepsTest . \u042d\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043f\u043e\u0442\u043e\u043c \u0441\u043c\u043e\u0433\u043b\u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u0438 \u0441\u0442\u0430\u0440\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u041a\u043e\u0434 WifiSampleTest \u043c\u044b \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u043c\u0435\u043d\u044f\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0435\u043c. \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043d\u043e\u0432\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 WifiSampleWithStepsTest \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0448\u0430\u0433\u0443. package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { // Step 1. Open target screen MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { // Step 2. Check correct wifi status device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) // Step 3. Rotate device and check wifi status device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u042d\u0442\u043e \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430, \u043d\u043e \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043d\u0435 \u0440\u0435\u0448\u0438\u0442. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0443 \u0432\u0430\u0441 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u0434\u0435\u0442, \u043a\u0430\u043a \u0432\u044b \u0443\u0437\u043d\u0430\u0435\u0442\u0435, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u0448\u0430\u0433\u0435 \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e? \u0412\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438, \u043f\u044b\u0442\u0430\u044f\u0441\u044c \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a. \u0411\u044b\u043b\u043e \u0431\u044b \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043b\u0443\u0447\u0448\u0435, \u0435\u0441\u043b\u0438 \u0431\u044b \u0432 \u043b\u043e\u0433\u0430\u0445 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u043b\u0438\u0441\u044c \u0437\u0430\u043f\u0438\u0441\u0438 \u0432\u0440\u043e\u0434\u0435 Step 1 started -> ... -> Step 1 succeed \u0438\u043b\u0438 Step 2 started -> ... -> Step 2 failed . \u0422\u043e\u0433\u0434\u0430 \u043f\u043e \u043b\u043e\u0433\u0430\u043c \u0432\u044b \u0441\u0440\u0430\u0437\u0443 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u0430\u043c\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432\u044b\u0432\u043e\u0434 \u0432 \u043b\u043e\u0433 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0448\u0430\u0433\u043e\u043c, \u0447\u0442\u043e \u043e\u043d \u043d\u0430\u0447\u0430\u043b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435, \u0437\u0430\u0442\u0435\u043c, \u0447\u0442\u043e \u043e\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0438 \u043e\u0431\u0435\u0440\u043d\u0443\u0442\u044c \u044d\u0442\u043e \u0432\u0441\u0435 \u0432 \u0431\u043b\u043e\u043a try catch , \u0447\u0442\u043e\u0431\u044b, \u0435\u0441\u043b\u0438 \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u043b, \u043c\u044b \u044d\u0442\u043e \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0432 \u043b\u043e\u0433\u0430\u0445. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u0448 \u0442\u0435\u0441\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u043b \u0431\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import android.util.Log import androidx.test.core.app.takeScreenshot import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { try { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> started\" ) MainScreen { wifiActivityButton { isVisible () isClickable () click () } } Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> failed\" ) takeScreenshot () } WifiScreen { try { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> started\" ) device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> failed\" ) } try { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> started\" ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> failed\" ) takeScreenshot () } } } } \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u043a\u043b\u044e\u0447\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u043d\u0430\u0448\u0435\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043b\u043e\u0433\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Logcat \u0432 \u043d\u0438\u0436\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 Android Studio \u0417\u0434\u0435\u0441\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043b\u043e\u0433\u043e\u0432 \u0438 \u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0448\u0438 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u043e. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438 \u043f\u043e \u0442\u044d\u0433\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u043b\u0438 (\"KASPRESSO\"). \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u0441\u0442\u0440\u0435\u043b\u043a\u0443 \u0432 \u043f\u0440\u0430\u0432\u043e\u0439 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 Logcat \u0438 \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0443\u043d\u043a\u0442 Edit Configuration \u0423 \u0432\u0430\u0441 \u043e\u0442\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u043e\u043a\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430. \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0442\u044d\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0447\u0438\u0441\u0442\u0438\u043c \u043b\u043e\u0433 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0442\u0435\u0441\u0442 \u0435\u0449\u0435 \u0440\u0430\u0437. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u0434 \u044d\u0442\u0438\u043c \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u0427\u0438\u0442\u0430\u0435\u043c \u043b\u043e\u0433\u0438: \u0417\u0434\u0435\u0441\u044c \u0438\u0434\u0443\u0442 \u043b\u043e\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 - \u0448\u0430\u0433 1 \u0437\u0430\u043f\u0443\u0449\u0435\u043d, \u0437\u0430\u0442\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u0437\u0430\u0442\u0435\u043c \u0448\u0430\u0433 1 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043b\u044c\u0448\u0435 \u0421\u043e \u0432\u0442\u043e\u0440\u044b\u043c \u0438 \u0442\u0440\u0435\u0442\u044c\u0438\u043c \u0448\u0430\u0433\u0430\u043c\u0438 \u0442\u0430\u043a\u0436\u0435 \u0432\u0441\u0435 \u0445\u043e\u0440\u043e\u0448\u043e. \u041d\u0430\u043c \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 \u0438 \u043a\u0430\u043a\u043e\u0439 \u0448\u0430\u0433 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435, \u0432\u0438\u0434\u043d\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0442\u0435\u0441\u0442 \u0438 \u0432\u0438\u0434\u0435\u043d \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0435\u0441\u0442\u044b. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0442\u0435\u0441\u0442 \u0435\u0449\u0435 \u0440\u0430\u0437. \u041f\u043e \u043d\u0430\u0448\u0435\u0439 \u043b\u043e\u0433\u0438\u043a\u0435 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e. \u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u043b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439, \u0432\u0441\u0435 \u0442\u0435\u0441\u0442\u044b \u0437\u0435\u043b\u0435\u043d\u044b\u0435. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0432 \u043b\u043e\u0433 - \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 step 2, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u043b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u0430\u043d\u043e \u0438\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e \u0447\u0442\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d \u0421\u0443\u0434\u044f \u043f\u043e \u043b\u043e\u0433\u0430\u043c step 2 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e. \u0411\u044b\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430, \u0442\u0435\u043a\u0441\u0442 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u043b, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u043b\u0430 \u0435\u0449\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u044b\u0442\u043e\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 enabled , \u043d\u043e \u0432\u0441\u0435 \u044d\u0442\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0438 \u043d\u0435 \u0443\u0432\u0435\u043d\u0447\u0430\u043b\u0438\u0441\u044c \u0443\u0441\u043f\u0435\u0445\u043e\u043c \u0438 \u0448\u0430\u0433 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439. \u041f\u043e\u0447\u0435\u043c\u0443 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0442\u0435\u0441\u0442\u044b \u0443 \u043d\u0430\u0441 \u0437\u0435\u043b\u0435\u043d\u044b\u0435? \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u0435\u0441\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e, \u0442\u043e \u0431\u0440\u043e\u0441\u0430\u0435\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u0438 \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043b \u0432 \u0431\u043b\u043e\u043a\u0435 try catch, \u0442\u043e \u0442\u0435\u0441\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u043a\u0440\u0430\u0441\u043d\u044b\u043c\u0438. \u0410 \u043c\u044b \u0432 \u043a\u043e\u0434\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0432\u0441\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u043b\u043e\u0433 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439. try { ... } catch ( e : Throwable ) { /** * \u041c\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438 \u0434\u0430\u043b\u044c\u0448\u0435 \u043e\u043d\u043e \u043f\u0440\u043e\u0431\u0440\u043e\u0448\u0435\u043d\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0442\u0430\u043a\u043e\u0439 * \u0442\u0435\u0441\u0442 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c \u0443\u0441\u043f\u0435\u0448\u043d\u043e */ Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> failed\" ) } \u0414\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 \u0432 \u043b\u043e\u0433 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0431\u0440\u043e\u0441\u0438\u0442\u044c \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043b\u044c\u0448\u0435, \u0447\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u043b. \u0414\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 throw . \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import android.util.Log import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { try { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> started\" ) MainScreen { wifiActivityButton { isVisible () isClickable () click () } } Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> failed\" ) throw e } WifiScreen { try { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> started\" ) device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> failed\" ) throw e } try { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> started\" ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> failed\" ) throw e } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442 \u0435\u0449\u0435 \u0440\u0430\u0437. \u0422\u0435\u043f\u0435\u0440\u044c \u043e\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 \u0438 \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0435 \u043b\u043e\u0433\u0438, \u0433\u0434\u0435 \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u0448\u0430\u0433\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0441\u043b\u0435 step 2 \u0432 \u043b\u043e\u0433\u0430\u0445 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435\u0442. \u041a\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438, \u0440\u0430\u0431\u043e\u0447\u0438\u0439, \u043d\u043e \u043e\u0447\u0435\u043d\u044c \u0433\u0440\u043e\u043c\u043e\u0437\u0434\u043a\u0438\u0439, \u0438 \u043d\u0430\u043c \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0448\u0430\u0433\u0430 \u043f\u0438\u0441\u0430\u0442\u044c \u0446\u0435\u043b\u043e\u0435 \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u0434\u0430 (\u043b\u043e\u0433\u0438, \u0431\u043b\u043e\u043a\u0438 try catch \u0438 \u0442.\u0434). Steps \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043a\u043e\u0434 \u0431\u043e\u043b\u0435\u0435 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u043c \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u044b\u043c \u0432 Kaspresso \u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b step-\u044b. \u0423 \u043d\u0438\u0445 \"\u043f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c\" \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e \u0432\u0441\u0435 \u0442\u043e, \u0447\u0442\u043e \u043c\u044b \u0441\u0435\u0439\u0447\u0430\u0441 \u043f\u0438\u0441\u0430\u043b\u0438 \u0432\u0440\u0443\u0447\u043d\u0443\u044e. \u0427\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c step-\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 run {} \u0438 \u0432 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430. \u041a\u0430\u0436\u0434\u044b\u0439 \u0448\u0430\u0433 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 step. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u044d\u0442\u043e \u0432 \u043a\u043e\u0434\u0435. \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0435\u0435 - \u043b\u043e\u0433\u0438 \u0438 \u0431\u043b\u043e\u043a\u0438 try catch. package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 run, \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0448\u0430\u0433\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e step . \u042d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0448\u0430\u0433\u0430 @Test fun test () { run { step ( \"Open target screen\" ) { ... } step ( \"Check correct wifi status\" ) { ... } step ( \"Rotate device and check wifi status\" ) { ... } } } \u0412\u043d\u0443\u0442\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u0433\u043e step-\u0430 \u043c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u043d\u0430 \u044d\u0442\u043e\u043c \u0448\u0430\u0433\u0435. \u0422\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u0447\u0442\u043e \u043c\u044b \u0434\u0435\u043b\u0430\u043b\u0438 \u0440\u0430\u043d\u044c\u0448\u0435. \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { run { step ( \"Open target screen\" ) { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } step ( \"Check correct wifi status\" ) { WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } step ( \"Rotate device and check wifi status\" ) { WifiScreen { device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } } } \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u043b\u043e\u0433\u0438: \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e step-\u043e\u0432, \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0448 \u043a\u043e\u0434 \u0441\u0442\u0430\u043b \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0438 \u043b\u0435\u0433\u043a\u0438\u0439 \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u044f\u0442\u0438\u044f, \u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u0438 \u043b\u043e\u0433\u0438 \u0438\u043c\u0435\u044e\u0442 \u043f\u043e\u043d\u044f\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0440\u0443 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u044d\u0442\u0430\u043f\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u0438\u0441\u044c \u0438 \u043a\u0430\u043a\u043e\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u044d\u0442\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0435\u0449\u0435 \u0440\u0430\u0437 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u044d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u0442\u0435\u043f\u0435\u0440\u044c \u0443\u0436\u0435 \u0441 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043e\u043c. \u0422\u0435\u0441\u0442 \u043f\u0430\u0434\u0430\u0435\u0442. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u043b\u043e\u0433\u0438. \u0422\u0435\u043f\u0435\u0440\u044c \u0438\u0441\u043a\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443 \u0432 \u0442\u0435\u0441\u0442\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043f\u0440\u043e\u0449\u0435, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u043b\u043e\u0433\u0430\u043c. Before \u0438 After \u041d\u0430\u0448 \u043a\u043e\u0434 \u0441\u0442\u0430\u043b \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043b\u0443\u0447\u0448\u0435, \u043d\u043e \u043e\u0441\u0442\u0430\u043b\u0430\u0441\u044c \u043e\u0434\u043d\u0430 \u0432\u0430\u0436\u043d\u0430\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 - \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0442\u0435\u0441\u0442\u043e\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u043b\u043e \u0432 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 - \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043a\u043d\u0438\u0436\u043d\u0430\u044f \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f. \u0412 Kaspresso \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0431\u043b\u043e\u043a\u0438 before \u0438 after . \u041a\u043e\u0434 \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 before \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u0441\u0442\u043e\u043c - \u0437\u0434\u0435\u0441\u044c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041a\u043e\u0434 \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 after \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430. \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f: \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442, \u0441\u043c\u0435\u043d\u0438\u0442\u044c \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043d\u043e \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430 \u043d\u0443\u0436\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435. \u0414\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 after . \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { before { /** * \u041f\u0435\u0440\u0435\u0434 \u0442\u0435\u0441\u0442\u043e\u043c \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u0438\u0436\u043d\u0443\u044e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi */ device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. after { /** * \u041f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 */ device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. run { step ( \"Open target screen\" ) { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } step ( \"Check correct wifi status\" ) { WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } step ( \"Rotate device and check wifi status\" ) { WifiScreen { device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } } } \u0422\u0435\u0441\u0442 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u043e\u0442\u043e\u0432, \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0434\u043d\u043e \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435. \u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043e\u0441\u0442\u0430\u043b\u0441\u044f \u043f\u0440\u0435\u0436\u043d\u0438\u043c, \u043d\u043e \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043c, \u0447\u0442\u043e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u043c\u0435\u043d\u044f\u043b\u0430\u0441\u044c. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 device.expoit.rotate() \u043f\u043e \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u043d\u0435 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u043b, \u0442\u043e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043d\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0442\u0435\u043a\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0447\u0442\u043e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430 \u0441\u0442\u0430\u043b\u0430 \u0430\u043b\u044c\u0431\u043e\u043c\u043d\u043e\u0439. Assert.assertTrue(device.context.resources.configuration.orientation == Configuration.ORIENTATION_LANDSCAPE) \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import android.content.res.Configuration import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Assert import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { before { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. after { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. run { step ( \"Open target screen\" ) { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } step ( \"Check correct wifi status\" ) { WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } step ( \"Rotate device and check wifi status\" ) { WifiScreen { device . exploit . rotate () Assert . assertTrue ( device . context . resources . configuration . orientation == Configuration . ORIENTATION_LANDSCAPE ) wifiStatus . hasText ( R . string . disabled_status ) } } } } } \u0418\u0442\u043e\u0433 \u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u0438 \u043d\u0430\u0448 \u043a\u043e\u0434, \u043e\u043d \u0441\u0442\u0430\u043b \u0447\u0438\u0449\u0435, \u043f\u043e\u043d\u044f\u0442\u043d\u0435\u0435, \u0438 \u0435\u0433\u043e \u0441\u0442\u0430\u043b\u043e \u043b\u0435\u0433\u0447\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c. \u042d\u0442\u043e \u0441\u0442\u0430\u043b\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0442\u0430\u043a\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c Kaspresso, \u043a\u0430\u043a step, before \u0438 after. \u0422\u0430\u043a\u0436\u0435 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432 \u043b\u043e\u0433, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0447\u0438\u0442\u0430\u0442\u044c \u043b\u043e\u0433\u0438, \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c.","title":"\u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0446\u0438\u0439 \u0438 \u0448\u0430\u0433\u043e\u0432"},{"location":"Tutorial/%D0%92%D1%8B%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D1%81%D0%B5%D0%BA%D1%86%D0%B8%D0%B9%20%D0%B8%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2/#steps","text":"","title":"Steps"},{"location":"Tutorial/%D0%92%D1%8B%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D1%81%D0%B5%D0%BA%D1%86%D0%B8%D0%B9%20%D0%B8%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2/#_1","text":"\u0412 \u043f\u0440\u043e\u0448\u043b\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0442\u0435\u0441\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430, \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u043b \u0432\u043e\u0442 \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u0418 \u043c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u0438 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u0434\u043d\u0430 \u0438\u0437 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0435\u0433\u043e \u0441\u043b\u043e\u0436\u043d\u043e \u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0434\u0430\u0436\u0435 \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435, \u0430 \u0435\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u044d\u043a\u0440\u0430\u043d\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u0441\u044f \u0438 \u043d\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0435\u0449\u0435 \u0442\u0435\u0441\u0442\u044b, \u0442\u043e \u043a\u043e\u0434 \u0441\u0442\u0430\u043d\u0435\u0442 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435\u0447\u0438\u0442\u0430\u0435\u043c\u044b\u043c. \u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u043e\u0431\u044b\u0447\u043d\u043e \u043b\u044e\u0431\u044b\u0435 \u0442\u0435\u0441\u0442\u044b (\u0432 \u0442.\u0447. \u0440\u0443\u0447\u043d\u044b\u0435) \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043f\u043e test-\u043a\u0435\u0439\u0441\u0430\u043c. \u0422\u043e \u0435\u0441\u0442\u044c \u0443 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0430 \u0435\u0441\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u044d\u043a\u0440\u0430\u043d\u0430. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u044d\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432, \u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u043e\u043d\u0430 \u0441\u043f\u043b\u043e\u0448\u043d\u044b\u043c \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u0438 \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0433\u0434\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u0448\u0430\u0433 \u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0434\u0440\u0443\u0433\u043e\u0439. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0435\u0448\u0438\u0442\u044c \u044d\u0442\u0443 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 WifiSampleTest \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u043c \u0432 \u044d\u0442\u043e\u0442 \u0436\u0435 \u043f\u0430\u043a\u0435\u0442, \u043d\u043e \u0443\u0436\u0435 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c WifiSampleWithStepsTest . \u042d\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043f\u043e\u0442\u043e\u043c \u0441\u043c\u043e\u0433\u043b\u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u0438 \u0441\u0442\u0430\u0440\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u041a\u043e\u0434 WifiSampleTest \u043c\u044b \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u043c\u0435\u043d\u044f\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0435\u043c. \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043d\u043e\u0432\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 WifiSampleWithStepsTest \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0448\u0430\u0433\u0443. package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { // Step 1. Open target screen MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { // Step 2. Check correct wifi status device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) // Step 3. Rotate device and check wifi status device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u042d\u0442\u043e \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430, \u043d\u043e \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043d\u0435 \u0440\u0435\u0448\u0438\u0442. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0443 \u0432\u0430\u0441 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u0434\u0435\u0442, \u043a\u0430\u043a \u0432\u044b \u0443\u0437\u043d\u0430\u0435\u0442\u0435, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u0448\u0430\u0433\u0435 \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e? \u0412\u0430\u043c \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438, \u043f\u044b\u0442\u0430\u044f\u0441\u044c \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a. \u0411\u044b\u043b\u043e \u0431\u044b \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043b\u0443\u0447\u0448\u0435, \u0435\u0441\u043b\u0438 \u0431\u044b \u0432 \u043b\u043e\u0433\u0430\u0445 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u043b\u0438\u0441\u044c \u0437\u0430\u043f\u0438\u0441\u0438 \u0432\u0440\u043e\u0434\u0435 Step 1 started -> ... -> Step 1 succeed \u0438\u043b\u0438 Step 2 started -> ... -> Step 2 failed . \u0422\u043e\u0433\u0434\u0430 \u043f\u043e \u043b\u043e\u0433\u0430\u043c \u0432\u044b \u0441\u0440\u0430\u0437\u0443 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u0430\u043c\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432\u044b\u0432\u043e\u0434 \u0432 \u043b\u043e\u0433 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0448\u0430\u0433\u043e\u043c, \u0447\u0442\u043e \u043e\u043d \u043d\u0430\u0447\u0430\u043b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435, \u0437\u0430\u0442\u0435\u043c, \u0447\u0442\u043e \u043e\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0438 \u043e\u0431\u0435\u0440\u043d\u0443\u0442\u044c \u044d\u0442\u043e \u0432\u0441\u0435 \u0432 \u0431\u043b\u043e\u043a try catch , \u0447\u0442\u043e\u0431\u044b, \u0435\u0441\u043b\u0438 \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u043b, \u043c\u044b \u044d\u0442\u043e \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0432 \u043b\u043e\u0433\u0430\u0445. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u0448 \u0442\u0435\u0441\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u043b \u0431\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import android.util.Log import androidx.test.core.app.takeScreenshot import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { try { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> started\" ) MainScreen { wifiActivityButton { isVisible () isClickable () click () } } Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> failed\" ) takeScreenshot () } WifiScreen { try { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> started\" ) device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> failed\" ) } try { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> started\" ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> failed\" ) takeScreenshot () } } } } \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u043a\u043b\u044e\u0447\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u043d\u0430\u0448\u0435\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043b\u043e\u0433\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Logcat \u0432 \u043d\u0438\u0436\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 Android Studio \u0417\u0434\u0435\u0441\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043b\u043e\u0433\u043e\u0432 \u0438 \u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0448\u0438 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u043e. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438 \u043f\u043e \u0442\u044d\u0433\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u043b\u0438 (\"KASPRESSO\"). \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043d\u0430 \u0441\u0442\u0440\u0435\u043b\u043a\u0443 \u0432 \u043f\u0440\u0430\u0432\u043e\u0439 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 Logcat \u0438 \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0443\u043d\u043a\u0442 Edit Configuration \u0423 \u0432\u0430\u0441 \u043e\u0442\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u043e\u043a\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430. \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0442\u044d\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0447\u0438\u0441\u0442\u0438\u043c \u043b\u043e\u0433 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0442\u0435\u0441\u0442 \u0435\u0449\u0435 \u0440\u0430\u0437. \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u0434 \u044d\u0442\u0438\u043c \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u0427\u0438\u0442\u0430\u0435\u043c \u043b\u043e\u0433\u0438: \u0417\u0434\u0435\u0441\u044c \u0438\u0434\u0443\u0442 \u043b\u043e\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 - \u0448\u0430\u0433 1 \u0437\u0430\u043f\u0443\u0449\u0435\u043d, \u0437\u0430\u0442\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u0437\u0430\u0442\u0435\u043c \u0448\u0430\u0433 1 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043b\u044c\u0448\u0435 \u0421\u043e \u0432\u0442\u043e\u0440\u044b\u043c \u0438 \u0442\u0440\u0435\u0442\u044c\u0438\u043c \u0448\u0430\u0433\u0430\u043c\u0438 \u0442\u0430\u043a\u0436\u0435 \u0432\u0441\u0435 \u0445\u043e\u0440\u043e\u0448\u043e. \u041d\u0430\u043c \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 \u0438 \u043a\u0430\u043a\u043e\u0439 \u0448\u0430\u0433 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435, \u0432\u0438\u0434\u043d\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0442\u0435\u0441\u0442 \u0438 \u0432\u0438\u0434\u0435\u043d \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0435\u0441\u0442\u044b. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0442\u0435\u0441\u0442 \u0435\u0449\u0435 \u0440\u0430\u0437. \u041f\u043e \u043d\u0430\u0448\u0435\u0439 \u043b\u043e\u0433\u0438\u043a\u0435 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e. \u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u043b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439, \u0432\u0441\u0435 \u0442\u0435\u0441\u0442\u044b \u0437\u0435\u043b\u0435\u043d\u044b\u0435. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0432 \u043b\u043e\u0433 - \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 step 2, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u043b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u0430\u043d\u043e \u0438\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e \u0447\u0442\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d \u0421\u0443\u0434\u044f \u043f\u043e \u043b\u043e\u0433\u0430\u043c step 2 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e. \u0411\u044b\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430, \u0442\u0435\u043a\u0441\u0442 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u043b, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u043b\u0430 \u0435\u0449\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u044b\u0442\u043e\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442 enabled , \u043d\u043e \u0432\u0441\u0435 \u044d\u0442\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0438 \u043d\u0435 \u0443\u0432\u0435\u043d\u0447\u0430\u043b\u0438\u0441\u044c \u0443\u0441\u043f\u0435\u0445\u043e\u043c \u0438 \u0448\u0430\u0433 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439. \u041f\u043e\u0447\u0435\u043c\u0443 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0442\u0435\u0441\u0442\u044b \u0443 \u043d\u0430\u0441 \u0437\u0435\u043b\u0435\u043d\u044b\u0435? \u0414\u0435\u043b\u043e \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u0435\u0441\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e, \u0442\u043e \u0431\u0440\u043e\u0441\u0430\u0435\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u0438 \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043b \u0432 \u0431\u043b\u043e\u043a\u0435 try catch, \u0442\u043e \u0442\u0435\u0441\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u043a\u0440\u0430\u0441\u043d\u044b\u043c\u0438. \u0410 \u043c\u044b \u0432 \u043a\u043e\u0434\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0432\u0441\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u043b\u043e\u0433 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439. try { ... } catch ( e : Throwable ) { /** * \u041c\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438 \u0434\u0430\u043b\u044c\u0448\u0435 \u043e\u043d\u043e \u043f\u0440\u043e\u0431\u0440\u043e\u0448\u0435\u043d\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0442\u0430\u043a\u043e\u0439 * \u0442\u0435\u0441\u0442 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c \u0443\u0441\u043f\u0435\u0448\u043d\u043e */ Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> failed\" ) } \u0414\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 \u0432 \u043b\u043e\u0433 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0431\u0440\u043e\u0441\u0438\u0442\u044c \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043b\u044c\u0448\u0435, \u0447\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442 \u0443\u043f\u0430\u043b. \u0414\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 throw . \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import android.util.Log import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { try { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> started\" ) MainScreen { wifiActivityButton { isVisible () isClickable () click () } } Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 1. Open target screen -> failed\" ) throw e } WifiScreen { try { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> started\" ) device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 2. Check correct wifi status -> failed\" ) throw e } try { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> started\" ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> succeed\" ) } catch ( e : Throwable ) { Log . i ( \"KASPRESSO\" , \"Step 3. Rotate device and check wifi status -> failed\" ) throw e } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442 \u0435\u0449\u0435 \u0440\u0430\u0437. \u0422\u0435\u043f\u0435\u0440\u044c \u043e\u043d \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 \u0438 \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0435 \u043b\u043e\u0433\u0438, \u0433\u0434\u0435 \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u0448\u0430\u0433\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0441\u043b\u0435 step 2 \u0432 \u043b\u043e\u0433\u0430\u0445 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435\u0442. \u041a\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438, \u0440\u0430\u0431\u043e\u0447\u0438\u0439, \u043d\u043e \u043e\u0447\u0435\u043d\u044c \u0433\u0440\u043e\u043c\u043e\u0437\u0434\u043a\u0438\u0439, \u0438 \u043d\u0430\u043c \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0448\u0430\u0433\u0430 \u043f\u0438\u0441\u0430\u0442\u044c \u0446\u0435\u043b\u043e\u0435 \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u0434\u0430 (\u043b\u043e\u0433\u0438, \u0431\u043b\u043e\u043a\u0438 try catch \u0438 \u0442.\u0434).","title":"\u0423\u043b\u0443\u0447\u0448\u0430\u0435\u043c \u043a\u043e\u0434"},{"location":"Tutorial/%D0%92%D1%8B%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D1%81%D0%B5%D0%BA%D1%86%D0%B8%D0%B9%20%D0%B8%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2/#steps_1","text":"\u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043a\u043e\u0434 \u0431\u043e\u043b\u0435\u0435 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u043c \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u044b\u043c \u0432 Kaspresso \u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b step-\u044b. \u0423 \u043d\u0438\u0445 \"\u043f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c\" \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e \u0432\u0441\u0435 \u0442\u043e, \u0447\u0442\u043e \u043c\u044b \u0441\u0435\u0439\u0447\u0430\u0441 \u043f\u0438\u0441\u0430\u043b\u0438 \u0432\u0440\u0443\u0447\u043d\u0443\u044e. \u0427\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c step-\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 run {} \u0438 \u0432 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430. \u041a\u0430\u0436\u0434\u044b\u0439 \u0448\u0430\u0433 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 step. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u044d\u0442\u043e \u0432 \u043a\u043e\u0434\u0435. \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0435\u0435 - \u043b\u043e\u0433\u0438 \u0438 \u0431\u043b\u043e\u043a\u0438 try catch. package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 run, \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0448\u0430\u0433\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e step . \u042d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0448\u0430\u0433\u0430 @Test fun test () { run { step ( \"Open target screen\" ) { ... } step ( \"Check correct wifi status\" ) { ... } step ( \"Rotate device and check wifi status\" ) { ... } } } \u0412\u043d\u0443\u0442\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u0433\u043e step-\u0430 \u043c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u043d\u0430 \u044d\u0442\u043e\u043c \u0448\u0430\u0433\u0435. \u0422\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u0447\u0442\u043e \u043c\u044b \u0434\u0435\u043b\u0430\u043b\u0438 \u0440\u0430\u043d\u044c\u0448\u0435. \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { run { step ( \"Open target screen\" ) { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } step ( \"Check correct wifi status\" ) { WifiScreen { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } step ( \"Rotate device and check wifi status\" ) { WifiScreen { device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } } } \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u043b\u043e\u0433\u0438: \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e step-\u043e\u0432, \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0448 \u043a\u043e\u0434 \u0441\u0442\u0430\u043b \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0438 \u043b\u0435\u0433\u043a\u0438\u0439 \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u044f\u0442\u0438\u044f, \u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u0438 \u043b\u043e\u0433\u0438 \u0438\u043c\u0435\u044e\u0442 \u043f\u043e\u043d\u044f\u0442\u043d\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0440\u0443 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u044d\u0442\u0430\u043f\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u0438\u0441\u044c \u0438 \u043a\u0430\u043a\u043e\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u044d\u0442\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0435\u0449\u0435 \u0440\u0430\u0437 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u044d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u0442\u0435\u043f\u0435\u0440\u044c \u0443\u0436\u0435 \u0441 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043e\u043c. \u0422\u0435\u0441\u0442 \u043f\u0430\u0434\u0430\u0435\u0442. \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u043b\u043e\u0433\u0438. \u0422\u0435\u043f\u0435\u0440\u044c \u0438\u0441\u043a\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443 \u0432 \u0442\u0435\u0441\u0442\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043f\u0440\u043e\u0449\u0435, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u043b\u043e\u0433\u0430\u043c.","title":"Steps"},{"location":"Tutorial/%D0%92%D1%8B%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D1%81%D0%B5%D0%BA%D1%86%D0%B8%D0%B9%20%D0%B8%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2/#before-after","text":"\u041d\u0430\u0448 \u043a\u043e\u0434 \u0441\u0442\u0430\u043b \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043b\u0443\u0447\u0448\u0435, \u043d\u043e \u043e\u0441\u0442\u0430\u043b\u0430\u0441\u044c \u043e\u0434\u043d\u0430 \u0432\u0430\u0436\u043d\u0430\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 - \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0442\u0435\u0441\u0442\u043e\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u043b\u043e \u0432 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 - \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043a\u043d\u0438\u0436\u043d\u0430\u044f \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f. \u0412 Kaspresso \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0431\u043b\u043e\u043a\u0438 before \u0438 after . \u041a\u043e\u0434 \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 before \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u0441\u0442\u043e\u043c - \u0437\u0434\u0435\u0441\u044c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041a\u043e\u0434 \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 after \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430. \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f: \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442, \u0441\u043c\u0435\u043d\u0438\u0442\u044c \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043d\u043e \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430 \u043d\u0443\u0436\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435. \u0414\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 after . \u0422\u043e\u0433\u0434\u0430 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { before { /** * \u041f\u0435\u0440\u0435\u0434 \u0442\u0435\u0441\u0442\u043e\u043c \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u0438\u0436\u043d\u0443\u044e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c Wifi */ device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. after { /** * \u041f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 */ device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. run { step ( \"Open target screen\" ) { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } step ( \"Check correct wifi status\" ) { WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } step ( \"Rotate device and check wifi status\" ) { WifiScreen { device . exploit . rotate () wifiStatus . hasText ( R . string . disabled_status ) } } } } } \u0422\u0435\u0441\u0442 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u043e\u0442\u043e\u0432, \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0434\u043d\u043e \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435. \u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043e\u0441\u0442\u0430\u043b\u0441\u044f \u043f\u0440\u0435\u0436\u043d\u0438\u043c, \u043d\u043e \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043c, \u0447\u0442\u043e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u043c\u0435\u043d\u044f\u043b\u0430\u0441\u044c. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 device.expoit.rotate() \u043f\u043e \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u043d\u0435 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u043b, \u0442\u043e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043d\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0442\u0435\u043a\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0447\u0442\u043e \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430 \u0441\u0442\u0430\u043b\u0430 \u0430\u043b\u044c\u0431\u043e\u043c\u043d\u043e\u0439. Assert.assertTrue(device.context.resources.configuration.orientation == Configuration.ORIENTATION_LANDSCAPE) \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import android.content.res.Configuration import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.device.exploit.Exploit import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import com.kaspersky.kaspresso.tutorial.screen.WifiScreen import org.junit.Assert import org.junit.Rule import org.junit.Test class WifiSampleWithStepsTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { before { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. after { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . network . toggleWiFi ( true ) }. run { step ( \"Open target screen\" ) { MainScreen { wifiActivityButton { isVisible () isClickable () click () } } } step ( \"Check correct wifi status\" ) { WifiScreen { checkWifiButton . isVisible () checkWifiButton . isClickable () wifiStatus . hasEmptyText () checkWifiButton . click () wifiStatus . hasText ( R . string . enabled_status ) device . network . toggleWiFi ( false ) checkWifiButton . click () wifiStatus . hasText ( R . string . disabled_status ) } } step ( \"Rotate device and check wifi status\" ) { WifiScreen { device . exploit . rotate () Assert . assertTrue ( device . context . resources . configuration . orientation == Configuration . ORIENTATION_LANDSCAPE ) wifiStatus . hasText ( R . string . disabled_status ) } } } } }","title":"Before \u0438 After"},{"location":"Tutorial/%D0%92%D1%8B%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D1%81%D0%B5%D0%BA%D1%86%D0%B8%D0%B9%20%D0%B8%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2/#_2","text":"\u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u0438 \u043d\u0430\u0448 \u043a\u043e\u0434, \u043e\u043d \u0441\u0442\u0430\u043b \u0447\u0438\u0449\u0435, \u043f\u043e\u043d\u044f\u0442\u043d\u0435\u0435, \u0438 \u0435\u0433\u043e \u0441\u0442\u0430\u043b\u043e \u043b\u0435\u0433\u0447\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c. \u042d\u0442\u043e \u0441\u0442\u0430\u043b\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0442\u0430\u043a\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c Kaspresso, \u043a\u0430\u043a step, before \u0438 after. \u0422\u0430\u043a\u0436\u0435 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432 \u043b\u043e\u0433, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0447\u0438\u0442\u0430\u0442\u044c \u043b\u043e\u0433\u0438, \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c.","title":"\u0418\u0442\u043e\u0433"},{"location":"Tutorial/%D0%92%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D1%80%D1%83%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%20%D0%B2%20Scenario/","text":"Scenario \u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043c\u0441\u044f \u0441\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u043c\u0438 (\u043a\u043b\u0430\u0441\u0441 Scenario \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Kaspresso), \u0443\u0437\u043d\u0430\u0435\u043c, \u0447\u0442\u043e \u044d\u0442\u043e, \u0434\u043b\u044f \u0447\u0435\u0433\u043e \u043e\u043d\u0438 \u043d\u0443\u0436\u043d\u044b, \u043a\u043e\u0433\u0434\u0430 \u0438\u0445 \u0441\u0442\u043e\u0438\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c, \u0430 \u043a\u043e\u0433\u0434\u0430 \u043b\u0443\u0447\u0448\u0435 \u0438\u0437\u0431\u0435\u0433\u0430\u0442\u044c. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Login Acitivity . \u0423 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0433\u0434\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Login \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u0435 username \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043c\u0435\u043d\u0435\u0435 \u0442\u0440\u0435\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438\u043b\u0438 \u043f\u043e\u043b\u0435 password \u043c\u0435\u043d\u0435\u0435 \u0448\u0435\u0441\u0442\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0442\u043e \u043f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 LOGIN \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442. \u0415\u0441\u043b\u0438 \u0436\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e, \u0442\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438 \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d AfterLoginActivity \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u0430 AfterLoginActivity \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e - LoginActivity \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 LoginActivity \u0414\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 LoginActivity \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u043d\u0443\u0442\u0440\u0438 PageObject \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 - \u043a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u0432 \u044d\u043a\u0440\u0430\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } val wifiActivityButton = KButton { withId ( R . id . wifi_activity_btn ) } val loginActivityButton = KButton { withId ( R . id . login_activity_btn ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0437\u0434\u0430\u0435\u043c PageObject \u0434\u043b\u044f LoginActivity , \u043d\u0430\u0437\u043e\u0432\u0435\u043c LoginScreen package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.edit.KEditText import io.github.kakaocup.kakao.text.KButton object LoginScreen : KScreen < LoginScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val inputUsername = KEditText { withId ( R . id . input_username ) } val inputPassword = KEditText { withId ( R . id . input_password ) } val loginButton = KButton { withId ( R . id . login_btn ) } } \u041c\u043e\u0436\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442 LoginActivityTest . \u0421\u0440\u0430\u0437\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0448\u0430\u0433 \u2013 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 LoginActivity package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import org.junit.Test class LoginActivityTest : TestCase () { @Test fun test () { run { step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } } } } \u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043e\u0442\u043a\u0440\u044b\u0442, \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e. \u041d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u044d\u0442\u0430\u043f\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043f\u043e\u0437\u0438\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u0432\u0435\u043b \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c: \u0412\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0438\u0434\u0438\u043c\u044b \u0438 \u043a\u043d\u043e\u043f\u043a\u0430 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u043a\u0430\u043a\u0430\u044f \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0441\u0435\u0439\u0447\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c: device.activities.isCurrent(LoginActivity::class.java) \u0422\u043e\u0433\u0434\u0430 \u043e\u0431\u0449\u0438\u0439 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.afterlogin.AfterLoginActivity import com.kaspersky.kaspresso.tutorial.login.LoginActivity import com.kaspersky.kaspresso.tutorial.screen.LoginScreen import com.kaspersky.kaspresso.tutorial.screen.MainScreen import org.junit.Rule import org.junit.Test class LoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { run { val username = \"123456\" val password = \"123456\" step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } step ( \"Check current screen\" ) { device . activities . isCurrent ( AfterLoginActivity :: class . java ) } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0435\u0433\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f - \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u0435\u043b \u043b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0439 \u0434\u043b\u0438\u043d\u044b. \u0417\u0434\u0435\u0441\u044c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u2013 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 test-case \u0441\u0432\u043e\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434. \u0422\u043e \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u0432\u0432\u043e\u0434\u0435 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0435 \u0432 \u044d\u0442\u043e\u043c \u0436\u0435 \u043c\u0435\u0442\u043e\u0434\u0435, \u0430 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0432 \u0442\u043e\u043c \u0436\u0435 \u043a\u043b\u0430\u0441\u0441\u0435 LoginActivityTest . @Test fun loginUnsuccessfulIfUsernameIncorrect () { run { val username = \"12\" val password = \"123456\" step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } \u0418 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0442\u0435\u0441\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043b\u043e\u0433\u0438\u043d \u0432\u0432\u0435\u0434\u0435\u043d \u0432\u0435\u0440\u043d\u043e, \u0430 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0435\u0432\u0435\u0440\u043d\u043e @Test fun loginUnsuccessfulIfPasswordIncorrect () { run { val username = \"123456\" val password = \"12345\" step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e \u0435\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0431\u044b\u043b\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0438\u043c\u0435\u043d\u043d\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u0443\u044e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e. @Test fun test () \u041c\u0435\u043d\u044f\u0435\u043c \u043d\u0430 @Test fun loginSuccessfulIfUsernameAndPasswordCorrect () \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442\u044b \u2013 \u043e\u043d\u0438 \u0432\u0441\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u044d\u0442\u0438\u0445 \u0442\u0435\u0441\u0442\u043e\u0432. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u0434\u0435\u043b\u0430\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: \u041e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 `username` \u0438 `password`, \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0438\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u044d\u043a\u0440\u0430\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0412\u0432\u043e\u0434\u0438\u043c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \"Login\" \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0443\u0436\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0442\u0435\u0441\u0442\u0435, \u0443 \u043d\u0430\u0441 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0448\u0430\u0433\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439. \u041d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u0448\u0430\u0433\u0435 \u043c\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c username \u0438 password , \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0448\u0430\u0433\u0435 \u043c\u044b \u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0442\u043e, \u043a\u0430\u043a\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043e\u0442\u043a\u0440\u044b\u0442 - LoginActivity \u0438\u043b\u0438 AfterLoginActivity . \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0448\u0430\u0433\u0438 \u0441\u043e \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432. \u042d\u0442\u043e \u043e\u0434\u0438\u043d \u0438\u0437 \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 Scenario. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 Scenario \u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u2013 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0432 \u0441\u0435\u0431\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e step-\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0432\u0435\u0441\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043e\u0442 \u0441\u0442\u0430\u0440\u0442\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0434\u043e \u043a\u043b\u0438\u043a\u0430 \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Login \u043f\u043e\u0441\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044f. \u0412 \u043f\u0430\u043a\u0435\u0442\u0435 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 com.kaspersky.kaspresso.tutorial \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 LoginScenario \u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 Scenario \u0438\u0437 \u043f\u0430\u043a\u0435\u0442\u0430 com.kaspersky.kaspresso.testcases.api.scenario package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario class LoginScenario : Scenario () { } \u0417\u0434\u0435\u0441\u044c \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043a\u043b\u0430\u0441\u0441 Scenario \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u043c, \u0438 \u0443 \u043d\u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0434\u0438\u043d \u043c\u0435\u0442\u043e\u0434 steps , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044e \u043a\u043b\u0430\u0432\u0438\u0448 ctrl + i , \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c OK package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario import com.kaspersky.kaspresso.testcases.core.testcontext.TestContext class LoginScenario : Scenario () { override val steps : TestContext < Unit > .() -> Unit get () = TODO ( \"Not yet implemented\" ) } \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0441\u043b\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u0430 TestContext<Unit>.() -> Unit \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u0447\u043a\u0443 get() = TODO(\"Not yet implemented\") , \u0441\u0442\u0430\u0432\u0438\u043c \u0437\u043d\u0430\u043a = \u0438 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u043c \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0448\u0430\u0433\u0438. Info \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0443 steps \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u043b\u044f\u043c\u0431\u0434\u0430-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f extension-\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u043a\u043b\u0430\u0441\u0441\u0430 TestContext. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e \u043b\u044f\u043c\u0431\u0434\u0430-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 extension-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 Kotlin. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0448\u0430\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0442\u0435\u0441\u0442\u0435. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario import com.kaspersky.kaspresso.testcases.core.testcontext.TestContext import com.kaspersky.kaspresso.tutorial.screen.LoginScreen import com.kaspersky.kaspresso.tutorial.screen.MainScreen class LoginScenario : Scenario () { override val steps : TestContext < Unit > .() -> Unit = { step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } } } \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u044d\u043a\u0440\u0430\u043d \u043b\u043e\u0433\u0438\u043d\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0432\u0441\u0435\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0432\u0432\u043e\u0434\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Login . \u041d\u043e \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0434\u043d\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 - \u0432 \u044d\u0442\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 \u043d\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 username \u0438 password , \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0432 \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430. \u041c\u044b \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u0438\u0445 \u043f\u0440\u044f\u043c\u043e \u0437\u0434\u0435\u0441\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430, \u043a\u0430\u043a \u0434\u0435\u043b\u0430\u043b\u0438 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 LoginActivityTest , override val steps : TestContext < Unit > .() -> Unit = { val username = \"123456\" // \u041c\u043e\u0436\u043d\u043e \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0437\u0434\u0435\u0441\u044c val password = \"123456\" step ( \"Open login screen\" ) { ... \u043d\u043e \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u044d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u0440\u044f\u043c\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0445 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 Scenario \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430. \u0422\u043e\u0433\u0434\u0430 \u044d\u0442\u0430 \u0447\u0430\u0441\u0442\u044c \u043a\u043e\u0434\u0430: class LoginScenario : Scenario () \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430: class LoginScenario ( private val username : String , private val password : String ) : Scenario () \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c, \u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0442\u0435, \u0447\u0442\u043e \u0431\u044b\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u043d\u0430\u043c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } \u0422\u043e\u0433\u0434\u0430 \u043e\u0431\u0449\u0438\u0439 \u043a\u043e\u0434 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario import com.kaspersky.kaspresso.testcases.core.testcontext.TestContext import com.kaspersky.kaspresso.tutorial.screen.LoginScreen import com.kaspersky.kaspresso.tutorial.screen.MainScreen class LoginScenario ( private val username : String , private val password : String ) : Scenario () { override val steps : TestContext < Unit > .() -> Unit = { step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } } } \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Scenario \u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0433\u043e\u0442\u043e\u0432, \u043c\u043e\u0436\u0435\u043c \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0442\u0435\u0441\u0442\u0430\u0445. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435, \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0438 \u0432 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0421\u043e\u0437\u0434\u0430\u0435\u043c step, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0437\u0430\u043b\u043e\u0433\u0438\u043d\u0438\u0442\u044c\u0441\u044f \u0441 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `scenario` \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 LoginScenario \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 LoginScenario \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c step, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u043b\u043e\u0433\u0438\u043d\u0430 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d AfterLoginActivity @Test fun loginSuccessfulIfUsernameAndPasswordCorrect () { run { step ( \"Try to login with correct username and password\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"123456\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( AfterLoginActivity :: class . java ) } } } \u0414\u043b\u044f \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0434\u0435\u043b\u0430\u0435\u043c \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.afterlogin.AfterLoginActivity import com.kaspersky.kaspresso.tutorial.login.LoginActivity import org.junit.Rule import org.junit.Test class LoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun loginSuccessfulIfUsernameAndPasswordCorrect () { run { step ( \"Try to login with correct username and password\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"123456\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( AfterLoginActivity :: class . java ) } } } @Test fun loginUnsuccessfulIfUsernameIncorrect () { run { step ( \"Try to login with incorrect username\" ) { scenario ( LoginScenario ( username = \"12\" , password = \"123456\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } @Test fun loginUnsuccessfulIfPasswordIncorrect () { run { step ( \"Try to login with incorrect password\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"12345\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } } \u041c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u043e\u0434\u0438\u043d \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u043c\u0438 \u0443\u0434\u043e\u0431\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u2013 \u043a\u043e\u0433\u0434\u0430 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0448\u0430\u0433\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u0430\u0445 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u041d\u043e \u044d\u0442\u043e \u043d\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0438\u0445 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u044d\u043a\u0440\u0430\u043d\u043e\u0432, \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0443\u0434\u0443\u0447\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0430\u043a\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0437\u0430\u043d\u043e\u0432\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u041d\u043e \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 \u044d\u0442\u043e \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435\u0439. \u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u043e\u0441\u043b\u0435 \u0432\u0445\u043e\u0434\u0430 \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d AfterLoginActivity . \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0442\u0435\u0441\u0442 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u041f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u0435\u043c Page Object package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.edit.KEditText object AfterLoginScreen : KScreen < LoginScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val title = KEditText { withId ( R . id . title ) } } \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0435\u0441\u0442: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Rule import org.junit.Test class AfterLoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { } } \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u043d\u0430 \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u0411\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 \u043d\u0430\u043c \u0431\u044b \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u0437\u0430\u043d\u043e\u0432\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u2013 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d, \u043a\u043b\u0438\u043a\u0430\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443, \u0437\u0430\u0442\u0435\u043c \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u0441\u043d\u043e\u0432\u0430 \u043a\u043b\u0438\u043a\u0430\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443. \u041d\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u0432\u0435\u0441\u044c \u044d\u0442\u043e\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0441\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e LoginScenario package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.AfterLoginScreen import org.junit.Rule import org.junit.Test class AfterLoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { run { step ( \"Open AfterLogin screen\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"123456\" ) ) } step ( \"Check title\" ) { AfterLoginScreen { title { isVisible () hasText ( R . string . screen_after_login ) } } } } } } \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432, \u043a\u043e\u0434 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0447\u0438\u0441\u0442\u044b\u043c, \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u0438 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u043c. \u0410 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c, \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0448\u0430\u0433\u043e\u0432. Best practices \u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0432\u0435\u0449\u044c, \u0435\u0441\u043b\u0438 \u0438\u043c\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f. \u0415\u0441\u043b\u0438 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0448\u0430\u0433\u0438, \u0442\u043e \u044d\u0442\u043e \u0442\u043e\u0442 \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u0441\u0442\u043e\u0438\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439. \u041f\u0440\u0438\u043c\u0435\u0440\u044b: \u044d\u043a\u0440\u0430\u043d\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u043e\u043d\u0431\u043e\u0440\u0434\u0438\u043d\u0433\u0430, \u043e\u043f\u043b\u0430\u0442\u044b \u043f\u043e\u043a\u0443\u043f\u043e\u043a \u0438 \u0442.\u0434. \u041d\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u2013 \u0442\u0430\u043a\u043e\u0439 \u043a\u043e\u0434 \u043c\u043e\u0436\u0435\u0442 \u0441\u0442\u0430\u0442\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u0437\u0430\u043f\u0443\u0442\u0430\u043d\u043d\u044b\u043c, \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0436\u043d\u0438\u0442 \u0435\u0433\u043e \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0443\u0445\u0443\u0434\u0448\u0438\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c, \u0438 \u0432\u044b \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442\u0435 \u0432\u0441\u0435 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432. \u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u043c\u0435\u0440\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438. \u041d\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0445 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c, \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043a\u043e\u0433\u0434\u0430-\u0442\u043e \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u044d\u0442\u0438 \u0448\u0430\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u0442\u0435\u0441\u0442\u0430\u0445. \u0415\u0441\u043b\u0438 \u0432\u044b \u0432\u0438\u0434\u0438\u0442\u0435, \u0447\u0442\u043e \u0448\u0430\u0433\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0442\u0441\u044f \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u0430\u0445, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u2013 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442 \u044d\u0442\u043e\u0433\u043e \u0434\u0435\u043b\u0430\u0442\u044c. \u0418\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c. \u0418\u0442\u043e\u0433 \u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0443\u0437\u043d\u0430\u043b\u0438, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438, \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0438\u0445 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 \u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440. \u0422\u0430\u043a\u0436\u0435 \u043c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u043e\u0441\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0443, \u0430 \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442 \u2013 \u0443\u0445\u0443\u0434\u0448\u0430\u0435\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430, \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0441\u0432\u044f\u0437\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0441\u043b\u043e\u0436\u043d\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435.","title":"\u0412\u044b\u043d\u0435\u0441\u0435\u043d\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0445\u0441\u044f \u0448\u0430\u0433\u043e\u0432 \u0432 Scenario"},{"location":"Tutorial/%D0%92%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D1%80%D1%83%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%20%D0%B2%20Scenario/#scenario","text":"\u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043c\u0441\u044f \u0441\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u043c\u0438 (\u043a\u043b\u0430\u0441\u0441 Scenario \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Kaspresso), \u0443\u0437\u043d\u0430\u0435\u043c, \u0447\u0442\u043e \u044d\u0442\u043e, \u0434\u043b\u044f \u0447\u0435\u0433\u043e \u043e\u043d\u0438 \u043d\u0443\u0436\u043d\u044b, \u043a\u043e\u0433\u0434\u0430 \u0438\u0445 \u0441\u0442\u043e\u0438\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c, \u0430 \u043a\u043e\u0433\u0434\u0430 \u043b\u0443\u0447\u0448\u0435 \u0438\u0437\u0431\u0435\u0433\u0430\u0442\u044c. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Login Acitivity . \u0423 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0433\u0434\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Login \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u0435 username \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043c\u0435\u043d\u0435\u0435 \u0442\u0440\u0435\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438\u043b\u0438 \u043f\u043e\u043b\u0435 password \u043c\u0435\u043d\u0435\u0435 \u0448\u0435\u0441\u0442\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0442\u043e \u043f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 LOGIN \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442. \u0415\u0441\u043b\u0438 \u0436\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e, \u0442\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438 \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d AfterLoginActivity \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u0430 AfterLoginActivity \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e - LoginActivity","title":"Scenario"},{"location":"Tutorial/%D0%92%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D1%80%D1%83%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%20%D0%B2%20Scenario/#loginactivity","text":"\u0414\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 LoginActivity \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u043d\u0443\u0442\u0440\u0438 PageObject \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 - \u043a\u043d\u043e\u043f\u043a\u0430 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u0432 \u044d\u043a\u0440\u0430\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.text.KButton object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } val wifiActivityButton = KButton { withId ( R . id . wifi_activity_btn ) } val loginActivityButton = KButton { withId ( R . id . login_activity_btn ) } } \u0422\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0437\u0434\u0430\u0435\u043c PageObject \u0434\u043b\u044f LoginActivity , \u043d\u0430\u0437\u043e\u0432\u0435\u043c LoginScreen package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.edit.KEditText import io.github.kakaocup.kakao.text.KButton object LoginScreen : KScreen < LoginScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val inputUsername = KEditText { withId ( R . id . input_username ) } val inputPassword = KEditText { withId ( R . id . input_password ) } val loginButton = KButton { withId ( R . id . login_btn ) } } \u041c\u043e\u0436\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442 LoginActivityTest . \u0421\u0440\u0430\u0437\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0448\u0430\u0433 \u2013 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 LoginActivity package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.MainScreen import org.junit.Test class LoginActivityTest : TestCase () { @Test fun test () { run { step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } } } } \u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043e\u0442\u043a\u0440\u044b\u0442, \u043c\u043e\u0436\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e. \u041d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u044d\u0442\u0430\u043f\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043f\u043e\u0437\u0438\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u0432\u0435\u043b \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c: \u0412\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0438\u0434\u0438\u043c\u044b \u0438 \u043a\u043d\u043e\u043f\u043a\u0430 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430 \u041f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u043a\u0430\u043a\u0430\u044f \u0430\u043a\u0442\u0438\u0432\u0438\u0442\u0438 \u0441\u0435\u0439\u0447\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c: device.activities.isCurrent(LoginActivity::class.java) \u0422\u043e\u0433\u0434\u0430 \u043e\u0431\u0449\u0438\u0439 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.afterlogin.AfterLoginActivity import com.kaspersky.kaspresso.tutorial.login.LoginActivity import com.kaspersky.kaspresso.tutorial.screen.LoginScreen import com.kaspersky.kaspresso.tutorial.screen.MainScreen import org.junit.Rule import org.junit.Test class LoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { run { val username = \"123456\" val password = \"123456\" step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } step ( \"Check current screen\" ) { device . activities . isCurrent ( AfterLoginActivity :: class . java ) } } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0435\u0433\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f - \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u0435\u043b \u043b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0439 \u0434\u043b\u0438\u043d\u044b. \u0417\u0434\u0435\u0441\u044c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u2013 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 test-case \u0441\u0432\u043e\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434. \u0422\u043e \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u0432\u0432\u043e\u0434\u0435 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0435 \u0432 \u044d\u0442\u043e\u043c \u0436\u0435 \u043c\u0435\u0442\u043e\u0434\u0435, \u0430 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0432 \u0442\u043e\u043c \u0436\u0435 \u043a\u043b\u0430\u0441\u0441\u0435 LoginActivityTest . @Test fun loginUnsuccessfulIfUsernameIncorrect () { run { val username = \"12\" val password = \"123456\" step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } \u0418 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0442\u0435\u0441\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043b\u043e\u0433\u0438\u043d \u0432\u0432\u0435\u0434\u0435\u043d \u0432\u0435\u0440\u043d\u043e, \u0430 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0435\u0432\u0435\u0440\u043d\u043e @Test fun loginUnsuccessfulIfPasswordIncorrect () { run { val username = \"123456\" val password = \"12345\" step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e \u0435\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0431\u044b\u043b\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0438\u043c\u0435\u043d\u043d\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u0443\u044e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e. @Test fun test () \u041c\u0435\u043d\u044f\u0435\u043c \u043d\u0430 @Test fun loginSuccessfulIfUsernameAndPasswordCorrect () \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442\u044b \u2013 \u043e\u043d\u0438 \u0432\u0441\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u044d\u0442\u0438\u0445 \u0442\u0435\u0441\u0442\u043e\u0432. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u0434\u0435\u043b\u0430\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: \u041e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 `username` \u0438 `password`, \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0438\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u044d\u043a\u0440\u0430\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0412\u0432\u043e\u0434\u0438\u043c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \"Login\" \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0443\u0436\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0442\u0435\u0441\u0442\u0435, \u0443 \u043d\u0430\u0441 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0448\u0430\u0433\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439. \u041d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u0448\u0430\u0433\u0435 \u043c\u044b \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c username \u0438 password , \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0448\u0430\u0433\u0435 \u043c\u044b \u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0442\u043e, \u043a\u0430\u043a\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043e\u0442\u043a\u0440\u044b\u0442 - LoginActivity \u0438\u043b\u0438 AfterLoginActivity . \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0448\u0430\u0433\u0438 \u0441\u043e \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432. \u042d\u0442\u043e \u043e\u0434\u0438\u043d \u0438\u0437 \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 Scenario.","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 LoginActivity"},{"location":"Tutorial/%D0%92%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D1%80%D1%83%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%20%D0%B2%20Scenario/#scenario_1","text":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u2013 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0432 \u0441\u0435\u0431\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e step-\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0432\u0435\u0441\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043e\u0442 \u0441\u0442\u0430\u0440\u0442\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0434\u043e \u043a\u043b\u0438\u043a\u0430 \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 Login \u043f\u043e\u0441\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044f. \u0412 \u043f\u0430\u043a\u0435\u0442\u0435 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 com.kaspersky.kaspresso.tutorial \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 LoginScenario \u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 Scenario \u0438\u0437 \u043f\u0430\u043a\u0435\u0442\u0430 com.kaspersky.kaspresso.testcases.api.scenario package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario class LoginScenario : Scenario () { } \u0417\u0434\u0435\u0441\u044c \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043a\u043b\u0430\u0441\u0441 Scenario \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u043c, \u0438 \u0443 \u043d\u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0434\u0438\u043d \u043c\u0435\u0442\u043e\u0434 steps , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044e \u043a\u043b\u0430\u0432\u0438\u0448 ctrl + i , \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c OK package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario import com.kaspersky.kaspresso.testcases.core.testcontext.TestContext class LoginScenario : Scenario () { override val steps : TestContext < Unit > .() -> Unit get () = TODO ( \"Not yet implemented\" ) } \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0441\u043b\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u0430 TestContext<Unit>.() -> Unit \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u0447\u043a\u0443 get() = TODO(\"Not yet implemented\") , \u0441\u0442\u0430\u0432\u0438\u043c \u0437\u043d\u0430\u043a = \u0438 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0438\u043c \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0448\u0430\u0433\u0438. Info \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0443 steps \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u043b\u044f\u043c\u0431\u0434\u0430-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f extension-\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u043a\u043b\u0430\u0441\u0441\u0430 TestContext. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e \u043b\u044f\u043c\u0431\u0434\u0430-\u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438 extension-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 Kotlin. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0448\u0430\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0442\u0435\u0441\u0442\u0435. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario import com.kaspersky.kaspresso.testcases.core.testcontext.TestContext import com.kaspersky.kaspresso.tutorial.screen.LoginScreen import com.kaspersky.kaspresso.tutorial.screen.MainScreen class LoginScenario : Scenario () { override val steps : TestContext < Unit > .() -> Unit = { step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } } } \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u044d\u043a\u0440\u0430\u043d \u043b\u043e\u0433\u0438\u043d\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0432\u0441\u0435\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0432\u0432\u043e\u0434\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 Login . \u041d\u043e \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0434\u043d\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 - \u0432 \u044d\u0442\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 \u043d\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 username \u0438 password , \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0432 \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430. \u041c\u044b \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u0438\u0445 \u043f\u0440\u044f\u043c\u043e \u0437\u0434\u0435\u0441\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430, \u043a\u0430\u043a \u0434\u0435\u043b\u0430\u043b\u0438 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 LoginActivityTest , override val steps : TestContext < Unit > .() -> Unit = { val username = \"123456\" // \u041c\u043e\u0436\u043d\u043e \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0437\u0434\u0435\u0441\u044c val password = \"123456\" step ( \"Open login screen\" ) { ... \u043d\u043e \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u044d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u0440\u044f\u043c\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0445 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 Scenario \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430. \u0422\u043e\u0433\u0434\u0430 \u044d\u0442\u0430 \u0447\u0430\u0441\u0442\u044c \u043a\u043e\u0434\u0430: class LoginScenario : Scenario () \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430: class LoginScenario ( private val username : String , private val password : String ) : Scenario () \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c, \u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0442\u0435, \u0447\u0442\u043e \u0431\u044b\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u043d\u0430\u043c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } \u0422\u043e\u0433\u0434\u0430 \u043e\u0431\u0449\u0438\u0439 \u043a\u043e\u0434 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.scenario.Scenario import com.kaspersky.kaspresso.testcases.core.testcontext.TestContext import com.kaspersky.kaspresso.tutorial.screen.LoginScreen import com.kaspersky.kaspresso.tutorial.screen.MainScreen class LoginScenario ( private val username : String , private val password : String ) : Scenario () { override val steps : TestContext < Unit > .() -> Unit = { step ( \"Open login screen\" ) { MainScreen { loginActivityButton { isVisible () isClickable () click () } } } step ( \"Check elements visibility\" ) { LoginScreen { inputUsername { isVisible () hasHint ( R . string . login_activity_hint_username ) } inputPassword { isVisible () hasHint ( R . string . login_activity_hint_password ) } loginButton { isVisible () isClickable () } } } step ( \"Try to login\" ) { LoginScreen { inputUsername { replaceText ( username ) } inputPassword { replaceText ( password ) } loginButton { click () } } } } }","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 Scenario"},{"location":"Tutorial/%D0%92%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D1%80%D1%83%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%20%D0%B2%20Scenario/#scenario_2","text":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0433\u043e\u0442\u043e\u0432, \u043c\u043e\u0436\u0435\u043c \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0442\u0435\u0441\u0442\u0430\u0445. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435, \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0438 \u0432 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0421\u043e\u0437\u0434\u0430\u0435\u043c step, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0437\u0430\u043b\u043e\u0433\u0438\u043d\u0438\u0442\u044c\u0441\u044f \u0441 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e `scenario` \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 LoginScenario \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 LoginScenario \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c step, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u043b\u043e\u0433\u0438\u043d\u0430 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d AfterLoginActivity @Test fun loginSuccessfulIfUsernameAndPasswordCorrect () { run { step ( \"Try to login with correct username and password\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"123456\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( AfterLoginActivity :: class . java ) } } } \u0414\u043b\u044f \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0434\u0435\u043b\u0430\u0435\u043c \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.afterlogin.AfterLoginActivity import com.kaspersky.kaspresso.tutorial.login.LoginActivity import org.junit.Rule import org.junit.Test class LoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun loginSuccessfulIfUsernameAndPasswordCorrect () { run { step ( \"Try to login with correct username and password\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"123456\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( AfterLoginActivity :: class . java ) } } } @Test fun loginUnsuccessfulIfUsernameIncorrect () { run { step ( \"Try to login with incorrect username\" ) { scenario ( LoginScenario ( username = \"12\" , password = \"123456\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } @Test fun loginUnsuccessfulIfPasswordIncorrect () { run { step ( \"Try to login with incorrect password\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"12345\" , ) ) } step ( \"Check current screen\" ) { device . activities . isCurrent ( LoginActivity :: class . java ) } } } } \u041c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u043e\u0434\u0438\u043d \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u043c\u0438 \u0443\u0434\u043e\u0431\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u2013 \u043a\u043e\u0433\u0434\u0430 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0448\u0430\u0433\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u0430\u0445 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u041d\u043e \u044d\u0442\u043e \u043d\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0438\u0445 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u044d\u043a\u0440\u0430\u043d\u043e\u0432, \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0443\u0434\u0443\u0447\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0430\u043a\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0437\u0430\u043d\u043e\u0432\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u041d\u043e \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 \u044d\u0442\u043e \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435\u0439. \u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u043e\u0441\u043b\u0435 \u0432\u0445\u043e\u0434\u0430 \u0443 \u043d\u0430\u0441 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0440\u0430\u043d AfterLoginActivity . \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0442\u0435\u0441\u0442 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u041f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u0435\u043c Page Object package com.kaspersky.kaspresso.tutorial.screen import com.kaspersky.kaspresso.screens.KScreen import com.kaspersky.kaspresso.tutorial.R import io.github.kakaocup.kakao.edit.KEditText object AfterLoginScreen : KScreen < LoginScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val title = KEditText { withId ( R . id . title ) } } \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0435\u0441\u0442: package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Rule import org.junit.Test class AfterLoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { } } \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u043d\u0430 \u044d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u0411\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 \u043d\u0430\u043c \u0431\u044b \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u0437\u0430\u043d\u043e\u0432\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u2013 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d, \u043a\u043b\u0438\u043a\u0430\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443, \u0437\u0430\u0442\u0435\u043c \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u0441\u043d\u043e\u0432\u0430 \u043a\u043b\u0438\u043a\u0430\u0442\u044c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443. \u041d\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u0432\u0435\u0441\u044c \u044d\u0442\u043e\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0441\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e LoginScenario package com.kaspersky.kaspresso.tutorial import androidx.test.ext.junit.rules.activityScenarioRule import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import com.kaspersky.kaspresso.tutorial.screen.AfterLoginScreen import org.junit.Rule import org.junit.Test class AfterLoginActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { run { step ( \"Open AfterLogin screen\" ) { scenario ( LoginScenario ( username = \"123456\" , password = \"123456\" ) ) } step ( \"Check title\" ) { AfterLoginScreen { title { isVisible () hasText ( R . string . screen_after_login ) } } } } } } \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432, \u043a\u043e\u0434 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0447\u0438\u0441\u0442\u044b\u043c, \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u0438 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u043c. \u0410 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u043e\u0432, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c, \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0448\u0430\u0433\u043e\u0432.","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Scenario"},{"location":"Tutorial/%D0%92%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D1%80%D1%83%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%20%D0%B2%20Scenario/#best-practices","text":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0432\u0435\u0449\u044c, \u0435\u0441\u043b\u0438 \u0438\u043c\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f. \u0415\u0441\u043b\u0438 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0448\u0430\u0433\u0438, \u0442\u043e \u044d\u0442\u043e \u0442\u043e\u0442 \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u0441\u0442\u043e\u0438\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439. \u041f\u0440\u0438\u043c\u0435\u0440\u044b: \u044d\u043a\u0440\u0430\u043d\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u043e\u043d\u0431\u043e\u0440\u0434\u0438\u043d\u0433\u0430, \u043e\u043f\u043b\u0430\u0442\u044b \u043f\u043e\u043a\u0443\u043f\u043e\u043a \u0438 \u0442.\u0434. \u041d\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u2013 \u0442\u0430\u043a\u043e\u0439 \u043a\u043e\u0434 \u043c\u043e\u0436\u0435\u0442 \u0441\u0442\u0430\u0442\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u0437\u0430\u043f\u0443\u0442\u0430\u043d\u043d\u044b\u043c, \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0436\u043d\u0438\u0442 \u0435\u0433\u043e \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0443\u0445\u0443\u0434\u0448\u0438\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c, \u0438 \u0432\u044b \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442\u0435 \u0432\u0441\u0435 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432. \u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u043c\u0435\u0440\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438. \u041d\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0445 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c, \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043a\u043e\u0433\u0434\u0430-\u0442\u043e \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u044d\u0442\u0438 \u0448\u0430\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u0438\u0445 \u0442\u0435\u0441\u0442\u0430\u0445. \u0415\u0441\u043b\u0438 \u0432\u044b \u0432\u0438\u0434\u0438\u0442\u0435, \u0447\u0442\u043e \u0448\u0430\u0433\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0442\u0441\u044f \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u0430\u0445, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u2013 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442 \u044d\u0442\u043e\u0433\u043e \u0434\u0435\u043b\u0430\u0442\u044c. \u0418\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c.","title":"Best practices"},{"location":"Tutorial/%D0%92%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D1%80%D1%83%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F%20%D1%88%D0%B0%D0%B3%D0%BE%D0%B2%20%D0%B2%20Scenario/#_1","text":"\u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0443\u0437\u043d\u0430\u043b\u0438, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438, \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0438\u0445 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 \u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440. \u0422\u0430\u043a\u0436\u0435 \u043c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u043e\u0441\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0443, \u0430 \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442 \u2013 \u0443\u0445\u0443\u0434\u0448\u0430\u0435\u0442 \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430, \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0441\u0432\u044f\u0437\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0441\u043b\u043e\u0436\u043d\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435.","title":"\u0418\u0442\u043e\u0433"},{"location":"Tutorial/%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%20adb-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4/","text":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 adb \u0412 \u043f\u0440\u043e\u0448\u043b\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso, \u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u043d\u0430\u0448 \u0442\u0435\u0441\u0442 \u0443\u043c\u0435\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043c\u043e\u0436\u0435\u0442 \u043d\u0430 \u043d\u0438\u0445 \u043a\u0430\u043a\u0438\u043c-\u0442\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c (\u043f\u0440\u0438\u043c. \u043a\u043b\u0438\u043a \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435) \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0438\u0445 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 (\u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c, \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438 \u0442.\u0434.). \u041d\u043e \u0447\u0430\u0441\u0442\u043e \u0431\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0437\u0430\u0445\u043e\u0442\u0435\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: \u041f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430 \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0437\u0432\u043e\u043d\u043a\u0430 \u041f\u0440\u0438 \u043d\u0438\u0437\u043a\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0437\u0430\u0440\u044f\u0434\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u041f\u0440\u0438 \u0441\u043c\u0435\u043d\u0435 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0418 \u0442.\u0434. \u0412\u043e \u0432\u0441\u0435\u0445 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u0445 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u043d\u0435 \u0437\u043e\u043d\u044b \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c. \u0412 \u044d\u0442\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 Android Debug Bridge (ADB). ADB - \u044d\u0442\u043e \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0434\u0435\u0432\u0430\u0439\u0441\u043e\u043c \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434. \u0421 \u0438\u0445 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0442\u0430\u043a\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043a\u0430\u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439, \u0437\u0430\u043f\u0443\u0441\u043a \u043e\u043f\u0440\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0439 Activity, \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u043c\u043d\u043e\u0433\u043e\u0435 \u0434\u0440\u0443\u0433\u043e\u0435. \u0412\u0441\u0435 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0441\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 Kaspresso \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 adb \u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0438\u0445 \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435. \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0441 adb, \u043c\u043e\u0433\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-server. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 java \u0438 adb \u041f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 adb-server \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439, \u0435\u0441\u043b\u0438 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u044b \u043f\u0443\u0442\u0438 \u043a java \u0438 adb. \u041d\u043e \u0435\u0441\u043b\u0438 \u043f\u0443\u0442\u0438 \u043d\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u044b, \u0442\u043e \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0445 \u043f\u0440\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0432\u043e\u0435, \u0447\u0442\u043e \u043c\u044b \u0441\u0434\u0435\u043b\u0430\u0435\u043c - \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0438\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0438 \u0442\u0430\u043a \u0432\u0441\u0435 \u0433\u043e\u0442\u043e\u0432\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 adb-server. \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443. \u041d\u0430 Windows - \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0448 Win + R , \u0432 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u043e\u043a\u043d\u0435 \u0432\u0432\u043e\u0434\u0438\u043c cmd \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Enter \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u0443\u0442\u044c \u043a java \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0438\u0448\u0435\u043c java -version . \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0445\u043e\u0440\u043e\u0448\u043e, \u0442\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0443 \u0432\u0435\u0440\u0441\u0438\u044e Java \u0415\u0441\u043b\u0438 \u0436\u0435 \u043f\u0443\u0442\u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u044b \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e, \u0442\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0445\u043e\u0436\u0435\u0435 \u043d\u0430 \u044d\u0442\u043e \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0435\u043b\u0430\u0435\u043c \u0442\u0430\u043a\u0443\u044e \u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0434\u043b\u044f adb. \u041f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 adb version \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0445\u043e\u0440\u043e\u0448\u043e, \u0442\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0443 \u0432\u0435\u0440\u0441\u0438\u044e ADB \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0432\u043e\u0442 \u0442\u0430\u043a\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443: \u0415\u0441\u043b\u0438 \u043f\u043e \u043e\u0431\u043e\u0438\u043c \u043f\u0443\u043d\u043a\u0442\u0430\u043c \u0443 \u0432\u0430\u0441 \u0432\u0441\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0442\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0448\u0430\u0433 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 java \u0438 adb \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u0448\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0432\u0430\u0448\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u0437\u0434\u0435\u0441\u044c \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u0441\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f OS Windows. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0434\u0440\u0443\u0433\u0430\u044f \u041e\u0421 \u043b\u0438\u0431\u043e \u043f\u043e \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u0434\u0430\u043d\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0432\u0430\u043c \u043d\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442, \u0442\u043e \u043f\u043e\u0438\u0449\u0438\u0442\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0435, \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u043d\u0438\u0436\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438. \u041d\u0435 \u0440\u0435\u0448\u0438\u0432 \u044d\u0442\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-server \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u0438 \u0442\u0435\u0441\u0442\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0443\u0442. \u0415\u0441\u043b\u0438 \u0432\u044b \u0434\u043e\u0448\u043b\u0438 \u0434\u043e \u044d\u0442\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430, \u0437\u043d\u0430\u0447\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 Android Studio \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435, \u0430 \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e java \u0438 adb \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b. \u041f\u0440\u043e\u0441\u0442\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043d\u0435 \u0437\u043d\u0430\u0435\u0442, \u0433\u0434\u0435 \u0438\u0441\u043a\u0430\u0442\u044c \u044d\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b. \u0427\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c - \u043d\u0430\u0439\u0442\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u044d\u0442\u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043f\u0443\u0442\u0438 \u043a \u043d\u0438\u043c. \u0418\u0449\u0435\u043c \u043f\u0443\u0442\u044c \u043a java, \u043e\u0431\u044b\u0447\u043d\u043e \u043e\u043d\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 jre\\bin (\u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 jbr\\bin ). \u0427\u0430\u0441\u0442\u043e \u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043f\u043e \u043f\u0443\u0442\u0438 C:\\Program Files\\Java\\jre1.8.0\\bin . \u0415\u0441\u043b\u0438 \u043d\u0430\u0448\u043b\u0438 - \u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043f\u0443\u0442\u044c, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 - \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 Android Studio. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u0435 \u0432 File -> Settings -> Build, Execution, Deployment -> Build Tools -> Gradle \u0422\u0443\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d \u043f\u0443\u0442\u044c \u043a \u043d\u0443\u0436\u043d\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 - \u0441\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0435\u0433\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u044b, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u0430\u0435\u043c win + x -> \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c System -> Advanced System Settings -> Advanced -> Environment Variables \u0412 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 System Variables \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Path \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Edit -> New -> \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435 \u0441 java -> \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c OK \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0442\u0443\u043f\u0438\u043b\u0438 \u0432 \u0441\u0438\u043b\u0443 \u0438 \u0441\u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 java -version \u041d\u0430\u043c \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u0441\u0435 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0434\u043b\u044f adb. \u0418\u0449\u0435\u043c \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435 platform-tools , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043b\u0435\u0436\u0438\u0442 adb . \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c Android Studio -> Tools -> SDK Manager . \u0412 \u043f\u043e\u043b\u0435 Android SDK Location \u0443\u043a\u0430\u0437\u0430\u043d \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435 Sdk , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f platform-tools . \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u043f\u0443\u0442\u044c \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 System Variables, \u043a\u0430\u043a \u043c\u044b \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u043b\u0438 \u0440\u0430\u043d\u0435\u0435 \u0441 java \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb version \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u0437\u0430\u043f\u0443\u0441\u043a\u0443 adb-server. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u0441\u0435 \u0435\u0449\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b java \u0438 adb \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442, \u0442\u043e \u043f\u043e\u0433\u0443\u0433\u043b\u0438\u0442\u0435, \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043c\u043d\u043e\u0433\u043e. \u0412\u0441\u0435, \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c - \u043d\u0430\u0439\u0442\u0438 \u043f\u0443\u0442\u044c \u043a java \u0438 adb \u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u0445 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u044b. \u041f\u0440\u043e\u0431\u0443\u0435\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u041f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u043e\u0432, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e adb, \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u043c\u0430\u043d\u0434. \u0412\u043e-\u043f\u0435\u0440\u0432\u044b\u0445, \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0441\u0435\u0439\u0447\u0430\u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u043a adb. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432\u0432\u043e\u0434\u0438\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb devices \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u043d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \u043d\u0438\u043a\u0430\u043a\u043e\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a adb, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0443\u0441\u0442\u043e\u0439, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0435\u0449\u0435 \u0440\u0430\u0437 \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0448 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e adb-\u043a\u043e\u043c\u0430\u043d\u0434 \u043c\u044b \u043c\u043e\u0436\u0435\u043c: \u041f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0441 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430/\u043d\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0418 \u043c\u043d\u043e\u0433\u043e\u0435 \u0434\u0440\u0443\u0433\u043e\u0435 \u0414\u043b\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438. \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb uninstall package_name \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c, \u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb shell . \u041e\u043d\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u043e\u043b\u044c Android (shell) \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f Linux-\u043a\u043e\u043c\u0430\u043d\u0434 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0442\u0430\u043a\u0438\u0445 \u043a\u043e\u043c\u0430\u043d\u0434. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 pm list packages . \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0435, \u0447\u0442\u043e \u043c\u044b \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 shell-\u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u0438\u0441\u0430\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0443\u0436\u0435 \u043d\u0430\u0445\u043e\u0434\u044f\u0441\u044c \u0432 \u043d\u0435\u0439. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u044d\u0442\u0430\u043f\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0443 \u0432\u0430\u0441 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0443\u0442, \u043f\u043e\u043a\u0430 \u0432\u044b \u043d\u0435 \u0437\u0430\u043a\u0440\u043e\u0435\u0442\u0435 shell-\u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 exit \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c shell-\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043c\u043e\u0436\u043d\u043e \u0438 \u043d\u0435 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044f shell-\u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0435 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 adb shell . \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043c \u0435\u0433\u043e \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u0412 Android Studio \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c File Explorer, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u0444\u0430\u0439\u043b\u044b \u0438 \u043f\u0430\u043f\u043a\u0438 \u043d\u0430 \u0434\u0435\u0432\u0430\u0439\u0441\u0435. \u041e\u0431\u044b\u0447\u043d\u043e \u0441\u043a\u0440\u0438\u0448\u043e\u0442\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442 \u043d\u0430 sdcard, \u043c\u044b \u043f\u043e\u0441\u0442\u0443\u043f\u0438\u043c \u0442\u0430\u043a\u0436\u0435. \u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 adb shell screencap /{pathToFile}/{name_of_image.png} . \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: adb shell screencap /sdcard/my_screen.png \u0412 Device File Explorer \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Synchronize , \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432 \u043f\u0430\u043f\u043a\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043d\u0430\u043c\u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442 \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 adb \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445 \u0418\u0442\u0430\u043a, \u043c\u044b \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0432 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 adb, \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0438\u043c \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430. \u0422\u043e \u0435\u0441\u0442\u044c \u0442\u0435\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c, \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u043c\u0435\u0442\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u0438\u0445 \u043a\u043e\u043c\u0430\u043d\u0434. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442\u044b \u043c\u043e\u0433\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430 \u043d\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-server. \u0421\u043f\u0435\u0440\u0432\u0430 \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b adbserver-desktop.jar \u043d\u0430 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u043c \u0433\u0438\u0442\u0445\u0430\u0431\u0435 Kaspresso \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: java - jar < path / to / file >/ adbserver - desktop . jar \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0431\u044b\u043b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443, \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 java -jar \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0435\u0440\u0435\u0442\u044f\u043d\u0443\u0442\u044c \u0444\u0430\u0439\u043b adbserver-desctop.jar \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438. \u041f\u043e\u0441\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 Enter . \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0441\u044f AdbServer. \u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0434\u0435\u0432\u0430\u0439\u0441 \u0441\u043e\u043e\u0431\u0449\u0438\u0442 \u0434\u0435\u0441\u043a\u0442\u043e\u043f\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u041c\u043e\u0436\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430. \u0412 \u043f\u0430\u043a\u0435\u0442\u0435 com.kaspersky.kaspresso.tutorial \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 AdbTest \u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 TestCase package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class AdbTest : TestCase () { } \u0412 Kaspresso \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 adb \u0435\u0441\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f AdbServer . \u042d\u043a\u0437\u0435\u043c\u043b\u043f\u044f\u0440 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 BaseTestContext \u0438 \u0432 BaseTestCase , \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430\u0448 \u043a\u043b\u0430\u0441\u0441 AdbTest. \u0420\u0430\u043d\u0435\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb devices , \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u043b\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u044d\u0442\u0443 \u0436\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0442\u0435\u0441\u0442\u0430. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 test() \u0438 \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0435\u0439 @Test package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class AdbTest : TestCase () { @Test fun test () { } } \u0427\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043f\u043e\u043b\u044e adbServer \u0438 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438\u0437 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 - performAdb , performCmd \u0438\u043b\u0438 performShell . \u041f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u043e\u043d\u0438 \u0434\u0435\u043b\u0430\u044e\u0442 performAdb \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb performShell \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 shell performCmd \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0432\u044b\u0437\u0432\u0430\u0442\u044c adb \u043a\u043e\u043c\u0430\u043d\u0434\u0443 devices \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434 adbServer.performAdb(\"devices\") package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class AdbTest : TestCase () { @Test fun test () { adbServer . performAdb ( \"devices\" ) } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442. \u0422\u0435\u0441\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041e\u0431\u0440\u0430\u0449\u0430\u0435\u043c \u0432\u0430\u0448\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u0443 \u0432\u0430\u0441 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b 2 \u0443\u0441\u043b\u043e\u0432\u0438\u044f: \u0417\u0430\u043f\u0443\u0449\u0435\u043d adb-server \u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u0442\u0435, \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0434\u0430\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430 \u0432 \u043c\u0430\u043d\u0438\u0444\u0435\u0441\u0442\u0435 \u0421 \u043f\u0435\u0440\u0432\u044b\u043c \u043f\u0443\u043d\u043a\u0442\u043e\u043c \u043c\u044b \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043b\u0438\u0441\u044c \u0440\u0430\u043d\u044c\u0448\u0435, \u0441\u0435\u0439\u0447\u0430\u0441 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u0441\u043e \u0432\u0442\u043e\u0440\u044b\u043c. \u041a\u0430\u0436\u0434\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430. \u041e\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043c\u0430\u043d\u0438\u0444\u0435\u0441\u0442\u0435. \u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u0430\u0431\u0443\u0434\u0435\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u0442\u0435\u0441\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0435\u0442. \u0421\u0435\u0439\u0447\u0430\u0441 \u0442\u0435\u0441\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 adb-\u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043d\u043e \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0435\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u0414\u0430\u043d\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 adb devices \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c (\u0442\u0438\u043f List<String> ). \u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u044d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f (\u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a) \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u043e\u0442 \u0442\u0430\u043a\u043e\u0433\u043e \u0432\u0438\u0434\u0430: `exitCode=0, message=List of devices attached emulator-5555 device'. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u044b\u0439 (\u0438 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439) \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u044d\u0442\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u043e\u0432\u043e \"emulator\". \u041f\u0440\u043e\u0441\u0442\u043e \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043c\u044b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Assert // \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043d\u0443\u0436\u043d\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c import org.junit.Test class AdbTest : TestCase () { @Test fun test () { val result = adbServer . performAdb ( \"devices\" ) Assert . assertTrue ( // \u0414\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c Assert.assertTrue(), \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u044b Assert . assertTrue ( \"emulator\" in result . first ()) //\u0442\u0443\u0442 \u043c\u0435\u0442\u043e\u0434 in \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 (\u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 result) \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u043e\u0432\u043e \"emulator\" ) } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u044e adb \u043a\u043e\u043c\u0430\u043d\u0434\u0443. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0435\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c adb undefined_command . Info \u041e\u0431\u0440\u0430\u0449\u0430\u0435\u043c \u0432\u0430\u0448\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435 \u0441\u0435\u0439\u0447\u0430\u0441 \u0437\u0430\u043f\u0443\u0449\u0435\u043d adb-server, \u0435\u0441\u043b\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u043f\u043e\u043a\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441\u0435\u0440\u0432\u0435\u0440, \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0435\u0449\u0435 \u043e\u0434\u043d\u043e \u043e\u043a\u043d\u043e \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430 \u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432 \u043d\u0435\u043c \u041f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u044d\u0442\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u0443 \u043d\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u0431\u0440\u043e\u0448\u0435\u043d\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 AdbServerException \u0438 \u0432 \u043f\u043e\u043b\u0435 message \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0432\u0438\u0434\u0435\u043b\u0438 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 unknown command undefined_command . \u0427\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442 \u043d\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u0431\u043b\u043e\u043a\u0435 try catch \u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 catch \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0447\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432\u044b\u0448\u0435. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.internal.exceptions.AdbServerException import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Assert import org.junit.Test class AdbTest : TestCase () { @Test fun test () { val result = adbServer . performAdb ( \"devices\" ) Assert . assertTrue ( \"emulator\" in result . first ()) val command = \"undefined_command\" try { adbServer . performAdb ( command ) } catch ( e : AdbServerException ) { Assert . assertTrue ( \"unknown command $ command \" in e . message ) } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u043e\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0443\u0435\u043c\u0441\u044f \u0432 adb shell \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0445. \u0420\u0430\u043d\u0435\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u043b\u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u0438\u0434\u0430 adb shell pm list packages . \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0435\u0433\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445. val packages = adbServer . performShell ( \"pm list packages\" ) Assert . assertTrue ( \"com.kaspersky.kaspresso.tutorial\" in packages . first ()) \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c shell-\u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 performShell , \u0442\u043e \u043f\u0438\u0441\u0430\u0442\u044c adb shell \u043d\u0435 \u043d\u0443\u0436\u043d\u043e. \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0434\u0438\u043b\u0438 \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u043e \u0435\u0441\u0442\u044c \u0441\u043f\u043e\u0441\u043e\u0431 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0443\u0434\u043e\u0431\u043d\u0435\u0435, \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u043e\u0432 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c Device, \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435, \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0438 \u043c\u043d\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0435. \u0418\u0437 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 device \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0443 targetContext \u0438 \u0443 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c packageName . \u041a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u043d\u0430 \u0442\u0430\u043a\u043e\u0439: ... val packages = adbServer . performShell ( \"pm list packages\" ) Assert . assertTrue ( device . targetContext . packageName in packages . first ()) ... \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0442\u0438\u043f \u043a\u043e\u043c\u0430\u043d\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c - \u043a\u043e\u043c\u0430\u043d\u0434\u044b cmd. \u042d\u0442\u043e \u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u0438\u0448\u0435\u043c \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043c\u044b \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043f\u0438\u0448\u0435\u043c adb command_name . \u0422\u0435\u043f\u0435\u0440\u044c, \u0435\u0441\u043b\u0438 \u043c\u044b \u0432 \u0442\u0435\u0441\u0442\u0435 \u0432\u043c\u0435\u0441\u0442\u043e performAdb \u0432\u044b\u0437\u043e\u0432\u0435\u043c performCmd, \u0442\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0446\u0435\u043b\u0438\u043a\u043e\u043c: val result = adbServer . performCmd ( \"adb devices\" ) Assert . assertTrue ( \"emulator\" in result . first ()) \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f. \u0414\u043b\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u0430\u043a\u0443\u044e-\u043d\u0438\u0431\u0443\u0434\u044c cmd-\u043a\u043e\u043c\u0430\u043d\u0434\u0443. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, hostname \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0445\u043e\u0441\u0442\u0430 (\u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430). \u0415\u0441\u043b\u0438 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0435\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438, \u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c: \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u044d\u0442\u0443 \u0436\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u043f\u0443\u0441\u0442\u043e\u0439. val hostname = adbServer . performCmd ( \"hostname\" ) Assert . assertTrue ( hostname . isNotEmpty ()) \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041e\u0434\u0438\u043d \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u0435\u0441\u0442\u044c \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 val result = adbServer . performCmd ( \"adb devices\" ) Assert . assertTrue ( \"emulator\" in result . first ()) \u041c\u044b \u0435\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0446\u0435\u043b\u044f\u0445 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0438 \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u043c\u0438. \u0420\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u0445, \u0442\u0430\u043a \u0438 \u043d\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u0445, \u0438 \u0442\u0435\u0441\u0442\u044b \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u0437-\u0437\u0430 \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0434\u0430\u0442\u044c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u0441\u0442 \u043c\u044b \u0443\u0434\u0430\u043b\u0438\u043c. \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u043a\u043e\u0434 AdbTest \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.internal.exceptions.AdbServerException import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Assert import org.junit.Test class AdbTest : TestCase () { @Test fun test () { val command = \"undefined_command\" try { adbServer . performAdb ( command ) } catch ( e : AdbServerException ) { Assert . assertTrue ( \"unknown command $ command \" in e . message ) } val packages = adbServer . performShell ( \"pm list packages\" ) Assert . assertTrue ( device . targetContext . packageName in packages . first ()) val hostname = adbServer . performCmd ( \"hostname\" ) Assert . assertTrue ( hostname . isNotEmpty ()) } } \u0418\u0442\u043e\u0433 \u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0443\u0437\u043d\u0430\u043b\u0438, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 adb, \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0440\u0430\u0431\u043e\u0442\u0443 adb-server, \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u043a\u043e\u043c\u0430\u043d\u0434 (cmd, adb, shell) \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0438 \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0443\u0437\u043d\u0430\u043b\u0438 \u043f\u0440\u043e \u043e\u0431\u044a\u0435\u043a\u0442 Device, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c.","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 adb-\u043a\u043e\u043c\u0430\u043d\u0434"},{"location":"Tutorial/%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%20adb-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4/#adb","text":"\u0412 \u043f\u0440\u043e\u0448\u043b\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso, \u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u043d\u0430\u0448 \u0442\u0435\u0441\u0442 \u0443\u043c\u0435\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043c\u043e\u0436\u0435\u0442 \u043d\u0430 \u043d\u0438\u0445 \u043a\u0430\u043a\u0438\u043c-\u0442\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c (\u043f\u0440\u0438\u043c. \u043a\u043b\u0438\u043a \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435) \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0438\u0445 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 (\u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c, \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438 \u0442.\u0434.). \u041d\u043e \u0447\u0430\u0441\u0442\u043e \u0431\u044b\u0432\u0430\u044e\u0442 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0437\u0430\u0445\u043e\u0442\u0435\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: \u041f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430 \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0437\u0432\u043e\u043d\u043a\u0430 \u041f\u0440\u0438 \u043d\u0438\u0437\u043a\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0437\u0430\u0440\u044f\u0434\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u041f\u0440\u0438 \u0441\u043c\u0435\u043d\u0435 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0418 \u0442.\u0434. \u0412\u043e \u0432\u0441\u0435\u0445 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u0445 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u043d\u0435 \u0437\u043e\u043d\u044b \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c. \u0412 \u044d\u0442\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 Android Debug Bridge (ADB). ADB - \u044d\u0442\u043e \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0434\u0435\u0432\u0430\u0439\u0441\u043e\u043c \u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434. \u0421 \u0438\u0445 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0442\u0430\u043a\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043a\u0430\u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439, \u0437\u0430\u043f\u0443\u0441\u043a \u043e\u043f\u0440\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0439 Activity, \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u043c\u043d\u043e\u0433\u043e\u0435 \u0434\u0440\u0443\u0433\u043e\u0435. \u0412\u0441\u0435 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0441\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 Kaspresso \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 adb \u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0438\u0445 \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435. \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0441 adb, \u043c\u043e\u0433\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-server.","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 adb"},{"location":"Tutorial/%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%20adb-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4/#java-adb","text":"\u041f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 adb-server \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439, \u0435\u0441\u043b\u0438 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u044b \u043f\u0443\u0442\u0438 \u043a java \u0438 adb. \u041d\u043e \u0435\u0441\u043b\u0438 \u043f\u0443\u0442\u0438 \u043d\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u044b, \u0442\u043e \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0445 \u043f\u0440\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0432\u043e\u0435, \u0447\u0442\u043e \u043c\u044b \u0441\u0434\u0435\u043b\u0430\u0435\u043c - \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0438\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0438 \u0442\u0430\u043a \u0432\u0441\u0435 \u0433\u043e\u0442\u043e\u0432\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 adb-server. \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443. \u041d\u0430 Windows - \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0448 Win + R , \u0432 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u043e\u043a\u043d\u0435 \u0432\u0432\u043e\u0434\u0438\u043c cmd \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Enter \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u0443\u0442\u044c \u043a java \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0438\u0448\u0435\u043c java -version . \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0445\u043e\u0440\u043e\u0448\u043e, \u0442\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0443 \u0432\u0435\u0440\u0441\u0438\u044e Java \u0415\u0441\u043b\u0438 \u0436\u0435 \u043f\u0443\u0442\u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u044b \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e, \u0442\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0445\u043e\u0436\u0435\u0435 \u043d\u0430 \u044d\u0442\u043e \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0435\u043b\u0430\u0435\u043c \u0442\u0430\u043a\u0443\u044e \u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0434\u043b\u044f adb. \u041f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 adb version \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0445\u043e\u0440\u043e\u0448\u043e, \u0442\u043e \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0443 \u0432\u0435\u0440\u0441\u0438\u044e ADB \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0432\u043e\u0442 \u0442\u0430\u043a\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443: \u0415\u0441\u043b\u0438 \u043f\u043e \u043e\u0431\u043e\u0438\u043c \u043f\u0443\u043d\u043a\u0442\u0430\u043c \u0443 \u0432\u0430\u0441 \u0432\u0441\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0442\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0448\u0430\u0433 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c.","title":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 java \u0438 adb"},{"location":"Tutorial/%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%20adb-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4/#java-adb_1","text":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u0448\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0432\u0430\u0448\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u0437\u0434\u0435\u0441\u044c \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u0441\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f OS Windows. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0434\u0440\u0443\u0433\u0430\u044f \u041e\u0421 \u043b\u0438\u0431\u043e \u043f\u043e \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u0434\u0430\u043d\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0432\u0430\u043c \u043d\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442, \u0442\u043e \u043f\u043e\u0438\u0449\u0438\u0442\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0435, \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u043d\u0438\u0436\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438. \u041d\u0435 \u0440\u0435\u0448\u0438\u0432 \u044d\u0442\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-server \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u0438 \u0442\u0435\u0441\u0442\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0443\u0442. \u0415\u0441\u043b\u0438 \u0432\u044b \u0434\u043e\u0448\u043b\u0438 \u0434\u043e \u044d\u0442\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430, \u0437\u043d\u0430\u0447\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 Android Studio \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435, \u0430 \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e java \u0438 adb \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b. \u041f\u0440\u043e\u0441\u0442\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043d\u0435 \u0437\u043d\u0430\u0435\u0442, \u0433\u0434\u0435 \u0438\u0441\u043a\u0430\u0442\u044c \u044d\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b. \u0427\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c - \u043d\u0430\u0439\u0442\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u044d\u0442\u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043f\u0443\u0442\u0438 \u043a \u043d\u0438\u043c. \u0418\u0449\u0435\u043c \u043f\u0443\u0442\u044c \u043a java, \u043e\u0431\u044b\u0447\u043d\u043e \u043e\u043d\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 jre\\bin (\u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 jbr\\bin ). \u0427\u0430\u0441\u0442\u043e \u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043f\u043e \u043f\u0443\u0442\u0438 C:\\Program Files\\Java\\jre1.8.0\\bin . \u0415\u0441\u043b\u0438 \u043d\u0430\u0448\u043b\u0438 - \u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043f\u0443\u0442\u044c, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 - \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 Android Studio. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u0435 \u0432 File -> Settings -> Build, Execution, Deployment -> Build Tools -> Gradle \u0422\u0443\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d \u043f\u0443\u0442\u044c \u043a \u043d\u0443\u0436\u043d\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 - \u0441\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0435\u0433\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u044b, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0438\u043a\u0430\u0435\u043c win + x -> \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c System -> Advanced System Settings -> Advanced -> Environment Variables \u0412 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 System Variables \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Path \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Edit -> New -> \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435 \u0441 java -> \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c OK \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0442\u0443\u043f\u0438\u043b\u0438 \u0432 \u0441\u0438\u043b\u0443 \u0438 \u0441\u043d\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 java -version \u041d\u0430\u043c \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u0441\u0435 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0434\u043b\u044f adb. \u0418\u0449\u0435\u043c \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435 platform-tools , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043b\u0435\u0436\u0438\u0442 adb . \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c Android Studio -> Tools -> SDK Manager . \u0412 \u043f\u043e\u043b\u0435 Android SDK Location \u0443\u043a\u0430\u0437\u0430\u043d \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435 Sdk , \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f platform-tools . \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u043f\u0443\u0442\u044c \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 System Variables, \u043a\u0430\u043a \u043c\u044b \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u043b\u0438 \u0440\u0430\u043d\u0435\u0435 \u0441 java \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb version \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u0437\u0430\u043f\u0443\u0441\u043a\u0443 adb-server. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u0441\u0435 \u0435\u0449\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b java \u0438 adb \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442, \u0442\u043e \u043f\u043e\u0433\u0443\u0433\u043b\u0438\u0442\u0435, \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043c\u043d\u043e\u0433\u043e. \u0412\u0441\u0435, \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c - \u043d\u0430\u0439\u0442\u0438 \u043f\u0443\u0442\u044c \u043a java \u0438 adb \u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u0445 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u044b.","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 java \u0438 adb"},{"location":"Tutorial/%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%20adb-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4/#_1","text":"\u041f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u043e\u0432, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e adb, \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u043c\u0430\u043d\u0434. \u0412\u043e-\u043f\u0435\u0440\u0432\u044b\u0445, \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0441\u0435\u0439\u0447\u0430\u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u043a adb. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432\u0432\u043e\u0434\u0438\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb devices \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u043d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \u043d\u0438\u043a\u0430\u043a\u043e\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a adb, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0443\u0441\u0442\u043e\u0439, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0435\u0449\u0435 \u0440\u0430\u0437 \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0448 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e adb-\u043a\u043e\u043c\u0430\u043d\u0434 \u043c\u044b \u043c\u043e\u0436\u0435\u043c: \u041f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0441 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430/\u043d\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0418 \u043c\u043d\u043e\u0433\u043e\u0435 \u0434\u0440\u0443\u0433\u043e\u0435 \u0414\u043b\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 tutorial, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438. \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb uninstall package_name \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c, \u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb shell . \u041e\u043d\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u043e\u043b\u044c Android (shell) \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f Linux-\u043a\u043e\u043c\u0430\u043d\u0434 \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0442\u0430\u043a\u0438\u0445 \u043a\u043e\u043c\u0430\u043d\u0434. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 pm list packages . \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0435, \u0447\u0442\u043e \u043c\u044b \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 shell-\u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u0438\u0441\u0430\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0443\u0436\u0435 \u043d\u0430\u0445\u043e\u0434\u044f\u0441\u044c \u0432 \u043d\u0435\u0439. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u044d\u0442\u0430\u043f\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0443 \u0432\u0430\u0441 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0443\u0442, \u043f\u043e\u043a\u0430 \u0432\u044b \u043d\u0435 \u0437\u0430\u043a\u0440\u043e\u0435\u0442\u0435 shell-\u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 exit \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c shell-\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043c\u043e\u0436\u043d\u043e \u0438 \u043d\u0435 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044f shell-\u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0435 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 adb shell . \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043c \u0435\u0433\u043e \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435. \u0412 Android Studio \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c File Explorer, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u0444\u0430\u0439\u043b\u044b \u0438 \u043f\u0430\u043f\u043a\u0438 \u043d\u0430 \u0434\u0435\u0432\u0430\u0439\u0441\u0435. \u041e\u0431\u044b\u0447\u043d\u043e \u0441\u043a\u0440\u0438\u0448\u043e\u0442\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442 \u043d\u0430 sdcard, \u043c\u044b \u043f\u043e\u0441\u0442\u0443\u043f\u0438\u043c \u0442\u0430\u043a\u0436\u0435. \u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 adb shell screencap /{pathToFile}/{name_of_image.png} . \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0442\u0430\u043a: adb shell screencap /sdcard/my_screen.png \u0412 Device File Explorer \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043c\u044b\u0448\u0438 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Synchronize , \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432 \u043f\u0430\u043f\u043a\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043d\u0430\u043c\u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442","title":"\u041f\u0440\u043e\u0431\u0443\u0435\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b"},{"location":"Tutorial/%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%20adb-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4/#adb_1","text":"\u0418\u0442\u0430\u043a, \u043c\u044b \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0432 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 adb, \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0438\u043c \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430. \u0422\u043e \u0435\u0441\u0442\u044c \u0442\u0435\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c, \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u043c\u0435\u0442\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u0438\u0445 \u043a\u043e\u043c\u0430\u043d\u0434. \u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442\u044b \u043c\u043e\u0433\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430 \u043d\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-server. \u0421\u043f\u0435\u0440\u0432\u0430 \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b adbserver-desktop.jar \u043d\u0430 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u043c \u0433\u0438\u0442\u0445\u0430\u0431\u0435 Kaspresso \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: java - jar < path / to / file >/ adbserver - desktop . jar \u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0431\u044b\u043b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443, \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 java -jar \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0435\u0440\u0435\u0442\u044f\u043d\u0443\u0442\u044c \u0444\u0430\u0439\u043b adbserver-desctop.jar \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438. \u041f\u043e\u0441\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 Enter . \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0441\u044f AdbServer. \u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0434\u0435\u0432\u0430\u0439\u0441 \u0441\u043e\u043e\u0431\u0449\u0438\u0442 \u0434\u0435\u0441\u043a\u0442\u043e\u043f\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u041c\u043e\u0436\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430. \u0412 \u043f\u0430\u043a\u0435\u0442\u0435 com.kaspersky.kaspresso.tutorial \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 AdbTest \u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 TestCase package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase class AdbTest : TestCase () { } \u0412 Kaspresso \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 adb \u0435\u0441\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f AdbServer . \u042d\u043a\u0437\u0435\u043c\u043b\u043f\u044f\u0440 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 BaseTestContext \u0438 \u0432 BaseTestCase , \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430\u0448 \u043a\u043b\u0430\u0441\u0441 AdbTest. \u0420\u0430\u043d\u0435\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb devices , \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u043b\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u044d\u0442\u0443 \u0436\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0442\u0435\u0441\u0442\u0430. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 test() \u0438 \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0435\u0439 @Test package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class AdbTest : TestCase () { @Test fun test () { } } \u0427\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043f\u043e\u043b\u044e adbServer \u0438 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438\u0437 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 - performAdb , performCmd \u0438\u043b\u0438 performShell . \u041f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u043e\u043d\u0438 \u0434\u0435\u043b\u0430\u044e\u0442 performAdb \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 adb performShell \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 shell performCmd \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0432\u044b\u0437\u0432\u0430\u0442\u044c adb \u043a\u043e\u043c\u0430\u043d\u0434\u0443 devices \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434 adbServer.performAdb(\"devices\") package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Test class AdbTest : TestCase () { @Test fun test () { adbServer . performAdb ( \"devices\" ) } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442. \u0422\u0435\u0441\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041e\u0431\u0440\u0430\u0449\u0430\u0435\u043c \u0432\u0430\u0448\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u0443 \u0432\u0430\u0441 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b 2 \u0443\u0441\u043b\u043e\u0432\u0438\u044f: \u0417\u0430\u043f\u0443\u0449\u0435\u043d adb-server \u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u0442\u0435, \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0434\u0430\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430 \u0432 \u043c\u0430\u043d\u0438\u0444\u0435\u0441\u0442\u0435 \u0421 \u043f\u0435\u0440\u0432\u044b\u043c \u043f\u0443\u043d\u043a\u0442\u043e\u043c \u043c\u044b \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043b\u0438\u0441\u044c \u0440\u0430\u043d\u044c\u0448\u0435, \u0441\u0435\u0439\u0447\u0430\u0441 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u0441\u043e \u0432\u0442\u043e\u0440\u044b\u043c. \u041a\u0430\u0436\u0434\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430. \u041e\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043c\u0430\u043d\u0438\u0444\u0435\u0441\u0442\u0435. \u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u0430\u0431\u0443\u0434\u0435\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u0442\u0435\u0441\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0435\u0442. \u0421\u0435\u0439\u0447\u0430\u0441 \u0442\u0435\u0441\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 adb-\u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043d\u043e \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0435\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u0414\u0430\u043d\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 adb devices \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c (\u0442\u0438\u043f List<String> ). \u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u044d\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f (\u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a) \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u043e\u0442 \u0442\u0430\u043a\u043e\u0433\u043e \u0432\u0438\u0434\u0430: `exitCode=0, message=List of devices attached emulator-5555 device'. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u044b\u0439 (\u0438 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439) \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u044d\u0442\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u043e\u0432\u043e \"emulator\". \u041f\u0440\u043e\u0441\u0442\u043e \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043c\u044b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Assert // \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043d\u0443\u0436\u043d\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c import org.junit.Test class AdbTest : TestCase () { @Test fun test () { val result = adbServer . performAdb ( \"devices\" ) Assert . assertTrue ( // \u0414\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c Assert.assertTrue(), \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u044b Assert . assertTrue ( \"emulator\" in result . first ()) //\u0442\u0443\u0442 \u043c\u0435\u0442\u043e\u0434 in \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 (\u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 result) \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u043e\u0432\u043e \"emulator\" ) } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u044e adb \u043a\u043e\u043c\u0430\u043d\u0434\u0443. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0435\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c adb undefined_command . Info \u041e\u0431\u0440\u0430\u0449\u0430\u0435\u043c \u0432\u0430\u0448\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435 \u0441\u0435\u0439\u0447\u0430\u0441 \u0437\u0430\u043f\u0443\u0449\u0435\u043d adb-server, \u0435\u0441\u043b\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u043f\u043e\u043a\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441\u0435\u0440\u0432\u0435\u0440, \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0435\u0449\u0435 \u043e\u0434\u043d\u043e \u043e\u043a\u043d\u043e \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430 \u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432 \u043d\u0435\u043c \u041f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u044d\u0442\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u0443 \u043d\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u0431\u0440\u043e\u0448\u0435\u043d\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 AdbServerException \u0438 \u0432 \u043f\u043e\u043b\u0435 message \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0432\u0438\u0434\u0435\u043b\u0438 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 unknown command undefined_command . \u0427\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442 \u043d\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u0431\u043b\u043e\u043a\u0435 try catch \u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 catch \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0447\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435\u043a\u0441\u0442, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432\u044b\u0448\u0435. package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.internal.exceptions.AdbServerException import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Assert import org.junit.Test class AdbTest : TestCase () { @Test fun test () { val result = adbServer . performAdb ( \"devices\" ) Assert . assertTrue ( \"emulator\" in result . first ()) val command = \"undefined_command\" try { adbServer . performAdb ( command ) } catch ( e : AdbServerException ) { Assert . assertTrue ( \"unknown command $ command \" in e . message ) } } } \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041c\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u043e\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0443\u0435\u043c\u0441\u044f \u0432 adb shell \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0445. \u0420\u0430\u043d\u0435\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u043b\u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u0438\u0434\u0430 adb shell pm list packages . \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0435\u0433\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043d\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445. val packages = adbServer . performShell ( \"pm list packages\" ) Assert . assertTrue ( \"com.kaspersky.kaspresso.tutorial\" in packages . first ()) \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c shell-\u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 performShell , \u0442\u043e \u043f\u0438\u0441\u0430\u0442\u044c adb shell \u043d\u0435 \u043d\u0443\u0436\u043d\u043e. \u0421\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0434\u0438\u043b\u0438 \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u043e \u0435\u0441\u0442\u044c \u0441\u043f\u043e\u0441\u043e\u0431 \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0443\u0434\u043e\u0431\u043d\u0435\u0435, \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u043e\u0432 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c Device, \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435, \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0438 \u043c\u043d\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0435. \u0418\u0437 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 device \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0443 targetContext \u0438 \u0443 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c packageName . \u041a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u043d\u0430 \u0442\u0430\u043a\u043e\u0439: ... val packages = adbServer . performShell ( \"pm list packages\" ) Assert . assertTrue ( device . targetContext . packageName in packages . first ()) ... \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0442\u0438\u043f \u043a\u043e\u043c\u0430\u043d\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c - \u043a\u043e\u043c\u0430\u043d\u0434\u044b cmd. \u042d\u0442\u043e \u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u0438\u0448\u0435\u043c \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c adb-\u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043c\u044b \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043f\u0438\u0448\u0435\u043c adb command_name . \u0422\u0435\u043f\u0435\u0440\u044c, \u0435\u0441\u043b\u0438 \u043c\u044b \u0432 \u0442\u0435\u0441\u0442\u0435 \u0432\u043c\u0435\u0441\u0442\u043e performAdb \u0432\u044b\u0437\u043e\u0432\u0435\u043c performCmd, \u0442\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0446\u0435\u043b\u0438\u043a\u043e\u043c: val result = adbServer . performCmd ( \"adb devices\" ) Assert . assertTrue ( \"emulator\" in result . first ()) \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f. \u0414\u043b\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u0430\u043a\u0443\u044e-\u043d\u0438\u0431\u0443\u0434\u044c cmd-\u043a\u043e\u043c\u0430\u043d\u0434\u0443. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, hostname \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0445\u043e\u0441\u0442\u0430 (\u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430). \u0415\u0441\u043b\u0438 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0435\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438, \u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c: \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u044d\u0442\u0443 \u0436\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u0430 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u043f\u0443\u0441\u0442\u043e\u0439. val hostname = adbServer . performCmd ( \"hostname\" ) Assert . assertTrue ( hostname . isNotEmpty ()) \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c. \u0422\u0435\u0441\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041e\u0434\u0438\u043d \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u0435\u0441\u0442\u044c \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 val result = adbServer . performCmd ( \"adb devices\" ) Assert . assertTrue ( \"emulator\" in result . first ()) \u041c\u044b \u0435\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0446\u0435\u043b\u044f\u0445 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0438 \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u043c\u0438. \u0420\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u0445, \u0442\u0430\u043a \u0438 \u043d\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u0445, \u0438 \u0442\u0435\u0441\u0442\u044b \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u0437-\u0437\u0430 \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0434\u0430\u0442\u044c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u0441\u0442 \u043c\u044b \u0443\u0434\u0430\u043b\u0438\u043c. \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u043a\u043e\u0434 AdbTest \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: package com.kaspersky.kaspresso.tutorial import com.kaspersky.kaspresso.internal.exceptions.AdbServerException import com.kaspersky.kaspresso.testcases.api.testcase.TestCase import org.junit.Assert import org.junit.Test class AdbTest : TestCase () { @Test fun test () { val command = \"undefined_command\" try { adbServer . performAdb ( command ) } catch ( e : AdbServerException ) { Assert . assertTrue ( \"unknown command $ command \" in e . message ) } val packages = adbServer . performShell ( \"pm list packages\" ) Assert . assertTrue ( device . targetContext . packageName in packages . first ()) val hostname = adbServer . performCmd ( \"hostname\" ) Assert . assertTrue ( hostname . isNotEmpty ()) } }","title":"\u0420\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 adb \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445"},{"location":"Tutorial/%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%20adb-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4/#_2","text":"\u0412 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0443\u0437\u043d\u0430\u043b\u0438, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 adb, \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0440\u0430\u0431\u043e\u0442\u0443 adb-server, \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u043a\u043e\u043c\u0430\u043d\u0434 (cmd, adb, shell) \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0438 \u0432 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u0445, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0443\u0437\u043d\u0430\u043b\u0438 \u043f\u0440\u043e \u043e\u0431\u044a\u0435\u043a\u0442 Device, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c.","title":"\u0418\u0442\u043e\u0433"},{"location":"Tutorial_old/","text":"Tutorial index","title":"Tutorial index"},{"location":"Tutorial_old/#tutorial-index","text":"","title":"Tutorial index"},{"location":"Tutorial_old/Android_studio/","text":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u041a\u043e\u0434 Kaspresso \u043f\u0443\u0431\u043b\u0438\u0447\u0435\u043d \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 . \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Code: \u0412 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u043c \u043e\u043a\u043d\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Download ZIP: \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043f\u0440\u043e\u0435\u043a\u0442 \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0447\u0435\u043d, \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u043c \u0430\u0440\u0445\u0438\u0432. \u041f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u0430\u043f\u043a\u0430 Kaspresso-master. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0430 \u0434\u0438\u0441\u043a\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043f\u0430\u043f\u043a\u0443 \u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0432 \u043d\u0435\u0435 \u0438\u0437 \u043f\u0430\u043f\u043a\u0438 \"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0438\" \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 Kaspresso-master. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0448\u0430\u0433\u0443. \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c Android Studio Android Studio \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. \u041d\u0430\u043c \u043e\u043d\u0430 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 Android Studio, \u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u0448\u0430\u0433. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 https://developer.android.com/studio \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Download Android Studio: \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0442\u0443\u0434\u0438\u0438. \u041c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u044d\u0442\u0438\u043c \u0432\u0438\u0434\u0435\u043e \u043a\u0430\u043a \u043f\u043e\u0448\u0430\u0433\u043e\u0432\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439. \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a Android Studio \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0447\u0435\u043d\u0430, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0435. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \"Open\", \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0430\u043f\u043a\u0443 Kaspresso-master. \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043e\u0442\u043a\u0440\u043e\u0435\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442, \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0434\u043e\u0436\u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u0447\u0442\u043e\u0431\u044b Android Studio \u043f\u0440\u043e\u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043b\u0430 \u0444\u0430\u0439\u043b\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043c\u0435\u043d\u044e Android Studio \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Tools -> Device Manager \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u044f\u0432\u0438\u0441\u044f \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u043c\u0438 \u0438 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Create Device \u0423\u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \"\u0436\u0435\u043b\u0435\u0437\u0430\", \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u044e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0445\u043e\u0442\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"1\" \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d, \u043f\u043b\u0430\u043d\u0448\u0435\u0442, \u0442\u0435\u043b\u0435\u0432\u0438\u0437\u043e\u0440 \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435. \u041d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0422\u0435\u043b\u0435\u0444\u043e\u043d. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"2\" - \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b\u0430 \u043d\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u044b, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c Pixel 6. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Next \u0438 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u043c \u043d\u0430 \u043e\u043a\u043d\u043e \u0432\u044b\u0431\u043e\u0440\u0430 \u043e\u0431\u0440\u0430\u0437\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b: \u042d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u0431\u043e\u043b\u0435\u0435 \u0432\u0430\u0436\u0435\u043d \u0432 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 - \u0437\u0434\u0435\u0441\u044c \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c, \u043a\u0430\u043a\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e Android \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u044b\u0431\u0435\u0440\u0435\u043c R. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0443 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0441\u043f\u0440\u0430\u0432\u0430 \u043e\u0442 \u0431\u0443\u043a\u0432\u044b R, \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u043c. \u041a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u043e\u043a\u043e\u043d\u0447\u0435\u043d \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Finish: \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e R \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 Next: \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0438\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043e\u0433\u043e \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430, \u0447\u0442\u043e\u0431 \u0438\u0445 \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u043a\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439. \u0414\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u0446\u0435\u043b\u0435\u0439 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Finish. \u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043e \u0438 \u0433\u043e\u0442\u043e\u0432\u043e \u043a \u0440\u0430\u0431\u043e\u0442\u0435. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0433\u043e \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 Play \u043f\u0440\u0430\u0432\u0435\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430: \u0412 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 Android Studio \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c Hypervisor: \u0418\u0442\u043e\u0433: Android Studio \u0441\u043a\u0430\u0447\u0435\u043d\u0430, \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d, \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u0441\u043a\u0430\u0447\u0435\u043d. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u0442\u0435\u0441\u0442\u044b.","title":"Android studio"},{"location":"Tutorial_old/Android_studio/#kaspresso","text":"\u041a\u043e\u0434 Kaspresso \u043f\u0443\u0431\u043b\u0438\u0447\u0435\u043d \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 . \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Code: \u0412 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u043c\u0441\u044f \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u043c \u043e\u043a\u043d\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Download ZIP: \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043f\u0440\u043e\u0435\u043a\u0442 \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0447\u0435\u043d, \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u043c \u0430\u0440\u0445\u0438\u0432. \u041f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u0430\u043f\u043a\u0430 Kaspresso-master. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0430 \u0434\u0438\u0441\u043a\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u043f\u0430\u043f\u043a\u0443 \u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0432 \u043d\u0435\u0435 \u0438\u0437 \u043f\u0430\u043f\u043a\u0438 \"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0438\" \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 Kaspresso-master. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0448\u0430\u0433\u0443.","title":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso"},{"location":"Tutorial_old/Android_studio/#android-studio","text":"Android Studio \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. \u041d\u0430\u043c \u043e\u043d\u0430 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 Android Studio, \u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u0448\u0430\u0433. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 https://developer.android.com/studio \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Download Android Studio: \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0448\u0430\u0433\u0438 \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0442\u0443\u0434\u0438\u0438. \u041c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u044d\u0442\u0438\u043c \u0432\u0438\u0434\u0435\u043e \u043a\u0430\u043a \u043f\u043e\u0448\u0430\u0433\u043e\u0432\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439. \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a Android Studio \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0447\u0435\u043d\u0430, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0435. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \"Open\", \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0430\u043f\u043a\u0443 Kaspresso-master. \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043e\u0442\u043a\u0440\u043e\u0435\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442, \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0434\u043e\u0436\u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u0447\u0442\u043e\u0431\u044b Android Studio \u043f\u0440\u043e\u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043b\u0430 \u0444\u0430\u0439\u043b\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430.","title":"\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c Android Studio"},{"location":"Tutorial_old/Android_studio/#_1","text":"\u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043c\u0435\u043d\u044e Android Studio \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c Tools -> Device Manager \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u044f\u0432\u0438\u0441\u044f \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u043c\u0438 \u0438 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Create Device \u0423\u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \"\u0436\u0435\u043b\u0435\u0437\u0430\", \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u044e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0445\u043e\u0442\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"1\" \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d, \u043f\u043b\u0430\u043d\u0448\u0435\u0442, \u0442\u0435\u043b\u0435\u0432\u0438\u0437\u043e\u0440 \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435. \u041d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0422\u0435\u043b\u0435\u0444\u043e\u043d. \u0412 \u0441\u0435\u043a\u0446\u0438\u0438 \"2\" - \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b\u0430 \u043d\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u044b, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c Pixel 6. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Next \u0438 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u043c \u043d\u0430 \u043e\u043a\u043d\u043e \u0432\u044b\u0431\u043e\u0440\u0430 \u043e\u0431\u0440\u0430\u0437\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b: \u042d\u0442\u043e\u0442 \u044d\u043a\u0440\u0430\u043d \u0431\u043e\u043b\u0435\u0435 \u0432\u0430\u0436\u0435\u043d \u0432 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 - \u0437\u0434\u0435\u0441\u044c \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c, \u043a\u0430\u043a\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e Android \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u044b\u0431\u0435\u0440\u0435\u043c R. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0443 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0441\u043f\u0440\u0430\u0432\u0430 \u043e\u0442 \u0431\u0443\u043a\u0432\u044b R, \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u043c. \u041a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u043e\u043a\u043e\u043d\u0447\u0435\u043d \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Finish: \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e R \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 Next: \u041d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043d\u0438\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043e\u0433\u043e \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430, \u0447\u0442\u043e\u0431 \u0438\u0445 \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u043a\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439. \u0414\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u0446\u0435\u043b\u0435\u0439 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c Finish. \u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043e \u0438 \u0433\u043e\u0442\u043e\u0432\u043e \u043a \u0440\u0430\u0431\u043e\u0442\u0435. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0435\u0433\u043e \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 Play \u043f\u0440\u0430\u0432\u0435\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430: \u0412 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 Android Studio \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c Hypervisor: \u0418\u0442\u043e\u0433: Android Studio \u0441\u043a\u0430\u0447\u0435\u043d\u0430, \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d, \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u0441\u043a\u0430\u0447\u0435\u043d. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u0442\u0435\u0441\u0442\u044b.","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430"},{"location":"Tutorial_old/Device/","text":"\u0412\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u043c \u0441 Android \u0432\u043d\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0424\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u043a\u0430 \u0437\u0430\u0434\u0430\u0447\u0438 \u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437: 1. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 TextView , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 2. \u041a\u043d\u043e\u043f\u043a\u0438 Button \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u043a\u0443\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi. \u0421\u043e\u0437\u0434\u0430\u0435\u043c Page object \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u041f\u0440\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d PageObject \u0432 Kaspresso \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 . \u0412 \u043f\u0430\u043f\u043a\u0435 androidTest \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 WiFiScreen object WiFiScreen : KScreen < WiFiScreen > () { override val layoutId : Int = R . layout . activity_wifi override val viewClass : Class <*> = WiFiActivity :: class . java val wifiStatusTitle = KTextView { withId ( R . id . wifi_status ) } val wifiStatusButton = KButton { withId ( R . id . check_wifi_btn ) } } \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442. \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi. \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0432 \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u0441 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0433\u043e. \u041d\u043e \u0442\u043e, \u043d\u0430 \u043a\u0430\u043a\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u043d \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0441\u044f, \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0438\u0441\u0435\u0442\u044c \u043e\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0430 WiFi. \u0414\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0431\u043b\u0430\u0434\u0430\u0442\u044c \u0434\u0435\u0442\u0435\u0440\u043c\u0438\u043d\u0438\u0437\u043c\u043e\u043c - \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u0441\u0442\u0430\u0440\u0442\u0430 \u0442\u0435\u0441\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u0435\u0432\u0430\u0439\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044e. \u0425\u043e\u0440\u043e\u0448\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430 \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430. \u041f\u0440\u043e before/after section class WiFiTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < WiFiActivity > () @Test fun check_wifi_status () = before { device . network . disable () device . network . toggleWiFi ( false ) }. after { device . network . enable () device . network . toggleWiFi ( true ) }. run { step ( \"Check correct wifi status\" ) { WiFiScreen { wifiStatusButton . click () wifiStatusTitle . containsText ( \"disabled\" ) } } } } \u0424\u0430\u0441\u0430\u0434\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Device \u0414\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 Android Kaspresso \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0430\u0441\u0430\u0434\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Device. Device \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043c\u043d\u043e\u0433\u043e \u0433\u043e\u0432\u043e\u0440\u044f\u0449\u0438\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044f\u043c\u0438 Android: Apps - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb install \u0438 adb uninstall . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceAppSampleTest. Activity \u2014 \u044d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u044b\u043c\u0438 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Activity. AdbServer \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceActivitiesSampleTest. Files - \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb push \u0438 adb rm \u0438 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f android.permission.WRITE_EXTERNAL_STORAGE . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceFilesSampleTest. Internet - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Wi-Fi \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0441\u0435\u0442\u0438. \u0411\u0443\u0434\u044c\u0442\u0435 \u043e\u0441\u0442\u043e\u0440\u043e\u0436\u043d\u044b \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u044d\u0442\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a Wi-Fi \u043c\u043e\u0433\u0443\u0442 \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u0435\u0440\u0441\u0438\u044f\u043c\u0438 Android. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceNetworkSampleTest. Keyboard \u2014 \u044d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 adb . \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0435\u0433\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 Espresso \u0438\u043b\u0438 UiAutomator \u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u044d\u043a\u0440\u0430\u043d \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d). \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceKeyboardSampleTest. Location - \u044d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 GPS. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceLocationSampleTest. Telephone - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u044d\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0432\u044b\u0437\u043e\u0432\u044b \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c SMS-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u0445, \u0442.\u043a. \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb emu . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DevicePhoneSampleTest. Screenshots \u2014 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0439 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Activity. \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 android.permission.WRITE_EXTERNAL_STORAGE . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceScreenshotSampleTest. Accessibility - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0441\u043b\u0443\u0436\u0431\u044b \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439. \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0441 API 24. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceAccessibilitySampleTest. \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 Android \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DevicePermissionsSampleTest. HackPermissions \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0431\u0435\u0437 \u0434\u0438\u0430\u043b\u043e\u0433\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 Android \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceHackPermissionsSampleTest. Exploit - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043a\u043d\u043e\u043f\u043a\u0438. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceExploitSampleTest. \u044f\u0437\u044b\u043a \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u044f\u0437\u044b\u043a. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceLanguageSampleTest. Logcat - \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a adb logcat. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceLogcatSampleTest. UiDevice - \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 android.support.test.uiautomator.UiDevice . \u041c\u044b \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0435\u0441\u0442\u044c Kaautomator , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439, \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0443\u0435\u043c\u044b\u0439 \u0438 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0439 API \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0432\u043d\u0435 \u0412\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0422\u0430\u043a\u0436\u0435 Device \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432 \u2014 targetContext \u0438 context. \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0435\u0441\u0442. \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u044d\u043a\u0440\u0430\u043d\u0430. @Test fun check_same_wifi_status_after_rotation () = before { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . exploit . setAutoRotationEnabled ( true ) device . network . disable () device . network . toggleWiFi ( false ) }. after { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . exploit . setAutoRotationEnabled ( true ) device . network . enable () device . network . toggleWiFi ( true ) }. run { step ( \"Check correct wifi status\" ) { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) WiFiScreen { wifiStatusButton . click () wifiStatusTitle . containsText ( \"disabled\" ) } } step ( \"Rotate device and check wifi status\" ) { device . exploit . rotate () Assert . assertTrue ( Configuration . ORIENTATION_LANDSCAPE == device . context . resources . configuration . orientation ) WiFiScreen . wifiStatusTitle . containsText ( \"disabled\" ) } }","title":"Device"},{"location":"Tutorial_old/Device/#android","text":"","title":"\u0412\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u043c \u0441 Android \u0432\u043d\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},{"location":"Tutorial_old/Device/#_1","text":"\u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437: 1. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 TextView , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 2. \u041a\u043d\u043e\u043f\u043a\u0438 Button \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u043a\u0443\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi.","title":"\u0424\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u043a\u0430 \u0437\u0430\u0434\u0430\u0447\u0438"},{"location":"Tutorial_old/Device/#page-object","text":"\u041f\u0440\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d PageObject \u0432 Kaspresso \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 . \u0412 \u043f\u0430\u043f\u043a\u0435 androidTest \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 WiFiScreen object WiFiScreen : KScreen < WiFiScreen > () { override val layoutId : Int = R . layout . activity_wifi override val viewClass : Class <*> = WiFiActivity :: class . java val wifiStatusTitle = KTextView { withId ( R . id . wifi_status ) } val wifiStatusButton = KButton { withId ( R . id . check_wifi_btn ) } }","title":"\u0421\u043e\u0437\u0434\u0430\u0435\u043c Page object \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430."},{"location":"Tutorial_old/Device/#wifi","text":"\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0432 \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u0441 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0433\u043e. \u041d\u043e \u0442\u043e, \u043d\u0430 \u043a\u0430\u043a\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u043d \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0441\u044f, \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0438\u0441\u0435\u0442\u044c \u043e\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0430 WiFi. \u0414\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0442\u0435\u0441\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0431\u043b\u0430\u0434\u0430\u0442\u044c \u0434\u0435\u0442\u0435\u0440\u043c\u0438\u043d\u0438\u0437\u043c\u043e\u043c - \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u0441\u0442\u0430\u0440\u0442\u0430 \u0442\u0435\u0441\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u0435\u0432\u0430\u0439\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044e. \u0425\u043e\u0440\u043e\u0448\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430 \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0430. \u041f\u0440\u043e before/after section class WiFiTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < WiFiActivity > () @Test fun check_wifi_status () = before { device . network . disable () device . network . toggleWiFi ( false ) }. after { device . network . enable () device . network . toggleWiFi ( true ) }. run { step ( \"Check correct wifi status\" ) { WiFiScreen { wifiStatusButton . click () wifiStatusTitle . containsText ( \"disabled\" ) } } } }","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442. \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi."},{"location":"Tutorial_old/Device/#device","text":"\u0414\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 Android Kaspresso \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0430\u0441\u0430\u0434\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Device. Device \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043c\u043d\u043e\u0433\u043e \u0433\u043e\u0432\u043e\u0440\u044f\u0449\u0438\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044f\u043c\u0438 Android: Apps - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb install \u0438 adb uninstall . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceAppSampleTest. Activity \u2014 \u044d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u044b\u043c\u0438 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Activity. AdbServer \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceActivitiesSampleTest. Files - \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb push \u0438 adb rm \u0438 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f android.permission.WRITE_EXTERNAL_STORAGE . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceFilesSampleTest. Internet - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Wi-Fi \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0441\u0435\u0442\u0438. \u0411\u0443\u0434\u044c\u0442\u0435 \u043e\u0441\u0442\u043e\u0440\u043e\u0436\u043d\u044b \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u044d\u0442\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a Wi-Fi \u043c\u043e\u0433\u0443\u0442 \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u0435\u0440\u0441\u0438\u044f\u043c\u0438 Android. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceNetworkSampleTest. Keyboard \u2014 \u044d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 adb . \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0435\u0433\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 Espresso \u0438\u043b\u0438 UiAutomator \u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u044d\u043a\u0440\u0430\u043d \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d). \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceKeyboardSampleTest. Location - \u044d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 GPS. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceLocationSampleTest. Telephone - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u044d\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0432\u044b\u0437\u043e\u0432\u044b \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c SMS-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430\u0445, \u0442.\u043a. \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b adb emu . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DevicePhoneSampleTest. Screenshots \u2014 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0439 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 Activity. \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 android.permission.WRITE_EXTERNAL_STORAGE . \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceScreenshotSampleTest. Accessibility - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0441\u043b\u0443\u0436\u0431\u044b \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439. \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0441 API 24. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceAccessibilitySampleTest. \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 Android \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DevicePermissionsSampleTest. HackPermissions \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0431\u0435\u0437 \u0434\u0438\u0430\u043b\u043e\u0433\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 Android \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceHackPermissionsSampleTest. Exploit - \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043a\u043d\u043e\u043f\u043a\u0438. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceExploitSampleTest. \u044f\u0437\u044b\u043a \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u044f\u0437\u044b\u043a. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceLanguageSampleTest. Logcat - \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a adb logcat. \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 DeviceLogcatSampleTest. UiDevice - \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 android.support.test.uiautomator.UiDevice . \u041c\u044b \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0435\u0441\u0442\u044c Kaautomator , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439, \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0443\u0435\u043c\u044b\u0439 \u0438 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0439 API \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0432\u043d\u0435 \u0412\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0422\u0430\u043a\u0436\u0435 Device \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432 \u2014 targetContext \u0438 context.","title":"\u0424\u0430\u0441\u0430\u0434\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Device"},{"location":"Tutorial_old/Device/#wifi_1","text":"@Test fun check_same_wifi_status_after_rotation () = before { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . exploit . setAutoRotationEnabled ( true ) device . network . disable () device . network . toggleWiFi ( false ) }. after { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) device . exploit . setAutoRotationEnabled ( true ) device . network . enable () device . network . toggleWiFi ( true ) }. run { step ( \"Check correct wifi status\" ) { device . exploit . setOrientation ( Exploit . DeviceOrientation . Portrait ) WiFiScreen { wifiStatusButton . click () wifiStatusTitle . containsText ( \"disabled\" ) } } step ( \"Rotate device and check wifi status\" ) { device . exploit . rotate () Assert . assertTrue ( Configuration . ORIENTATION_LANDSCAPE == device . context . resources . configuration . orientation ) WiFiScreen . wifiStatusTitle . containsText ( \"disabled\" ) } }","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0435\u0441\u0442. \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 WiFi \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u044d\u043a\u0440\u0430\u043d\u0430."},{"location":"Tutorial_old/Flaky%20safely/","text":"\u041d\u0435\u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. \u0421ontinuously, compose. Kaspresso \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0435\u0440\u043c\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u044c \u0438 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440. class FlakyActivity : AppCompatActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) val binding = FlakyActivityBinding . inflate ( layoutInflater ) setContentView ( binding . root ) binding . sixthElementBtn . setOnClickListener { startActivity ( Intent ( this , ResultActivity :: class . java )) } Handler ( mainLooper ) . apply { postDelayed ( { binding . secondElementTv . visibility = View . VISIBLE }, VISIBILITY_DELAY ) } . apply { postDelayed ( { binding . secondElementTv . text = \"new second text\" }, VISIBILITY_DELAY + TEXT_DELAY ) } . apply { postDelayed ( { binding . sixthElementBtn . visibility = View . VISIBLE }, VISIBILITY_DELAY * 2 + TEXT_DELAY ) } . apply { postDelayed ( { binding . sixthElementBtn . text = \"new sixth text\" }, VISIBILITY_DELAY * 2 + TEXT_DELAY * 2 ) } } companion object { private val VISIBILITY_DELAY = TimeUnit . SECONDS . toMillis ( 1 ) private val TEXT_DELAY = TimeUnit . SECONDS . toMillis ( 3 ) } } \u042d\u0442\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u044d\u043a\u0440\u0430\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0435 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 Button \u0438 TextView \u0432 \u0432\u0438\u0434\u0435 Linear layout , \u043e\u0431\u0435\u0440\u043d\u0443\u0442\u044b\u0439 \u0432 ScrollView . \u0412\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441 \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u0432\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u043d\u0430 \u0432\u0438\u0434\u0438\u043c\u044b\u0439, \u0430 \u043f\u043e\u0441\u043b\u0435 \u0438 \u0442\u0435\u043a\u0441\u0442. \u0417\u0430\u0442\u0435\u043c, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u044f\u0442 \u0438 \u0441 \u0448\u0435\u0441\u0442\u044b\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0430, \u043f\u043e \u043d\u0430\u0436\u0430\u0442\u0438\u044e \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d. \u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 Screen-\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 object FlakyScreen : Screen < FlakyScreen > () { val scrollView = KScrollView { withId ( R . id . scroll_view_flaky ) } val flakyBtn = KButton { withId ( R . id . sixth_element_btn ) } val flakyTextView = KButton { withId ( R . id . second_element_tv ) } } object ResultScreen : KScreen < ResultScreen > () { override val layoutId : Int = R . layout . result_activity override val viewClass : Class <*> = ResultActivity :: class . java val title = KTextView { withId ( R . id . result_title ) } } \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0442\u0435\u0441\u0442\u0430 class FlakyViewsTest : TestCase () { @get : Rule val activityTestRule = activityScenarioRule < FlakyActivity > () @Test fun flakyViewsTest () = run { step ( \"Open Flaky screen\" ) { step ( \"Check ScrollView screen is visible\" ) { FlakyScreen { scrollView . isVisible () } } step ( \"Check flaky text view is visible\" ) { FlakyScreen { flakyTextView { flakySafely ( timeoutMs = 3000 ) { isVisible () } hasText ( \"second element text\" ) } } } step ( \"Check flaky text view's text\" ) { FlakyScreen { flakySafely ( timeoutMs = TimeUnit . SECONDS . toMillis ( 4 )) { flakyTextView . hasText ( \"new second element text\" ) } } } step ( \"Check flaky button is visible\" ) { FlakyScreen { flakyBtn { isVisible () hasText ( \"sixth element text\" ) } } } step ( \"Check flaky button's text\" ) { FlakyScreen { flakySafely ( timeoutMs = TimeUnit . SECONDS . toMillis ( 5 )) { flakyBtn { hasText ( \"new sixth element text\" ) click () } } } } step ( \"Check success\" ) { ResultScreen { title { isVisible () hasText ( \"Result activity\" ) } } } } } } \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0435\u0441\u0442\u0430 \u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0442\u0435\u0441\u0442-\u043a\u0435\u0439\u0441\u0430: 1. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 2. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 3. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 4. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0448\u0435\u0441\u0442\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 5. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0448\u0435\u0441\u0442\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u043d\u0430 \u043d\u0435\u0433\u043e 6. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u0417\u0434\u0435\u0441\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 flakySafely . \u041e\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a. \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u043f\u0440\u0438 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438, \u043d\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0444\u043b\u0435\u043a\u0430\u044e\u0449\u0438\u0445 \u0442\u0435\u0441\u0442\u043e\u0432.","title":"\u041d\u0435\u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. \u0421ontinuously, compose."},{"location":"Tutorial_old/Flaky%20safely/#ontinuously-compose","text":"Kaspresso \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0435\u0440\u043c\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u044c \u0438 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440. class FlakyActivity : AppCompatActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) val binding = FlakyActivityBinding . inflate ( layoutInflater ) setContentView ( binding . root ) binding . sixthElementBtn . setOnClickListener { startActivity ( Intent ( this , ResultActivity :: class . java )) } Handler ( mainLooper ) . apply { postDelayed ( { binding . secondElementTv . visibility = View . VISIBLE }, VISIBILITY_DELAY ) } . apply { postDelayed ( { binding . secondElementTv . text = \"new second text\" }, VISIBILITY_DELAY + TEXT_DELAY ) } . apply { postDelayed ( { binding . sixthElementBtn . visibility = View . VISIBLE }, VISIBILITY_DELAY * 2 + TEXT_DELAY ) } . apply { postDelayed ( { binding . sixthElementBtn . text = \"new sixth text\" }, VISIBILITY_DELAY * 2 + TEXT_DELAY * 2 ) } } companion object { private val VISIBILITY_DELAY = TimeUnit . SECONDS . toMillis ( 1 ) private val TEXT_DELAY = TimeUnit . SECONDS . toMillis ( 3 ) } } \u042d\u0442\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u044d\u043a\u0440\u0430\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0435 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 Button \u0438 TextView \u0432 \u0432\u0438\u0434\u0435 Linear layout , \u043e\u0431\u0435\u0440\u043d\u0443\u0442\u044b\u0439 \u0432 ScrollView . \u0412\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441 \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u0432\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u043d\u0430 \u0432\u0438\u0434\u0438\u043c\u044b\u0439, \u0430 \u043f\u043e\u0441\u043b\u0435 \u0438 \u0442\u0435\u043a\u0441\u0442. \u0417\u0430\u0442\u0435\u043c, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u044f\u0442 \u0438 \u0441 \u0448\u0435\u0441\u0442\u044b\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0430, \u043f\u043e \u043d\u0430\u0436\u0430\u0442\u0438\u044e \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d.","title":"\u041d\u0435\u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. \u0421ontinuously, compose."},{"location":"Tutorial_old/Flaky%20safely/#screen-","text":"object FlakyScreen : Screen < FlakyScreen > () { val scrollView = KScrollView { withId ( R . id . scroll_view_flaky ) } val flakyBtn = KButton { withId ( R . id . sixth_element_btn ) } val flakyTextView = KButton { withId ( R . id . second_element_tv ) } } object ResultScreen : KScreen < ResultScreen > () { override val layoutId : Int = R . layout . result_activity override val viewClass : Class <*> = ResultActivity :: class . java val title = KTextView { withId ( R . id . result_title ) } }","title":"\u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 Screen-\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432"},{"location":"Tutorial_old/Flaky%20safely/#_1","text":"class FlakyViewsTest : TestCase () { @get : Rule val activityTestRule = activityScenarioRule < FlakyActivity > () @Test fun flakyViewsTest () = run { step ( \"Open Flaky screen\" ) { step ( \"Check ScrollView screen is visible\" ) { FlakyScreen { scrollView . isVisible () } } step ( \"Check flaky text view is visible\" ) { FlakyScreen { flakyTextView { flakySafely ( timeoutMs = 3000 ) { isVisible () } hasText ( \"second element text\" ) } } } step ( \"Check flaky text view's text\" ) { FlakyScreen { flakySafely ( timeoutMs = TimeUnit . SECONDS . toMillis ( 4 )) { flakyTextView . hasText ( \"new second element text\" ) } } } step ( \"Check flaky button is visible\" ) { FlakyScreen { flakyBtn { isVisible () hasText ( \"sixth element text\" ) } } } step ( \"Check flaky button's text\" ) { FlakyScreen { flakySafely ( timeoutMs = TimeUnit . SECONDS . toMillis ( 5 )) { flakyBtn { hasText ( \"new sixth element text\" ) click () } } } } step ( \"Check success\" ) { ResultScreen { title { isVisible () hasText ( \"Result activity\" ) } } } } } }","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0442\u0435\u0441\u0442\u0430"},{"location":"Tutorial_old/Flaky%20safely/#_2","text":"\u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0442\u0435\u0441\u0442-\u043a\u0435\u0439\u0441\u0430: 1. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 2. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 3. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 4. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0448\u0435\u0441\u0442\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 5. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0448\u0435\u0441\u0442\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u043d\u0430 \u043d\u0435\u0433\u043e 6. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u0417\u0434\u0435\u0441\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 flakySafely . \u041e\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a. \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u043f\u0440\u0438 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438, \u043d\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0444\u043b\u0435\u043a\u0430\u044e\u0449\u0438\u0445 \u0442\u0435\u0441\u0442\u043e\u0432.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0435\u0441\u0442\u0430"},{"location":"Tutorial_old/Kaspresso_configurator/","text":"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 Kaspresso","title":"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 Kaspresso"},{"location":"Tutorial_old/Kaspresso_configurator/#kaspresso","text":"","title":"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 Kaspresso"},{"location":"Tutorial_old/Kaspresso_scenario/","text":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Kaspresso Scenario \u041f\u0440\u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0442\u0435\u0441\u0442\u043e\u0432 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445. \u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u0436\u0435\u043b\u0430\u043d\u0438\u0435 \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0439\u0441\u044f \u043a\u043e\u0434 \u0432 \u043e\u0431\u0449\u0435\u0435 \u043c\u0435\u0441\u0442\u043e. \u042d\u0442\u0438\u043c \u043c\u0435\u0441\u0442\u043e\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 TestCase . \u041c\u044b \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0433\u043e \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 Kaspresso \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 Scenario - \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0448\u0430\u0433\u0438 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445. \u041f\u0440\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 Scenario \u0432 \u0442\u0435\u0441\u0442, \u0448\u0430\u0433\u0438 Scenario \u0431\u0443\u0434\u0443\u0442 \u0432\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0434\u043b\u044f Scenario \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 Login. \u0415\u0441\u043b\u0438 \u0432 \u0431\u043e\u043b\u044c\u0448\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0435\u0441\u0442\u043e\u0432 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432\u0445\u043e\u0434 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0443\u044e\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432 \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u0432 \u043e\u0431\u0449\u0438\u0439 Scenraio. class LoginScenario ( private val account : Account ): Scenario () { override val steps : TestContext < Unit > .() -> Unit = { MainScreen { menuButton { click () } accountIcon { click () } } LoginScreen { signIn ( account . login , account . password ) } LoginProgressDialogScreen { waitForDisappear () } } } \u041f\u0440\u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0438 Scenario \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432, \u043e\u0431\u0449\u0438\u0435 \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0442\u0435\u0441\u0442\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u0434\u0430 \u0442\u0435\u0441\u0442\u0430: @Test fun test () = before { }. after { }. run { step ( \"Some step\" ) { SomeScreen { ... scenario ( MykSignInScenarioWithActivation ( testAccount1 )) ... } } } \u041f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 scenario(MykSignInScenarioWithActivation(testAccount1)) \u0435\u0433\u043e \u0448\u0430\u0433\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u044b \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430.","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Kaspresso Scenario"},{"location":"Tutorial_old/Kaspresso_scenario/#kaspresso-scenario","text":"\u041f\u0440\u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0442\u0435\u0441\u0442\u043e\u0432 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445. \u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u0436\u0435\u043b\u0430\u043d\u0438\u0435 \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0439\u0441\u044f \u043a\u043e\u0434 \u0432 \u043e\u0431\u0449\u0435\u0435 \u043c\u0435\u0441\u0442\u043e. \u042d\u0442\u0438\u043c \u043c\u0435\u0441\u0442\u043e\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 TestCase . \u041c\u044b \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0433\u043e \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 Kaspresso \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 Scenario - \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0448\u0430\u0433\u0438 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445. \u041f\u0440\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 Scenario \u0432 \u0442\u0435\u0441\u0442, \u0448\u0430\u0433\u0438 Scenario \u0431\u0443\u0434\u0443\u0442 \u0432\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0434\u043b\u044f Scenario \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 Login. \u0415\u0441\u043b\u0438 \u0432 \u0431\u043e\u043b\u044c\u0448\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0435\u0441\u0442\u043e\u0432 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432\u0445\u043e\u0434 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0443\u044e\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432 \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u0432 \u043e\u0431\u0449\u0438\u0439 Scenraio. class LoginScenario ( private val account : Account ): Scenario () { override val steps : TestContext < Unit > .() -> Unit = { MainScreen { menuButton { click () } accountIcon { click () } } LoginScreen { signIn ( account . login , account . password ) } LoginProgressDialogScreen { waitForDisappear () } } } \u041f\u0440\u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0438 Scenario \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432, \u043e\u0431\u0449\u0438\u0435 \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0442\u0435\u0441\u0442\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u0434\u0430 \u0442\u0435\u0441\u0442\u0430: @Test fun test () = before { }. after { }. run { step ( \"Some step\" ) { SomeScreen { ... scenario ( MykSignInScenarioWithActivation ( testAccount1 )) ... } } } \u041f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 scenario(MykSignInScenarioWithActivation(testAccount1)) \u0435\u0433\u043e \u0448\u0430\u0433\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u044b \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430.","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Kaspresso Scenario"},{"location":"Tutorial_old/Kaspresso_screenshots/","text":"\u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442-\u0442\u0435\u0441\u0442\u044b \u0432 Kaspresso","title":"\u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442-\u0442\u0435\u0441\u0442\u044b \u0432 Kaspresso"},{"location":"Tutorial_old/Kaspresso_screenshots/#-kaspresso","text":"","title":"\u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442-\u0442\u0435\u0441\u0442\u044b \u0432 Kaspresso"},{"location":"Tutorial_old/Kaspresso_with_allure/","text":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Allure \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Allure \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"Tutorial_old/Kaspresso_with_allure/#allure","text":"","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Allure \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"Tutorial_old/Running_the_first_test/","text":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0440\u043e\u0448\u043b\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e Android Studio, \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u0438 \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso. \u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0435\u0433\u043e \u043f\u0440\u043e\u0433\u043e\u043d \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u041a\u0430\u043a \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0442\u0435\u0441\u0442? \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u0441\u0442\u0430-\u043f\u0440\u0438\u043c\u0435\u0440\u0430 Kaspresso. \u041f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432\u0441\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u0442\u0435\u0441\u0442\u044b. \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0442\u0435\u0441\u0442, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u043a\u0440\u043e\u0435\u043c \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 Tutorial, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c \u0435\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0435\u0433\u043e \u043c\u0435\u043d\u044e Tutorial: \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (\u0430 \u0437\u0430\u0442\u0435\u043c \u0438 \u0442\u0435\u0441\u0442\u044b). \u0412 \u043c\u043e\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - Kasspresso device. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Run: \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u0435\u043b\u043e \u043f\u0440\u043e\u043a\u043b\u0438\u043a\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0447\u0442\u043e\u0431 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c. \u041f\u043e\u0441\u043b\u0435 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442. \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 SimpleTest, \u0434\u0432\u043e\u0439\u043d\u044b\u043c \u043a\u043b\u0438\u043a\u043e\u043c \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u044d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u0441 \u043a\u043e\u0434\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442 \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0441 \u043e\u043f\u0446\u0438\u044f\u043c\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c Run 'Simple test': \u0422\u0435\u0441\u0442 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0438 \u0438\u043d\u0430\u0447\u0435. \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0439 \u043d\u0430\u0448 \u0444\u0430\u0439\u043b \u0441 \u0442\u0435\u0441\u0442\u0430\u043c\u0438, \u043a\u043b\u0438\u043a\u043e\u043c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438 \u043c\u044b\u0448\u0438 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \"Run 'Simple test'\": \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u043b\u043e\u0433\u0438 \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u0441\u0442\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c, \u043a\u0430\u043a \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043a\u0430\u043a \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432\u043e \u0432\u043a\u043b\u0430\u0434\u043a\u0435 Run \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u043c\u0435\u043d\u044e. \u041d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 \u043d\u0438\u0436\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u043f\u0440\u043e\u0448\u0435\u043b \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0412 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435 \u043b\u043e\u0433\u0438 - \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. Kaspresso \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 \u043b\u043e\u0433\u0438 \u0441\u0432\u043e\u0438\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043c\u043e\u0433\u0430\u044e\u0442 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 \u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0430\u0434\u0435\u043d\u0438\u0439. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Logcat \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u043c\u0435\u043d\u044e \u0438 \u043c\u043e\u0436\u0435\u043c \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0442\u0430\u043c \u043b\u043e\u0433\u0438 \u043e\u0442 Kaspresso: \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432 Logcat \u043e\u0442 Kaspresso \u0441\u043c\u0435\u0435\u0448\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438. \u0427\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u043a\u0440\u0443\u0447\u0438\u0432\u0430\u0442\u044c \u0434\u043b\u0438\u043d\u043d\u044b\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043e\u0431\u043e\u0440\u0431\u0430\u0436\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0442 Kaspresso:","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430"},{"location":"Tutorial_old/Running_the_first_test/#_1","text":"\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0440\u043e\u0448\u043b\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e Android Studio, \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u0438 \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso. \u0412 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0435\u0433\u043e \u043f\u0440\u043e\u0433\u043e\u043d \u043d\u0430 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0435, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430"},{"location":"Tutorial_old/Running_the_first_test/#_2","text":"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u0441\u0442\u0430-\u043f\u0440\u0438\u043c\u0435\u0440\u0430 Kaspresso. \u041f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432\u0441\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u0442\u0435\u0441\u0442\u044b. \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0442\u0435\u0441\u0442, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u043a\u0440\u043e\u0435\u043c \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 Kaspresso \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 Tutorial, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c \u0435\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0435\u0433\u043e \u043c\u0435\u043d\u044e Tutorial: \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (\u0430 \u0437\u0430\u0442\u0435\u043c \u0438 \u0442\u0435\u0441\u0442\u044b). \u0412 \u043c\u043e\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - Kasspresso device. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 Run: \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u0435\u043b\u043e \u043f\u0440\u043e\u043a\u043b\u0438\u043a\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0447\u0442\u043e\u0431 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c. \u041f\u043e\u0441\u043b\u0435 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442. \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 SimpleTest, \u0434\u0432\u043e\u0439\u043d\u044b\u043c \u043a\u043b\u0438\u043a\u043e\u043c \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u044d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u0441 \u043a\u043e\u0434\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0442\u0435\u0441\u0442 \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0441 \u043e\u043f\u0446\u0438\u044f\u043c\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c Run 'Simple test': \u0422\u0435\u0441\u0442 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0438 \u0438\u043d\u0430\u0447\u0435. \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0439 \u043d\u0430\u0448 \u0444\u0430\u0439\u043b \u0441 \u0442\u0435\u0441\u0442\u0430\u043c\u0438, \u043a\u043b\u0438\u043a\u043e\u043c \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438 \u043c\u044b\u0448\u0438 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \"Run 'Simple test'\":","title":"\u041a\u0430\u043a \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0442\u0435\u0441\u0442?"},{"location":"Tutorial_old/Running_the_first_test/#_3","text":"\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u0441\u0442\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c, \u043a\u0430\u043a \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043a\u0430\u043a \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432\u043e \u0432\u043a\u043b\u0430\u0434\u043a\u0435 Run \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u043c\u0435\u043d\u044e. \u041d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435 \u043d\u0438\u0436\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u044c, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 \u043f\u0440\u043e\u0448\u0435\u043b \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0412 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435 \u043b\u043e\u0433\u0438 - \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. Kaspresso \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 \u043b\u043e\u0433\u0438 \u0441\u0432\u043e\u0438\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043c\u043e\u0433\u0430\u044e\u0442 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 \u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0430\u0434\u0435\u043d\u0438\u0439. \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0432\u043a\u043b\u0430\u0434\u043a\u0443 Logcat \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u043c\u0435\u043d\u044e \u0438 \u043c\u043e\u0436\u0435\u043c \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0442\u0430\u043c \u043b\u043e\u0433\u0438 \u043e\u0442 Kaspresso: \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432 Logcat \u043e\u0442 Kaspresso \u0441\u043c\u0435\u0435\u0448\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438. \u0427\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u043a\u0440\u0443\u0447\u0438\u0432\u0430\u0442\u044c \u0434\u043b\u0438\u043d\u043d\u044b\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043e\u0431\u043e\u0440\u0431\u0430\u0436\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0442 Kaspresso:","title":"\u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u043b\u043e\u0433\u0438"},{"location":"Tutorial_old/adb_commands/","text":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 adb \u0432 \u0442\u0435\u0441\u0442\u0435 Kaspresso Kaspresso \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u041e\u0431\u0449\u0435\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430 \u0440\u0430\u0431\u043e\u0442\u044b. \u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f adb \u043a\u043e\u043c\u0430\u043d\u0434 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c (\u0438\u043b\u0438 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u043c) \u0438 \u0434\u0435\u043a\u0442\u043e\u043f\u043e\u043c. \u0421\u043f\u0435\u0440\u0432\u0430 \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b adbserver-desktop.jar \u043d\u0430 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u043c \u0433\u0438\u0442\u0445\u0430\u0431\u0435 Kaspresso \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: java - jar < path / to / file >/ adbserver - desktop . jar \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0441\u044f AdbServer - \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0435\u0441\u043a\u0442\u043e\u043f\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f. \u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0434\u0435\u0432\u0430\u0439\u0441 \u0441\u043e\u043e\u0431\u0449\u0438\u0442 \u0434\u0435\u0441\u043a\u0442\u043e\u043f\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u0441\u0442\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c adb \u041d\u0438\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d \u043f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u0441\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 3 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b. class AdbTest : TestCase () { @Test fun serverSampleTest () { run { step ( \"Execute command on host\" ) { val result = adbServer . performCmd ( \"hostname\" ) Assert . assertTrue ( result . isNotEmpty ()) } step ( \"Execute ADB command\" ) { val command = \"undefined_command\" try { adbServer . performAdb ( command ) } catch ( ex : AdbServerException ) { Assert . assertTrue ( \"unknown command $ command \" in ex . message ) } } step ( \"Execute ADB Shell command\" ) { val command = \"pm list packages\" val result = adbServer . performShell ( command ) Assert . assertTrue ( \"package: ${ device . targetContext . packageName } \" in result . first ()) } } } } \u0412 Kaspresso \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 adb \u0435\u0441\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f AdbServer . \u042d\u043a\u0437\u0435\u043c\u043b\u043f\u044f\u0440 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 BaseTestContext \u0438 \u0432 BaseTestCase . \u041d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0442\u0435\u0441\u0442\u0430 AdbTest \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0440\u0435\u0445 \u0432\u0438\u0434\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434: cmd , adb \u0438 adb shell . \u0414\u043b\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0439 AdbServer \u0420\u0430\u0437\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 AdbServer AdbServer \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0444\u043b\u0430\u0433\u0430\u043c\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0430\u043a: java - jar adbserver - desktop . jar - e emulator - 5554 , emulator - 5556 - p 5041 - l VERBOSE \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0444\u043b\u0430\u0433\u0438: e, --emulators \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0445\u0432\u0430\u0442\u0438\u0442\u044c adbserver-desktop.jar (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e adbserver-desktop.jar \u0437\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u044b) p, --port - \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0440\u0442\u0430 adb \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 5037) l, --logs - \u043a\u0430\u043a\u043e\u0439 \u0442\u0438\u043f \u043b\u043e\u0433\u043e\u0432 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e INFO). \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c java -jar adbserver-desktop.jar --help \u0420\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0440\u0435\u0436\u0438\u043c\u044b \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: 1. ERROR - \u0432 \u0432\u044b\u0432\u043e\u0434\u0435 \u0431\u0443\u0434\u0443\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435. ERROR 10 / 09 / 2020 11 : 37 : 19.893 desktop = Desktop - 25920 device = emulator - 5554 message : Incorrect type of the message ... 2. WARN - \u0432 \u0432\u044b\u0432\u043e\u0434\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435. 3. INFO (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e) - \u0432 \u0432\u044b\u0432\u043e\u0434\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u0432\u0441\u0435 \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. INFO 10 / 09 / 2020 11 : 37 : 04.822 desktop = Desktop - 25920 message : Desktop started with arguments : emulators =[] , adbServerPort = null INFO 10 / 09 / 2020 11 : 37 : 19.859 desktop = Desktop - 25920 message : New device has been found : emulator - 5554. Initialize connection to the device ... INFO 10 / 09 / 2020 11 : 37 : 19.892 desktop = Desktop - 25920 device = emulator - 5554 message : The connection establishment to device started INFO 10 / 09 / 2020 11 : 37 : 19.893 desktop = Desktop - 25920 device = emulator - 5554 message : WatchdogThread is started from Desktop to Device INFO 10 / 09 / 2020 11 : 37 : 19.893 desktop = Desktop - 25920 device = emulator - 5554 message : Desktop tries to connect to the Device . It may take time because the device can be not ready . Possible reason : a kaspresso test has not been started INFO 10 / 09 / 2020 11 : 37 : 20.185 desktop = Desktop - 25920 device = emulator - 5554 message : The attempt to connect to Device was success INFO 10 / 09 / 2020 11 : 44 : 47.810 desktop = Desktop - 25920 device = emulator - 5554 message : The received command to execute : AdbCommand ( body = shell input text abc ) INFO 10 / 09 / 2020 11 : 44 : 49.115 desktop = Desktop - 25920 device = emulator - 5554 message : The executed command : AdbCommand ( body = shell input text abc ). The result : CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 25920 ) 4. VERBOSE - \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438 Desktop-\u0447\u0430\u0441\u0442\u0438 AdbServer). \u0412\u0437\u0433\u043b\u044f\u043d\u0438\u0442\u0435 \u043d\u0430 \u043b\u043e\u0433\u0438, \u043e\u0442\u0440\u0430\u0436\u0430\u044e\u0449\u0438\u0435 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u044b\u0448\u0435 (\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b). INFO 10 / 09 / 2020 11 : 48 : 16.850 desktop = Desktop - 27398 tag = MainKt method = main message : Desktop started with arguments : emulators =[] , adbServerPort = null DEBUG 10 / 09 / 2020 11 : 48 : 16.853 desktop = Desktop - 27398 tag = Desktop method = startDevicesObserving message : start INFO 10 / 09 / 2020 11 : 48 : 16.913 desktop = Desktop - 27398 tag = Desktop method = startDevicesObserving message : New device has been found : emulator - 5554. Initialize connection to the device ... DEBUG 10 / 09 / 2020 11 : 48 : 16.918 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = getDesktopSocketLoad message : calculated desktop client port = 21234 DEBUG 10 / 09 / 2020 11 : 48 : 16.918 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = forwardPorts message : fromPort = 21234 , toPort = 8500 started DEBUG 10 / 09 / 2020 11 : 48 : 16.919 desktop = Desktop - 27398 device = emulator - 5554 tag = CommandExecutorImpl method = execute message : The created adbCommand = adb - s emulator - 5554 forward tcp : 21234 tcp : 8500 DEBUG 10 / 09 / 2020 11 : 48 : 16.925 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = forwardPorts message : fromPort = 21234 , toPort = 8500 ) finished with result = CommandResult ( status = SUCCESS , description = exitCode = 0 , message = 21234 , serviceInfo = The command was executed on desktop = Desktop - 27398 ) DEBUG 10 / 09 / 2020 11 : 48 : 16.925 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = getDesktopSocketLoad message : desktop client port = 21234 is forwarding with device server port = 8500 INFO 10 / 09 / 2020 11 : 48 : 16.927 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror method = startConnectionToDevice message : The connection establishment to device started INFO 10 / 09 / 2020 11 : 48 : 16.928 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : WatchdogThread is started from Desktop to Device DEBUG 10 / 09 / 2020 11 : 48 : 16.928 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device . It may take time because the device can be not ready ( for example , a kaspresso test was not started ). INFO 10 / 09 / 2020 11 : 48 : 16.928 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : Desktop tries to connect to the Device . It may take time because the device can be not ready . Possible reason : a kaspresso test has not been started DEBUG 10 / 09 / 2020 11 : 48 : 16.929 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket method = tryConnect message : Start the process DEBUG 10 / 09 / 2020 11 : 48 : 16.929 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionMaker method = connect message : Start a connection establishment . The current state = DISCONNECTED DEBUG 10 / 09 / 2020 11 : 48 : 16.929 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionMaker method = connect message : The current state = CONNECTING DEBUG 10 / 09 / 2020 11 : 48 : 16.930 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : started with ip = 127.0 . 0.1 , port = 21234 DEBUG 10 / 09 / 2020 11 : 48 : 16.938 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : completed with ip = 127.0 . 0.1 , port = 21234 DEBUG 10 / 09 / 2020 11 : 48 : 16.941 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = prepareListening message : Start DEBUG 10 / 09 / 2020 11 : 48 : 16.948 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = prepareListening message : IO Streams were created DEBUG 10 / 09 / 2020 11 : 48 : 16.948 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionMaker method = connect message : The connection is established . The current state = CONNECTED DEBUG 10 / 09 / 2020 11 : 48 : 16.948 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket $ tryConnect $ 2 method = invoke message : The connection is ready . Start messages listening DEBUG 10 / 09 / 2020 11 : 48 : 16.949 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = startListening message : Started INFO 10 / 09 / 2020 11 : 48 : 16.949 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device was success DEBUG 10 / 09 / 2020 11 : 48 : 16.949 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring $ MessagesListeningThread method = run message : Start listening DEBUG 10 / 09 / 2020 11 : 48 : 24.132 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = peekNextMessage message : The message = TaskMessage ( command = AdbCommand ( body = shell input text abc )) INFO 10 / 09 / 2020 11 : 48 : 24.132 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ Companion $ create $ connectionServerLifecycle $ 1 method = onReceivedTask message : The received command to execute : AdbCommand ( body = shell input text abc ) DEBUG 10 / 09 / 2020 11 : 48 : 24.132 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket $ handleMessages $ 1 method = invoke message : Received taskMessage = TaskMessage ( command = AdbCommand ( body = shell input text abc )) DEBUG 10 / 09 / 2020 11 : 48 : 24.133 desktop = Desktop - 27398 device = emulator - 5554 tag = CommandExecutorImpl method = execute message : The created adbCommand = adb - s emulator - 5554 shell input text abc INFO 10 / 09 / 2020 11 : 48 : 24.389 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ Companion $ create $ connectionServerLifecycle $ 1 method = onExecutedTask message : The executed command : AdbCommand ( body = shell input text abc ). The result : CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 27398 ) DEBUG 10 / 09 / 2020 11 : 48 : 24.389 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket $ handleMessages $ 1 $ 1 method = run message : Result of taskMessage = TaskMessage ( command = AdbCommand ( body = shell input text abc )) => result = CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 27398 ) DEBUG 10 / 09 / 2020 11 : 48 : 24.389 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = sendMessage message : Input sendModel = ResultMessage ( command = AdbCommand ( body = shell input text abc ), data = CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 27398 )) 5. DEBUG - \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439, \u043a\u0430\u043a VERBOSE, \u043d\u043e \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u0441\u0442\u0440\u043e\u043a (\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u0432 \u043e\u0434\u043d\u0443 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0439). DEBUG 10 / 09 / 2020 12 : 11 : 37.006 desktop = Desktop - 30548 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device . It may take time because the device can be not ready ( for example , a kaspresso test was not started ). DEBUG 10 / 09 / 2020 12 : 11 : 44.063 desktop = Desktop - 30548 device = emulator - 5554 tag = ServiceInfo method = Start message : ////////////////////////////////////////FRAGMENT IS REPEATED 7 TIMES//////////////////////////////////////// DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionServerImplBySocket method = tryConnect message : Start the process DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : Start a connection establishment . The current state = DISCONNECTED DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : The current state = CONNECTING DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : started with ip = 127.0 . 0.1 , port = 37110 DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : completed with ip = 127.0 . 0.1 , port = 37110 DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = SocketMessagesTransferring method = prepareListening message : Start DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : The connection establishment process failed . The current state = DISCONNECTED DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionServerImplBySocket $ tryConnect $ 3 method = invoke message : The connection establishment attempt failed . The most possible reason is the opposite socket is not ready yet DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device . It may take time because the device can be not ready ( for example , a kaspresso test was not started ). DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ServiceInfo method = End message : //////////////////////////////////////////////////////////////////////////////////////////////////// DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionServerImplBySocket method = tryConnect message : Start the process DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : Start a connection establishment . The current state = DISCONNECTED","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 adb \u0432 \u0442\u0435\u0441\u0442\u0435 Kaspresso"},{"location":"Tutorial_old/adb_commands/#adb-kaspresso","text":"Kaspresso \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b.","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 adb \u0432 \u0442\u0435\u0441\u0442\u0435 Kaspresso"},{"location":"Tutorial_old/adb_commands/#_1","text":"\u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f adb \u043a\u043e\u043c\u0430\u043d\u0434 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e\u043c (\u0438\u043b\u0438 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u043c) \u0438 \u0434\u0435\u043a\u0442\u043e\u043f\u043e\u043c. \u0421\u043f\u0435\u0440\u0432\u0430 \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b adbserver-desktop.jar \u043d\u0430 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u043c \u0433\u0438\u0442\u0445\u0430\u0431\u0435 Kaspresso \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: java - jar < path / to / file >/ adbserver - desktop . jar \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0441\u044f AdbServer - \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0435\u0441\u043a\u0442\u043e\u043f\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f. \u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0442\u0435\u0441\u0442\u0430 \u0434\u0435\u0432\u0430\u0439\u0441 \u0441\u043e\u043e\u0431\u0449\u0438\u0442 \u0434\u0435\u0441\u043a\u0442\u043e\u043f\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 adb \u043a\u043e\u043c\u0430\u043d\u0434\u044b.","title":"\u041e\u0431\u0449\u0435\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430 \u0440\u0430\u0431\u043e\u0442\u044b."},{"location":"Tutorial_old/adb_commands/#adb","text":"\u041d\u0438\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d \u043f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u0441\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 3 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b. class AdbTest : TestCase () { @Test fun serverSampleTest () { run { step ( \"Execute command on host\" ) { val result = adbServer . performCmd ( \"hostname\" ) Assert . assertTrue ( result . isNotEmpty ()) } step ( \"Execute ADB command\" ) { val command = \"undefined_command\" try { adbServer . performAdb ( command ) } catch ( ex : AdbServerException ) { Assert . assertTrue ( \"unknown command $ command \" in ex . message ) } } step ( \"Execute ADB Shell command\" ) { val command = \"pm list packages\" val result = adbServer . performShell ( command ) Assert . assertTrue ( \"package: ${ device . targetContext . packageName } \" in result . first ()) } } } } \u0412 Kaspresso \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 adb \u0435\u0441\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f AdbServer . \u042d\u043a\u0437\u0435\u043c\u043b\u043f\u044f\u0440 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 BaseTestContext \u0438 \u0432 BaseTestCase . \u041d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0442\u0435\u0441\u0442\u0430 AdbTest \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0440\u0435\u0445 \u0432\u0438\u0434\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434: cmd , adb \u0438 adb shell . \u0414\u043b\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0439 AdbServer","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u0441\u0442\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c adb"},{"location":"Tutorial_old/adb_commands/#adbserver","text":"AdbServer \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0444\u043b\u0430\u0433\u0430\u043c\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0430\u043a: java - jar adbserver - desktop . jar - e emulator - 5554 , emulator - 5556 - p 5041 - l VERBOSE \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0444\u043b\u0430\u0433\u0438: e, --emulators \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0445\u0432\u0430\u0442\u0438\u0442\u044c adbserver-desktop.jar (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e adbserver-desktop.jar \u0437\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u044d\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u044b) p, --port - \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0440\u0442\u0430 adb \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 5037) l, --logs - \u043a\u0430\u043a\u043e\u0439 \u0442\u0438\u043f \u043b\u043e\u0433\u043e\u0432 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e INFO). \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c java -jar adbserver-desktop.jar --help","title":"\u0420\u0430\u0437\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 AdbServer"},{"location":"Tutorial_old/adb_commands/#_2","text":"1. ERROR - \u0432 \u0432\u044b\u0432\u043e\u0434\u0435 \u0431\u0443\u0434\u0443\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435. ERROR 10 / 09 / 2020 11 : 37 : 19.893 desktop = Desktop - 25920 device = emulator - 5554 message : Incorrect type of the message ... 2. WARN - \u0432 \u0432\u044b\u0432\u043e\u0434\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435. 3. INFO (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e) - \u0432 \u0432\u044b\u0432\u043e\u0434\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u0432\u0441\u0435 \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. INFO 10 / 09 / 2020 11 : 37 : 04.822 desktop = Desktop - 25920 message : Desktop started with arguments : emulators =[] , adbServerPort = null INFO 10 / 09 / 2020 11 : 37 : 19.859 desktop = Desktop - 25920 message : New device has been found : emulator - 5554. Initialize connection to the device ... INFO 10 / 09 / 2020 11 : 37 : 19.892 desktop = Desktop - 25920 device = emulator - 5554 message : The connection establishment to device started INFO 10 / 09 / 2020 11 : 37 : 19.893 desktop = Desktop - 25920 device = emulator - 5554 message : WatchdogThread is started from Desktop to Device INFO 10 / 09 / 2020 11 : 37 : 19.893 desktop = Desktop - 25920 device = emulator - 5554 message : Desktop tries to connect to the Device . It may take time because the device can be not ready . Possible reason : a kaspresso test has not been started INFO 10 / 09 / 2020 11 : 37 : 20.185 desktop = Desktop - 25920 device = emulator - 5554 message : The attempt to connect to Device was success INFO 10 / 09 / 2020 11 : 44 : 47.810 desktop = Desktop - 25920 device = emulator - 5554 message : The received command to execute : AdbCommand ( body = shell input text abc ) INFO 10 / 09 / 2020 11 : 44 : 49.115 desktop = Desktop - 25920 device = emulator - 5554 message : The executed command : AdbCommand ( body = shell input text abc ). The result : CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 25920 ) 4. VERBOSE - \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438 Desktop-\u0447\u0430\u0441\u0442\u0438 AdbServer). \u0412\u0437\u0433\u043b\u044f\u043d\u0438\u0442\u0435 \u043d\u0430 \u043b\u043e\u0433\u0438, \u043e\u0442\u0440\u0430\u0436\u0430\u044e\u0449\u0438\u0435 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u044b\u0448\u0435 (\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b). INFO 10 / 09 / 2020 11 : 48 : 16.850 desktop = Desktop - 27398 tag = MainKt method = main message : Desktop started with arguments : emulators =[] , adbServerPort = null DEBUG 10 / 09 / 2020 11 : 48 : 16.853 desktop = Desktop - 27398 tag = Desktop method = startDevicesObserving message : start INFO 10 / 09 / 2020 11 : 48 : 16.913 desktop = Desktop - 27398 tag = Desktop method = startDevicesObserving message : New device has been found : emulator - 5554. Initialize connection to the device ... DEBUG 10 / 09 / 2020 11 : 48 : 16.918 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = getDesktopSocketLoad message : calculated desktop client port = 21234 DEBUG 10 / 09 / 2020 11 : 48 : 16.918 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = forwardPorts message : fromPort = 21234 , toPort = 8500 started DEBUG 10 / 09 / 2020 11 : 48 : 16.919 desktop = Desktop - 27398 device = emulator - 5554 tag = CommandExecutorImpl method = execute message : The created adbCommand = adb - s emulator - 5554 forward tcp : 21234 tcp : 8500 DEBUG 10 / 09 / 2020 11 : 48 : 16.925 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = forwardPorts message : fromPort = 21234 , toPort = 8500 ) finished with result = CommandResult ( status = SUCCESS , description = exitCode = 0 , message = 21234 , serviceInfo = The command was executed on desktop = Desktop - 27398 ) DEBUG 10 / 09 / 2020 11 : 48 : 16.925 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl method = getDesktopSocketLoad message : desktop client port = 21234 is forwarding with device server port = 8500 INFO 10 / 09 / 2020 11 : 48 : 16.927 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror method = startConnectionToDevice message : The connection establishment to device started INFO 10 / 09 / 2020 11 : 48 : 16.928 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : WatchdogThread is started from Desktop to Device DEBUG 10 / 09 / 2020 11 : 48 : 16.928 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device . It may take time because the device can be not ready ( for example , a kaspresso test was not started ). INFO 10 / 09 / 2020 11 : 48 : 16.928 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : Desktop tries to connect to the Device . It may take time because the device can be not ready . Possible reason : a kaspresso test has not been started DEBUG 10 / 09 / 2020 11 : 48 : 16.929 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket method = tryConnect message : Start the process DEBUG 10 / 09 / 2020 11 : 48 : 16.929 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionMaker method = connect message : Start a connection establishment . The current state = DISCONNECTED DEBUG 10 / 09 / 2020 11 : 48 : 16.929 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionMaker method = connect message : The current state = CONNECTING DEBUG 10 / 09 / 2020 11 : 48 : 16.930 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : started with ip = 127.0 . 0.1 , port = 21234 DEBUG 10 / 09 / 2020 11 : 48 : 16.938 desktop = Desktop - 27398 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : completed with ip = 127.0 . 0.1 , port = 21234 DEBUG 10 / 09 / 2020 11 : 48 : 16.941 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = prepareListening message : Start DEBUG 10 / 09 / 2020 11 : 48 : 16.948 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = prepareListening message : IO Streams were created DEBUG 10 / 09 / 2020 11 : 48 : 16.948 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionMaker method = connect message : The connection is established . The current state = CONNECTED DEBUG 10 / 09 / 2020 11 : 48 : 16.948 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket $ tryConnect $ 2 method = invoke message : The connection is ready . Start messages listening DEBUG 10 / 09 / 2020 11 : 48 : 16.949 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = startListening message : Started INFO 10 / 09 / 2020 11 : 48 : 16.949 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device was success DEBUG 10 / 09 / 2020 11 : 48 : 16.949 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring $ MessagesListeningThread method = run message : Start listening DEBUG 10 / 09 / 2020 11 : 48 : 24.132 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = peekNextMessage message : The message = TaskMessage ( command = AdbCommand ( body = shell input text abc )) INFO 10 / 09 / 2020 11 : 48 : 24.132 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ Companion $ create $ connectionServerLifecycle $ 1 method = onReceivedTask message : The received command to execute : AdbCommand ( body = shell input text abc ) DEBUG 10 / 09 / 2020 11 : 48 : 24.132 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket $ handleMessages $ 1 method = invoke message : Received taskMessage = TaskMessage ( command = AdbCommand ( body = shell input text abc )) DEBUG 10 / 09 / 2020 11 : 48 : 24.133 desktop = Desktop - 27398 device = emulator - 5554 tag = CommandExecutorImpl method = execute message : The created adbCommand = adb - s emulator - 5554 shell input text abc INFO 10 / 09 / 2020 11 : 48 : 24.389 desktop = Desktop - 27398 device = emulator - 5554 tag = DeviceMirror $ Companion $ create $ connectionServerLifecycle $ 1 method = onExecutedTask message : The executed command : AdbCommand ( body = shell input text abc ). The result : CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 27398 ) DEBUG 10 / 09 / 2020 11 : 48 : 24.389 desktop = Desktop - 27398 device = emulator - 5554 tag = ConnectionServerImplBySocket $ handleMessages $ 1 $ 1 method = run message : Result of taskMessage = TaskMessage ( command = AdbCommand ( body = shell input text abc )) => result = CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 27398 ) DEBUG 10 / 09 / 2020 11 : 48 : 24.389 desktop = Desktop - 27398 device = emulator - 5554 tag = SocketMessagesTransferring method = sendMessage message : Input sendModel = ResultMessage ( command = AdbCommand ( body = shell input text abc ), data = CommandResult ( status = SUCCESS , description = exitCode = 0 , message = , serviceInfo = The command was executed on desktop = Desktop - 27398 )) 5. DEBUG - \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439, \u043a\u0430\u043a VERBOSE, \u043d\u043e \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u0441\u0442\u0440\u043e\u043a (\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u0432 \u043e\u0434\u043d\u0443 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0439). DEBUG 10 / 09 / 2020 12 : 11 : 37.006 desktop = Desktop - 30548 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device . It may take time because the device can be not ready ( for example , a kaspresso test was not started ). DEBUG 10 / 09 / 2020 12 : 11 : 44.063 desktop = Desktop - 30548 device = emulator - 5554 tag = ServiceInfo method = Start message : ////////////////////////////////////////FRAGMENT IS REPEATED 7 TIMES//////////////////////////////////////// DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionServerImplBySocket method = tryConnect message : Start the process DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : Start a connection establishment . The current state = DISCONNECTED DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : The current state = CONNECTING DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : started with ip = 127.0 . 0.1 , port = 37110 DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = DesktopDeviceSocketConnectionForwardImpl $ getDesktopSocketLoad $ 1 method = invoke message : completed with ip = 127.0 . 0.1 , port = 37110 DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = SocketMessagesTransferring method = prepareListening message : Start DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : The connection establishment process failed . The current state = DISCONNECTED DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionServerImplBySocket $ tryConnect $ 3 method = invoke message : The connection establishment attempt failed . The most possible reason is the opposite socket is not ready yet DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = DeviceMirror $ WatchdogThread method = run message : The attempt to connect to Device . It may take time because the device can be not ready ( for example , a kaspresso test was not started ). DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ServiceInfo method = End message : //////////////////////////////////////////////////////////////////////////////////////////////////// DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionServerImplBySocket method = tryConnect message : Start the process DEBUG 10 / 09 / 2020 12 : 11 : 44.064 desktop = Desktop - 30548 device = emulator - 5554 tag = ConnectionMaker method = connect message : Start a connection establishment . The current state = DISCONNECTED","title":"\u0420\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0440\u0435\u0436\u0438\u043c\u044b \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"Tutorial_old/off-screen_work/","text":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u0440\u0430\u043c\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0432\u043d\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (\u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u0430\u0436\u0430\u0442\u044c \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u0442\u0443\u043b\u0431\u0430\u0440\u0435, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u044b\u0445 \u043e\u043a\u043e\u043d). \u0414\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 Kaspresso \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442 KAutomator - \u043e\u0431\u0435\u0440\u0442\u043a\u0443 \u043d\u0430\u0434 UiAutomator. KAutomator - \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 DSL \u0434\u043b\u044f UI Automator \u043d\u0430 Kotlin, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0439 \u0443\u0441\u043a\u043e\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 UI Automator. \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0442\u0435\u0441\u0442, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0438 Google play. \u041a\u0430\u043a \u0438 \u0434\u043b\u044f \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430, \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Screen \u0441\u043b\u0435\u0434\u0443\u044f \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0443 PageObject . GplayScreen \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 UiScreen object GplayScreen : UiScreen < GplayScreen > () { override val packageName : String = \"com.android.vending\" val signInButton get () = UiButton { withText ( \".*Sign in.*|.*\u0412\u043e\u0439\u0442\u0438.*\" . toPattern ( Pattern . CASE_INSENSITIVE )) } } \u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 packageName \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f GplayScreen \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043f\u0430\u043a\u0435\u0442\u043e\u043c \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0442\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u0432\u044b\u044f\u0441\u043d\u0435\u043d\u0438\u044f \u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f Android Monitor \u0438\u0437 Android SDK \u0417\u0430\u0442\u0435\u043c \u0434\u0435\u043a\u043b\u0430\u0440\u0438\u0440\u0443\u0435\u043c UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043d\u0443\u0436\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u0438\u0441\u043a \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c matcher-\u043e\u0432. UiAutomator \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 View: * UiView * UiEditText * UiTextView * UiButton * UiCheckbox * UiChipGroup * UiSwitchView * UiScrollView * and more \u041a\u0430\u043a \u0438 \u0441 UiAutomator \u043c\u043e\u0436\u043d\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e matcher-\u043e\u0432 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043d\u0443\u0436\u043d\u043e\u0439 View: val email = UiEditText { withId ( this @FormScreen.packageName , \"email\" ) withText ( this @FormScreen.packageName , \"matsyuk@kaspresso.com\" ) } \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 3 \u0448\u0430\u0433\u043e\u0432: * \u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play * \u041e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 class GplayTest : TestCase () { @Test fun testNotSignedIn () = run { step ( \"forceStop Gplay application\" ) { adbServer . performShell ( \"am force-stop $ GPLAY_PACKAGE \" ) adbServer . performShell ( \"pm clear $ GPLAY_PACKAGE \" ) } step ( \"open Gplay app\" ) { with ( device . targetContext ) { val intent = packageManager . getLaunchIntentForPackage ( GPLAY_PACKAGE ) startActivity ( intent ) } device . uiDevice . waitForIdle () } step ( \"verify sign in needed\" ) { GplayScreen { signInButton . isDisplayed () } } } companion object { private const val GPLAY_PACKAGE = \"com.android.vending\" } } \u0414\u043b\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0439 AdbServer \u0420\u0430\u0431\u043e\u0442\u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0448\u0430\u0433\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0442\u044c (\u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0441 adbServer \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 adb \u0432 \u0442\u0435\u0441\u0442\u0435 Kaspresso ). \u0412\u044b\u0437\u043e\u0432 device.targetContext \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u0442 \u043a\u043e\u0442\u0435\u043a\u0441\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play. UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443. \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0438\u0434\u043e\u0432 matcher-\u043e\u0432: * withId * withText * withPackage * withContentDescription * textStartsWith * and more \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c, \u043f\u043e \u043a\u0430\u043a\u0438\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043d\u0443\u0436\u043d\u043e\u043c\u0443 UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443, \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f Layout Inspector \u0438 Uiautomatorviewer \u0432 Android Studio","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u0440\u0430\u043c\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},{"location":"Tutorial_old/off-screen_work/#_1","text":"\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0432\u043d\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (\u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u0430\u0436\u0430\u0442\u044c \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u0442\u0443\u043b\u0431\u0430\u0440\u0435, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u044b\u0445 \u043e\u043a\u043e\u043d). \u0414\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 Kaspresso \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442 KAutomator - \u043e\u0431\u0435\u0440\u0442\u043a\u0443 \u043d\u0430\u0434 UiAutomator. KAutomator - \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 DSL \u0434\u043b\u044f UI Automator \u043d\u0430 Kotlin, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0439 \u0443\u0441\u043a\u043e\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 UI Automator.","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u0440\u0430\u043c\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},{"location":"Tutorial_old/off-screen_work/#google-play","text":"\u041a\u0430\u043a \u0438 \u0434\u043b\u044f \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430, \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Screen \u0441\u043b\u0435\u0434\u0443\u044f \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0443 PageObject . GplayScreen \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 UiScreen object GplayScreen : UiScreen < GplayScreen > () { override val packageName : String = \"com.android.vending\" val signInButton get () = UiButton { withText ( \".*Sign in.*|.*\u0412\u043e\u0439\u0442\u0438.*\" . toPattern ( Pattern . CASE_INSENSITIVE )) } } \u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 packageName \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f GplayScreen \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043f\u0430\u043a\u0435\u0442\u043e\u043c \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0442\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u0432\u044b\u044f\u0441\u043d\u0435\u043d\u0438\u044f \u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f Android Monitor \u0438\u0437 Android SDK \u0417\u0430\u0442\u0435\u043c \u0434\u0435\u043a\u043b\u0430\u0440\u0438\u0440\u0443\u0435\u043c UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043d\u0443\u0436\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u0438\u0441\u043a \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c matcher-\u043e\u0432. UiAutomator \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 View: * UiView * UiEditText * UiTextView * UiButton * UiCheckbox * UiChipGroup * UiSwitchView * UiScrollView * and more \u041a\u0430\u043a \u0438 \u0441 UiAutomator \u043c\u043e\u0436\u043d\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e matcher-\u043e\u0432 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043d\u0443\u0436\u043d\u043e\u0439 View: val email = UiEditText { withId ( this @FormScreen.packageName , \"email\" ) withText ( this @FormScreen.packageName , \"matsyuk@kaspresso.com\" ) }","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0442\u0435\u0441\u0442, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0438 Google play."},{"location":"Tutorial_old/off-screen_work/#_2","text":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435 \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 3 \u0448\u0430\u0433\u043e\u0432: * \u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play * \u041e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 class GplayTest : TestCase () { @Test fun testNotSignedIn () = run { step ( \"forceStop Gplay application\" ) { adbServer . performShell ( \"am force-stop $ GPLAY_PACKAGE \" ) adbServer . performShell ( \"pm clear $ GPLAY_PACKAGE \" ) } step ( \"open Gplay app\" ) { with ( device . targetContext ) { val intent = packageManager . getLaunchIntentForPackage ( GPLAY_PACKAGE ) startActivity ( intent ) } device . uiDevice . waitForIdle () } step ( \"verify sign in needed\" ) { GplayScreen { signInButton . isDisplayed () } } } companion object { private const val GPLAY_PACKAGE = \"com.android.vending\" } } \u0414\u043b\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0439 AdbServer \u0420\u0430\u0431\u043e\u0442\u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0448\u0430\u0433\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0442\u044c (\u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0441 adbServer \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 adb \u0432 \u0442\u0435\u0441\u0442\u0435 Kaspresso ). \u0412\u044b\u0437\u043e\u0432 device.targetContext \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u0442 \u043a\u043e\u0442\u0435\u043a\u0441\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Google Play. UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443. \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0438\u0434\u043e\u0432 matcher-\u043e\u0432: * withId * withText * withPackage * withContentDescription * textStartsWith * and more \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c, \u043f\u043e \u043a\u0430\u043a\u0438\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043d\u0443\u0436\u043d\u043e\u043c\u0443 UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443, \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f Layout Inspector \u0438 Uiautomatorviewer \u0432 Android Studio","title":"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430"},{"location":"Tutorial_old/other/","text":"\u0418\u043c\u0435\u044f \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0434\u0443 Tutorial \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u0447\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0439 \u043d\u0430\u0441 \u044d\u043a\u0440\u0430\u043d \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0432 SimpleActivity , \u0430 \u0441\u0430\u043c\u0430 \u0432\u0435\u0440\u0441\u0442\u043a\u0430 \u043b\u0435\u0436\u0438\u0442 \u0432 \u0444\u0430\u0439\u043b\u0435 activity_simple . \u041f\u043e\u044d\u0442\u043e\u043c\u0443, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f white-box \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c (\u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435 \u043f\u0440\u043e \u044d\u0442\u043e\u0442 \u0442\u0438\u043f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c \u0437\u0434\u0435\u0441\u044c ). \u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (black-box) \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445. \u0415\u0441\u043b\u0438 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442 \u043f\u0438\u0448\u0435\u0442 \u0442\u043e\u0442 \u0436\u0435 \u0447\u0435\u043b\u043e\u0432\u0435\u043a, \u043a\u0442\u043e \u0438 \u043f\u0438\u0441\u0430\u043b \u043a\u043e\u0434 \u0441\u0430\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0442\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0443\u0442\u044c \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u0432 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0432\u044b\u0448\u0435 id \u0432 \u043c\u0435\u0442\u043e\u0434\u0430\u0445 withId , layoutId \u0438 viewClass . \u0412 \u043d\u0430\u0448\u0435\u043c \u0436\u0435 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0434 Tutorial \u0431\u044b\u043b \u043d\u0430\u043f\u0438\u0441\u0430\u043d \u0434\u043e \u043d\u0430\u0441, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0430\u043c \u0432\u0430\u0436\u043d\u043e \u043f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a \u0438\u0445 \u043d\u0430\u0439\u0442\u0438. \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 Layout inspector \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435, \u0443\u0437\u043d\u0430\u0442\u044c id \u043d\u0443\u0436\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c, \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0438\u0441\u043a\u043e\u043c \u043f\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0443 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0444\u0430\u0439\u043b\u044b layoutId \u0438 viewClass , \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 id . \u041f\u043e\u0434\u0445\u043e\u0434 PageObject \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432 \u043c\u0435\u0436\u0434\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c\u0438 \u0442\u0435\u0441\u0442\u043e\u0432: \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u044b Screen \u0434\u043b\u044f \u043d\u0443\u0436\u043d\u044b\u0445 \u044d\u043a\u0440\u0430\u043d\u043e\u0432 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0430 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432 \u043f\u043e \u0433\u043e\u0442\u043e\u0432\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u044d\u043a\u0440\u0430\u043d\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u043a\u0435\u0439\u0441\u044b. \u0414\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043d\u0443\u0436\u043d\u043e\u0433\u043e View \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0440\u0430\u0437\u0443 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e matcher-\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0443 \u043a\u0430\u043a\u043e\u0433\u043e-\u0442\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043d\u0435\u0442 id , \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0439\u0442\u0438 \u0435\u0433\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 matcher-\u043e\u0432. \u0412 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 SimpleScreen \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b layoutId \u0438 ViewClass . \u0415\u0441\u043b\u0438 \u0438\u0445 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043d\u0435 \u043f\u0440\u043e\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c null ), \u0442\u043e \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u0430 \u044d\u0442\u043e \u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0435 \u0431\u0443\u0434\u0435\u0442. \u041d\u043e \u043c\u044b \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043d\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0438 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \u042d\u0442\u043e \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0438 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c, \u0441 \u043a\u0430\u043a\u0438\u043c ViewClass \u0438 layoutId \u0441\u0432\u044f\u0437\u0430\u043d \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 Screen. \u041e\u0431\u0440\u0430\u0449\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043d\u0430\u043c\u0438 \u0432\u044b\u0448\u0435 PageObject-\u0443 SimpleScreen . \u0423 \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u044b \u043e\u0431\u044a\u044f\u0432\u0438\u043b\u0438 \u043f\u043e\u043b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 title . \u0412\u043d\u0443\u0442\u0440\u0438 \u0431\u043b\u043e\u043a\u0430 title{ } \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b. \u0421\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0442 \u043c\u0435\u0442\u043e\u0434\u044b isVisible() \u0438 hasText() . \u042d\u043b\u0435\u043c\u0435\u043d\u0442 title \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d \u0441 \u0442\u0438\u043f\u043e\u043c KTextView . \u042d\u0442\u043e \u043a\u043b\u0430\u0441\u0441-\u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u0432 Kaspresso , \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b TextViewActions \u0438 TextViewAssertions . \u041f\u0435\u0440\u0432\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u043d\u0430\u0434 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c, \u0430 \u0432\u0442\u043e\u0440\u043e\u0439 - \u043d\u0430\u0431\u043e\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u0434 \u044d\u0442\u0438\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432, \u0438\u0445 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u0430\u043c \u0442\u0435\u0441\u0442. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430 Page object \u0438 Kotlin DSL \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u044b\u043c \u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c: \u0441\u043f\u0435\u0440\u0432\u0430 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043b\u0438 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0443\u0436\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0437\u0430\u0442\u0435\u043c \u0432\u0432\u0435\u043b\u0438 \u0442\u0435\u043a\u0441\u0442 \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430, \u043d\u0430\u0436\u0430\u043b\u0438 \u043a\u043d\u043e\u043f\u043a\u0443 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043b\u0438, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0441\u044f. \u041e\u0434\u043d\u0430\u043a\u043e, \u043a\u043e\u0434 \u043b\u044e\u0431\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 - \u044d\u0442\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0442\u0435\u0441\u0442-\u043a\u0435\u0439\u0441\u043e\u0432. \u0421\u0430\u043c \u0436\u0435 \u0442\u0435\u0441\u0442-\u043a\u0435\u0439\u0441 - \u044d\u0442\u043e \u043d\u0435\u043a\u0438\u0439 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 (\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0448\u0430\u0433\u043e\u0432), \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u0447\u0435\u043b\u043e\u0432\u0435\u0447\u0435\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u043e\u043c. \u042d\u0442\u043e\u0442 \u043d\u0430\u0431\u043e\u0440 \u0448\u0430\u0433\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043f\u0443\u0441\u0442\u044f \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043d\u043e\u0441\u0442\u044c \u0432 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u043c\u0438\u043c\u043e \u044d\u0442\u043e\u0433\u043e, \u0442\u0435\u0441\u0442 \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u0427\u0442\u043e\u0431\u044b \u0442\u0435\u0441\u0442 \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u043a\u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0438 \u043e\u043d \u043e\u0441\u0442\u0430\u0432\u0430\u043b\u0441\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u0441\u043f\u0443\u0441\u0442\u044f \u0434\u043e\u043b\u0433\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u043e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d \u043d\u0430 \u0448\u0430\u0433\u0438, \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0432 \u0442\u0435\u0441\u0442-\u043a\u0435\u0439\u0441\u0430\u0445. \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0431\u0443\u0434\u0443\u0442 \u043d\u0435 \u0441\u0430\u043c\u044b\u043c \u043b\u0443\u0447\u0448\u0438\u043c \u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u043b\u043e\u0433\u0430\u0445 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u0448\u0430\u0433\u0435 \u0443\u043f\u0430\u043b \u0442\u0435\u0441\u0442. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 Kaspresso (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, step() ). class SimpleTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < SimpleActivity > () @Test fun test () = before { }. after { }. run { step ( \"Open Simple Screen\" ) { SimpleScreen { title { isVisible () hasText ( R . string . simple_activity_default_title ) hasTextColor ( R . color . black ) } button { isVisible () withText ( R . string . simple_activity_change_title_button ) isClickable () } input { isVisible () hasHint ( R . string . simple_activity_input_hint ) hasEmptyText () } } } step ( \"Type \\\" Kaspresso \\\"\" ) { SimpleScreen { input . typeText ( \"Kaspresso\" ) closeSoftKeyboard () button . click () } } step ( \"Check title content\" ) { SimpleScreen { title . hasText ( \"Kaspresso\" ) } } } } \u0423 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u043e\u0438 \u043f\u0440\u0435\u0434\u0443\u0441\u043b\u043e\u0432\u0438\u044f (\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0434\u0435\u0432\u0430\u0439\u0441\u0430), \u0430 \u043f\u043e\u0441\u043b\u0435 \u0435\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u0435\u0432\u0430\u0439\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435. \u0421\u0435\u043a\u0446\u0438\u0438 before \u0438 after \u043d\u0443\u0436\u043d\u044b \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0434\u043e \u0438 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u044d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Bluetooth. \u0414\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0435\u0433\u043e, \u0430 \u043f\u043e\u0441\u043b\u0435 - \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442\u044c. \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u044d\u0442\u0438 \u0441\u0435\u043a\u0446\u0438\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u0445. Step \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0435\u0430\u0433\u0438\u0440\u0443\u0435\u0442 \u043d\u0430 \u0432\u0441\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0448\u0430\u0433\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u0448\u0430\u0433 \u0441\u0442\u0430\u0440\u0442\u0443\u0435\u0442, \u0448\u0430\u0433 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0445\u043e\u043c \u0438\u043b\u0438 \u043d\u0435\u0443\u0434\u0430\u0447\u0435\u0439). \u0412\u043d\u0443\u0442\u0440\u0438 \u043e\u0434\u043d\u043e\u0439 \u0441\u0435\u043a\u0446\u0438\u0438 step \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u044b \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0435\u043a\u0446\u0438\u0438 step. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f step \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0438\u043d\u0433 (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u0439 \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u0445). \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0438 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c. \u0421\u043a\u0440\u0438\u0448\u043e\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u0434\u0435\u043b\u0430\u0442\u044c\u0441\u044f \u043f\u043e \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0438 \u0448\u0430\u0433\u0430 (\u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043d\u0430 \u043a\u0430\u0436\u0434\u0443\u044e step-\u0441\u0435\u043a\u0446\u0438\u044e) \u0438 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c \u0442\u0435\u0441\u0442\u0430 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438. \u0414\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0444\u0438\u043b\u043e\u0441\u043e\u0444\u0438\u0438 Kaspresso \u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0448\u0430\u0433\u0430. \u0415\u0441\u043b\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u043e\u0432, \u0442\u043e \u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u044b\u0437\u043e\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 device.screenshots.take(\"Additional_screenshot\") . \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b device \u043e\u043f\u0438\u0441\u0430\u043d \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u0445. \u0420\u0430\u0441\u0448\u0438\u0440\u0438\u043c \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 test() \u0432 SimpleActivityTest \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439, \u0447\u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u0442\u0435\u043a\u0441\u0442. class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { SimpleActivityScreen { title { isVisible () hasText ( R . string . simple_activity_default_title ) } } } }","title":"Other"},{"location":"Tutorial_old/simple_test/","text":"\u0412\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0442\u044c \u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0442\u0435\u0441\u0442\u0430, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0431\u043b\u0438\u0436\u0435 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043c\u0441\u044f \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c\u0438. \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043d\u0430 \u0432\u0435\u0442\u043a\u0443 issue-372/update_tutorial . \u0412 \u043d\u0435\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u0441\u0430\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0431\u0435\u0437 \u0442\u0435\u0441\u0442\u043e\u0432. \u0412 \u044d\u0442\u043e\u043c \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0430 \u043f\u043e\u0448\u0430\u0433\u043e\u0432\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 code labs \u043f\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0432\u0435\u0442\u043a\u0435 tutorial_results . \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0432\u044b\u0431\u043e\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (1) \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c tutorial (2): \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u043d \u043d\u0443\u0436\u043d\u044b\u0439 \u0434\u0435\u0432\u0430\u0439\u0441 (1) \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (2): \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Tutorial. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \"Simple test\" \u0438 \u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437: 1. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 TextView 2. \u041f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 EditText 3. \u041a\u043d\u043e\u043f\u043a\u0438 Button Info \u041f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0438\u0434\u0436\u0435\u0442\u043e\u0432 \u0432 android \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 Kaspresso, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f Kaspresso \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c Kaspresso \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443 1. \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u0430\u043a Project (1) \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0432 \u0444\u0430\u0439\u043b build.gradle \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 mavenCentral (2): allprojects { repositories { mavenCentral () } } 2. \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u0430\u043a Project (1) \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0432 \u0444\u0430\u0439\u043b build.gradle \u043c\u043e\u0434\u0443\u043b\u044f Tutorial : dependencies { androidTestImplementation 'com.kaspersky.android-components:kaspresso:<latest_version>' } \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430 \u043d\u0430\u0447\u043d\u0435\u043c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Page object \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430. \u041f\u0440\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d PageObject \u0432 Kaspresso \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 . \u041f\u043e\u043f\u0430\u0441\u0442\u044c \u043d\u0430 SimpleActivity \u043c\u043e\u0436\u043d\u043e \u0438\u0437 MainActivity. \u041f\u043e\u044d\u0442\u043e\u043c\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c SimpleActivity, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0434\u0432\u0430 PageObject-\u0430. \u0412 \u043f\u0430\u043f\u043a\u0435 androidTest \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0430\u043f\u043a\u0443 screen \u0438 \u043a\u043b\u0430\u0434\u0435\u043c \u0442\u0443\u0434\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u044b MainScreen \u0438 SimpleActivityScreen : object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } } \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u043d\u043e \u043d\u0430\u0441 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0430 - \u043a\u043d\u043e\u043f\u043a\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivty. object SimpleActivityScreen : KScreen < SimpleActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val title = KTextView { withId ( R . id . simple_title ) } val button = KButton { withId ( R . id . change_title_btn ) } val input = KEditText { withId ( R . id . input_text ) } } \u0412 \u044d\u0442\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u043c\u044b \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442. \u0417\u0434\u0435\u0441\u044c \u0441\u0442\u043e\u0438\u0442 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043c\u044b \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u043a\u043b\u0430\u0434\u0435\u043c matcher-\u044b \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 View ({ withId(R.id...)}). \u0412 \u0441\u0430\u043c\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u043c\u044b \u0441\u043c\u043e\u0436\u0435\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u043a MainScreen \u0438 SimpleActivityScreen \u0438 \u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e. \u0412 \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445 KScreen \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c layoutId \u0438 ViewClass , \u043d\u043e \u044d\u0442\u043e \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0442\u0435\u0441\u0442\u0430\u0445 \u043c\u044b \u0432\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u043a \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u044e \u044d\u0442\u0438\u0445 \u043f\u043e\u043b\u0435\u0439, \u043d\u043e \u0432 \u044d\u0442\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u0434\u043b\u044f \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u044f \u043c\u044b \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e null . \u041f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0435\u043c \u043a \u043a\u043e\u0434\u0443 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u0412 \u043f\u0430\u043f\u043a\u0435 androidTest \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0430\u0441\u0441 SimpleTest : class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { } } \u0422\u0435\u0441\u0442 SimpleActivityTest \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c. \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u042d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442 \u0437\u0430\u043f\u0443\u0441\u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 activity MainActivity \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0438 \u0437\u0430\u043a\u0440\u043e\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430. \u0417\u0430 \u044d\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442: @get : Rule val activityRule = activityScenarioRule < MainActivity > () \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e activityScenarioRule \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0437\u0434\u0435\u0441\u044c SimpleActivityTest \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d \u043e\u0442 TestCase. \u042d\u0442\u043e \u043d\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 TestCase (\u0432 Java \u0438 Kotlin \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435), \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c TestCaseRule. @get : Rule val testCaseRule = TestCaseRule ( javaClass . simpleName ) \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0442\u0435\u043b\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a \u044d\u0442\u043e\u043c\u0443 \u0438\u043d\u0441\u0442\u0430\u043d\u0441\u0443: @Test fun test () = testCaseRule . run { ... } \u0420\u0430\u0441\u0448\u0438\u0440\u0438\u043c \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 test() \u0432 SimpleActivityTest \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\u043c\u0438, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivity \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0438 \u043e\u043d\u0430 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430. class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () click () } } } } \u041f\u043e\u043c\u0438\u043c\u043e \u043c\u0430\u0442\u0447\u0435\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043d\u0443\u0436\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043a\u043b\u0430\u0441\u0441\u043e\u0432-\u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u043e\u0432 BaseActions \u0438 BaseAssertions. \u041f\u0435\u0440\u0432\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u043d\u0430\u0434 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c, \u0430 \u0432\u0442\u043e\u0440\u043e\u0439 - \u043d\u0430\u0431\u043e\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a. \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e action \u0438 assertion \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0442\u0435\u0441\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d, \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0438 \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivity \u043f\u043e \u043a\u043b\u0438\u043a\u0443 \u043d\u0430 \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443. \u0412\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u043a \u0442\u0435\u0441\u0442\u0443. \u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivity \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 PageObject-\u043e\u043c MainScreen \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430 \u0438 \u043f\u043e\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c SimpleActivityScreen: class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () click () } } SimpleActivityScreen { simpleTitle . isVisible () changeTitleButton . isClickable () simpleTitle . hasText ( R . string . simple_activity_default_title ) inputText . replaceText ( \"new title\" ) changeTitleButton . click () simpleTitle . hasText ( \"new title\" ) } } } \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u043e\u0434 \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivityScreen \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043b\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 (simpleTitle.isVisible()), \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0438 \u0441\u043c\u0435\u043d\u044b \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 (changeTitleButton.isClickable()) \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e(simpleTitle.hasText(R.string.simple_activity_default_title)). \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"new title\" (inputText.replaceText(\"new title\")), \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441\u043c\u0435\u043d\u044b \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0438 \u0443\u0431\u0435\u0436\u0434\u0430\u0435\u043c\u0441\u044f, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u043c\u0435\u043d\u044f\u043b\u0441\u044f \u043d\u0430 \"new title\" (simpleTitle.hasText(\"new title\"))","title":"\u0412\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso"},{"location":"Tutorial_old/simple_test/#kaspresso","text":"\u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0442\u044c \u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0442\u0435\u0441\u0442\u0430, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0431\u043b\u0438\u0436\u0435 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u043c\u0441\u044f \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u0430\u043c\u0438. \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043d\u0430 \u0432\u0435\u0442\u043a\u0443 issue-372/update_tutorial . \u0412 \u043d\u0435\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u0441\u0430\u043c\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0431\u0435\u0437 \u0442\u0435\u0441\u0442\u043e\u0432. \u0412 \u044d\u0442\u043e\u043c \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u043a\u0430\u0445 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0430 \u043f\u043e\u0448\u0430\u0433\u043e\u0432\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 code labs \u043f\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u0442\u0435\u0441\u0442\u043e\u0432. \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0432\u0435\u0442\u043a\u0435 tutorial_results . \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0432\u044b\u0431\u043e\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (1) \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c tutorial (2): \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u043d \u043d\u0443\u0436\u043d\u044b\u0439 \u0434\u0435\u0432\u0430\u0439\u0441 (1) \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (2): \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Tutorial. \u041d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \"Simple test\" \u0438 \u0432\u0438\u0434\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u042d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437: 1. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 TextView 2. \u041f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 EditText 3. \u041a\u043d\u043e\u043f\u043a\u0438 Button Info \u041f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0438\u0434\u0436\u0435\u0442\u043e\u0432 \u0432 android \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 Kaspresso, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0447\u0430\u0442\u044c \u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f Kaspresso \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u0430.","title":"\u0412\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 Kaspresso"},{"location":"Tutorial_old/simple_test/#kaspresso_1","text":"1. \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u0430\u043a Project (1) \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0432 \u0444\u0430\u0439\u043b build.gradle \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 mavenCentral (2): allprojects { repositories { mavenCentral () } } 2. \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u0430\u043a Project (1) \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0432 \u0444\u0430\u0439\u043b build.gradle \u043c\u043e\u0434\u0443\u043b\u044f Tutorial : dependencies { androidTestImplementation 'com.kaspersky.android-components:kaspresso:<latest_version>' }","title":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c Kaspresso \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443"},{"location":"Tutorial_old/simple_test/#page-object","text":"\u041f\u0440\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d PageObject \u0432 Kaspresso \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 . \u041f\u043e\u043f\u0430\u0441\u0442\u044c \u043d\u0430 SimpleActivity \u043c\u043e\u0436\u043d\u043e \u0438\u0437 MainActivity. \u041f\u043e\u044d\u0442\u043e\u043c\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c SimpleActivity, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0434\u0432\u0430 PageObject-\u0430. \u0412 \u043f\u0430\u043f\u043a\u0435 androidTest \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0430\u043f\u043a\u0443 screen \u0438 \u043a\u043b\u0430\u0434\u0435\u043c \u0442\u0443\u0434\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u044b MainScreen \u0438 SimpleActivityScreen : object MainScreen : KScreen < MainScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val simpleActivityButton = KButton { withId ( R . id . simple_activity_btn ) } } \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 UI-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u043d\u043e \u043d\u0430\u0441 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0430 - \u043a\u043d\u043e\u043f\u043a\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivty. object SimpleActivityScreen : KScreen < SimpleActivityScreen > () { override val layoutId : Int? = null override val viewClass : Class <*>? = null val title = KTextView { withId ( R . id . simple_title ) } val button = KButton { withId ( R . id . change_title_btn ) } val input = KEditText { withId ( R . id . input_text ) } } \u0412 \u044d\u0442\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u043c\u044b \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442. \u0417\u0434\u0435\u0441\u044c \u0441\u0442\u043e\u0438\u0442 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043c\u044b \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u043a\u043b\u0430\u0434\u0435\u043c matcher-\u044b \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 View ({ withId(R.id...)}). \u0412 \u0441\u0430\u043c\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u043c\u044b \u0441\u043c\u043e\u0436\u0435\u043c \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u043a MainScreen \u0438 SimpleActivityScreen \u0438 \u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e. \u0412 \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445 KScreen \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c layoutId \u0438 ViewClass , \u043d\u043e \u044d\u0442\u043e \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0442\u0435\u0441\u0442\u0430\u0445 \u043c\u044b \u0432\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u043a \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u044e \u044d\u0442\u0438\u0445 \u043f\u043e\u043b\u0435\u0439, \u043d\u043e \u0432 \u044d\u0442\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u0434\u043b\u044f \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u044f \u043c\u044b \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e null .","title":"\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0430 \u043d\u0430\u0447\u043d\u0435\u043c \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Page object \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430."},{"location":"Tutorial_old/simple_test/#_1","text":"\u0412 \u043f\u0430\u043f\u043a\u0435 androidTest \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0430\u0441\u0441 SimpleTest : class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { } } \u0422\u0435\u0441\u0442 SimpleActivityTest \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c. \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 Android Studio \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0443\u0440\u043e\u043a\u0435 \u042d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442 \u0437\u0430\u043f\u0443\u0441\u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 activity MainActivity \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0442\u0435\u0441\u0442\u0430 \u0438 \u0437\u0430\u043a\u0440\u043e\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u0430 \u0442\u0435\u0441\u0442\u0430. \u0417\u0430 \u044d\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442: @get : Rule val activityRule = activityScenarioRule < MainActivity > () \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e activityScenarioRule \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0437\u0434\u0435\u0441\u044c SimpleActivityTest \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d \u043e\u0442 TestCase. \u042d\u0442\u043e \u043d\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 TestCase (\u0432 Java \u0438 Kotlin \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435), \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c TestCaseRule. @get : Rule val testCaseRule = TestCaseRule ( javaClass . simpleName ) \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0442\u0435\u043b\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a \u044d\u0442\u043e\u043c\u0443 \u0438\u043d\u0441\u0442\u0430\u043d\u0441\u0443: @Test fun test () = testCaseRule . run { ... } \u0420\u0430\u0441\u0448\u0438\u0440\u0438\u043c \u043a\u043e\u0434 \u0442\u0435\u0441\u0442\u0430 test() \u0432 SimpleActivityTest \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\u043c\u0438, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivity \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0438 \u043e\u043d\u0430 \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u0430. class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () click () } } } } \u041f\u043e\u043c\u0438\u043c\u043e \u043c\u0430\u0442\u0447\u0435\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043d\u0443\u0436\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043a\u043b\u0430\u0441\u0441\u043e\u0432-\u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u043e\u0432 BaseActions \u0438 BaseAssertions. \u041f\u0435\u0440\u0432\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u043d\u0430\u0434 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c, \u0430 \u0432\u0442\u043e\u0440\u043e\u0439 - \u043d\u0430\u0431\u043e\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a. \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e action \u0438 assertion \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0442\u0435\u0441\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d, \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0438 \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivity \u043f\u043e \u043a\u043b\u0438\u043a\u0443 \u043d\u0430 \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443. \u0412\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u043a \u0442\u0435\u0441\u0442\u0443. \u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivity \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 PageObject-\u043e\u043c MainScreen \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430 \u0438 \u043f\u043e\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c SimpleActivityScreen: class SimpleActivityTest : TestCase () { @get : Rule val activityRule = activityScenarioRule < MainActivity > () @Test fun test () { MainScreen { simpleActivityButton { isVisible () click () } } SimpleActivityScreen { simpleTitle . isVisible () changeTitleButton . isClickable () simpleTitle . hasText ( R . string . simple_activity_default_title ) inputText . replaceText ( \"new title\" ) changeTitleButton . click () simpleTitle . hasText ( \"new title\" ) } } } \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u043e\u0434 \u044d\u0442\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d SimpleActivityScreen \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043b\u0438 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 (simpleTitle.isVisible()), \u043a\u043b\u0438\u043a\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0438 \u0441\u043c\u0435\u043d\u044b \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 (changeTitleButton.isClickable()) \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e(simpleTitle.hasText(R.string.simple_activity_default_title)). \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u0432 \u043f\u043e\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"new title\" (inputText.replaceText(\"new title\")), \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u043c \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441\u043c\u0435\u043d\u044b \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0438 \u0443\u0431\u0435\u0436\u0434\u0430\u0435\u043c\u0441\u044f, \u0447\u0442\u043e \u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u043c\u0435\u043d\u044f\u043b\u0441\u044f \u043d\u0430 \"new title\" (simpleTitle.hasText(\"new title\"))","title":"\u041f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0435\u043c \u043a \u043a\u043e\u0434\u0443 \u0441\u0430\u043c\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430"},{"location":"Wiki/","text":"Kaspresso Wiki Here you can find detailed information about all the Kaspresso features.","title":"Introduction"},{"location":"Wiki/#kaspresso-wiki","text":"Here you can find detailed information about all the Kaspresso features.","title":"Kaspresso Wiki"},{"location":"Wiki/E2e_and_Functional_tests/","text":"E2e and Functional tests. All in one TBD","title":"E2e and Functional tests. All in one"},{"location":"Wiki/E2e_and_Functional_tests/#e2e-and-functional-tests-all-in-one","text":"TBD","title":"E2e and Functional tests. All in one"},{"location":"Wiki/Espresso_as_the_basis/","text":"Espresso as the basis Kaspresso is based on Google testing framework Espresso (if you're not familiar with Espresso, check out the official docs Espresso allows you to work with the elements of your application as a white box ( white box testing ). You can find the desired element on the screen using matchers, perform different actions or checks. Espresso is not enough This framework has a lot of drawbacks and not all things in Android autotesting can be done with Espresso alone. What do we want: Good readability . Espresso has a problem with this because of the huge hierarchy of matchers. When we have a lot of matches, the code becomes difficult to read. Poor readability means difficult to maintain Hight stability . Espresso does not work well with interfaces whose elements are displayed asynchronously. You can configure Idling, but that still won't solve all problems. Logging . After completing the test with Espresso, you do not have a step-by-step workflow sequence of actions. Screenshots . We also want to have some screenshots for the test report. Working with Android OS . In some cases, we need to interact with the device. In this case you need UiAutomator (as a variant). \u0421ode architecture . We want to have a clean code architecture in our tests, the ability to reuse code, move some blocks in abstractions. One code style for all developers. How does Kaspresso solve all these problems? Readability Kaspresso is based on Kakao - Android framework for UI autotests. It is also based on Espresso. Kakao provides a simple Kotlin DSL. This makes the tests more readable. You no longer need to put long constructors with matchers for finding elements on the screen in the code of your test. The result of calling the onView() Espresso method is cached. You can then get the required view as a property. Kakao also provides an implementation of Page object pattern with a Screen object. You can describe all the interface elements that your test will interact with in one place (in one Screen object). Stability Kaspresso has wrapped some Espresso calls into a more stable implementation. For example you can find flakySafely() method in the Kaspresso. Logging Kaspresso has wrapped some Espresso calls not only for higher stability. We have also implemented an interceptor that prints more logs. Working with Android OS We have created the Device interface as a facade for all devices to work with. UiAutomator can only help you in some cases, but more often you need the ability to execute various commands (adb, shell). For example, with the adb emu command, you can emulate various actions or events. Espresso tests are run directly on the android device, so we need some kind of external server to send the commands. In Kaspresso you can use AdbServer . Code architecture Having described above implementations of Page object pattern, you can make your code in your test files more readable, maintainable, reusable, and understandable. Kaspresso also provides various methods and abstractions to improve the architecture (such as step , Scenario , test sections and more).","title":"Espresso as the basis"},{"location":"Wiki/Espresso_as_the_basis/#espresso-as-the-basis","text":"Kaspresso is based on Google testing framework Espresso (if you're not familiar with Espresso, check out the official docs Espresso allows you to work with the elements of your application as a white box ( white box testing ). You can find the desired element on the screen using matchers, perform different actions or checks.","title":"Espresso as the basis"},{"location":"Wiki/Espresso_as_the_basis/#espresso-is-not-enough","text":"This framework has a lot of drawbacks and not all things in Android autotesting can be done with Espresso alone.","title":"Espresso is not enough"},{"location":"Wiki/Espresso_as_the_basis/#what-do-we-want","text":"Good readability . Espresso has a problem with this because of the huge hierarchy of matchers. When we have a lot of matches, the code becomes difficult to read. Poor readability means difficult to maintain Hight stability . Espresso does not work well with interfaces whose elements are displayed asynchronously. You can configure Idling, but that still won't solve all problems. Logging . After completing the test with Espresso, you do not have a step-by-step workflow sequence of actions. Screenshots . We also want to have some screenshots for the test report. Working with Android OS . In some cases, we need to interact with the device. In this case you need UiAutomator (as a variant). \u0421ode architecture . We want to have a clean code architecture in our tests, the ability to reuse code, move some blocks in abstractions. One code style for all developers.","title":"What do we want:"},{"location":"Wiki/Espresso_as_the_basis/#how-does-kaspresso-solve-all-these-problems","text":"","title":"How does Kaspresso solve all these problems?"},{"location":"Wiki/Espresso_as_the_basis/#readability","text":"Kaspresso is based on Kakao - Android framework for UI autotests. It is also based on Espresso. Kakao provides a simple Kotlin DSL. This makes the tests more readable. You no longer need to put long constructors with matchers for finding elements on the screen in the code of your test. The result of calling the onView() Espresso method is cached. You can then get the required view as a property. Kakao also provides an implementation of Page object pattern with a Screen object. You can describe all the interface elements that your test will interact with in one place (in one Screen object).","title":"Readability"},{"location":"Wiki/Espresso_as_the_basis/#stability","text":"Kaspresso has wrapped some Espresso calls into a more stable implementation. For example you can find flakySafely() method in the Kaspresso.","title":"Stability"},{"location":"Wiki/Espresso_as_the_basis/#logging","text":"Kaspresso has wrapped some Espresso calls not only for higher stability. We have also implemented an interceptor that prints more logs.","title":"Logging"},{"location":"Wiki/Espresso_as_the_basis/#working-with-android-os","text":"We have created the Device interface as a facade for all devices to work with. UiAutomator can only help you in some cases, but more often you need the ability to execute various commands (adb, shell). For example, with the adb emu command, you can emulate various actions or events. Espresso tests are run directly on the android device, so we need some kind of external server to send the commands. In Kaspresso you can use AdbServer .","title":"Working with Android OS"},{"location":"Wiki/Espresso_as_the_basis/#code-architecture","text":"Having described above implementations of Page object pattern, you can make your code in your test files more readable, maintainable, reusable, and understandable. Kaspresso also provides various methods and abstractions to improve the architecture (such as step , Scenario , test sections and more).","title":"Code architecture"},{"location":"Wiki/Executing_adb_commands/","text":"Executing adb commands Description As you remember from the previous part devoted to Device interface , Device interface contains the following things under the hood: - Espresso - UI Automator - ADB An attentive reader could notice that ADB is not available in Espresso tests. But using some other frameworks, like Appium, you can execute ADB commands. So we decided to add this important functionality too. We've developed a special Autotest's AdbServer to compensate lack of this feature. The main idea of the tool is similar to the idea in Appium. We just built a simple client-server system which contains two parts: - Device that starts up a test acts as client - Desktop sends ADB commands to be executed on the device. Also, the system uses a port forwarding to be able to organize a socket tunnel between Device and Desktop through any kind of connection (Wi-Fi, Bluetooth, USB and etc.). Usage The algorithm how to use Autotest AdbServer: 1. Run the Desktop part on your work station. Execute the following command: java -jar <path/to/kaspresso>/artifacts/adbserver-desktop.jar in the terminal 2. Run the Device part. Build and start adbserver-sample module . You should see the following screen: For example, type shell input text abc in the app's EditText and click Execute button. As result you will get shell input text abcabc in the EditText because ADB command has been executed and abc symbols has been added into the focused EditText. You can notice that the app uses AdbTerminal class to execute ADB commands. Usage in Kaspresso In Kaspresso, we wrap AdbTerminal into a special interface AdbServer . AdbServer 's instance is available in BaseTestContext scope and BaseTestCase with adbServer property: @Test fun test () = run { step ( \"Open Simple Screen\" ) { activityTestRule . launchActivity ( null ) ======> adbServer . performShell ( \"input text 1\" ) <====== MainScreen { simpleButton { isVisible () click () } } } // .... } Also, don't forget to grant necessary permission: <uses-permission android:name=\"android.permission.INTERNET\" /> Options and Logging Desktop part You can also use a few special flags when he starts adbserver-desktop.jar . For example, java -jar adbserver-desktop.jar -e emulator-5554,emulator-5556 -p 5041 -l VERBOSE . Flags: - e , --emulators - the list of emulators that can be captured by adbserver-desktop.jar (by default, adbserver-desktop.jar captures all available emulators) - p , --port - the adb server port number (the default value is 5037) - l , --logs - what type of logs show (the default value is INFO). For more information, you can run java -jar adbserver-desktop.jar --help Consider available types of logs: 1. ERROR You will see only error messages in the output. For example, ERROR 10/09/2020 11:37:19.893 desktop=Desktop-25920 device=emulator-5554 message: Incorrect type of the message... Take a look at the log format. You can see the type of a message, date and time, the host name and the emulator which executes the command, and the message. WARN Prints error and warning messages. INFO Default value, provides all the base events. For example, INFO 10/09/2020 11:37:04.822 desktop=Desktop-25920 message: Desktop started with arguments: emulators=[], adbServerPort=null INFO 10/09/2020 11:37:19.859 desktop=Desktop-25920 message: New device has been found: emulator-5554. Initialize connection to the device... INFO 10/09/2020 11:37:19.892 desktop=Desktop-25920 device=emulator-5554 message: The connection establishment to device started INFO 10/09/2020 11:37:19.893 desktop=Desktop-25920 device=emulator-5554 message: WatchdogThread is started from Desktop to Device INFO 10/09/2020 11:37:19.893 desktop=Desktop-25920 device=emulator-5554 message: Desktop tries to connect to the Device. It may take time because the device can be not ready. Possible reason: a kaspresso test has not been started INFO 10/09/2020 11:37:20.185 desktop=Desktop-25920 device=emulator-5554 message: The attempt to connect to Device was success INFO 10/09/2020 11:44:47.810 desktop=Desktop-25920 device=emulator-5554 message: The received command to execute: AdbCommand(body=shell input text abc) INFO 10/09/2020 11:44:49.115 desktop=Desktop-25920 device=emulator-5554 message: The executed command: AdbCommand(body=shell input text abc). The result: CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-25920) Also, the Desktop prints an emulator name, where the concrete command has been executed (this information is available on the Desktop and on the Device). It could be very useful in debugging. Take a look at the field serviceInfo at the end: INFO 10/09/2020 11:44:49.115 desktop=Desktop-25920 device=emulator-5554 message: The executed command: AdbCommand(body=shell input text abc). The result: CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-25920) VERBOSE There are cases when you might to debug Desktop part of AdbServer. That's why there is a special very detailed format \u2014 VERBOSE. Have a glance at logs reflecting similar events presented above (initialization, device connection and execution of a command): INFO 10/09/2020 11:48:16.850 desktop=Desktop-27398 tag=MainKt method=main message: Desktop started with arguments: emulators=[], adbServerPort=null DEBUG 10/09/2020 11:48:16.853 desktop=Desktop-27398 tag=Desktop method=startDevicesObserving message: start INFO 10/09/2020 11:48:16.913 desktop=Desktop-27398 tag=Desktop method=startDevicesObserving message: New device has been found: emulator-5554. Initialize connection to the device... DEBUG 10/09/2020 11:48:16.918 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=getDesktopSocketLoad message: calculated desktop client port=21234 DEBUG 10/09/2020 11:48:16.918 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=forwardPorts message: fromPort=21234, toPort=8500 started DEBUG 10/09/2020 11:48:16.919 desktop=Desktop-27398 device=emulator-5554 tag=CommandExecutorImpl method=execute message: The created adbCommand=adb -s emulator-5554 forward tcp:21234 tcp:8500 DEBUG 10/09/2020 11:48:16.925 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=forwardPorts message: fromPort=21234, toPort=8500) finished with result=CommandResult(status=SUCCESS, description=exitCode=0, message=21234 , serviceInfo=The command was executed on desktop=Desktop-27398) DEBUG 10/09/2020 11:48:16.925 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=getDesktopSocketLoad message: desktop client port=21234 is forwarding with device server port=8500 INFO 10/09/2020 11:48:16.927 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror method=startConnectionToDevice message: The connection establishment to device started INFO 10/09/2020 11:48:16.928 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: WatchdogThread is started from Desktop to Device DEBUG 10/09/2020 11:48:16.928 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device. It may take time because the device can be not ready (for example, a kaspresso test was not started). INFO 10/09/2020 11:48:16.928 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: Desktop tries to connect to the Device. It may take time because the device can be not ready. Possible reason: a kaspresso test has not been started DEBUG 10/09/2020 11:48:16.929 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket method=tryConnect message: Start the process DEBUG 10/09/2020 11:48:16.929 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionMaker method=connect message: Start a connection establishment. The current state=DISCONNECTED DEBUG 10/09/2020 11:48:16.929 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionMaker method=connect message: The current state=CONNECTING DEBUG 10/09/2020 11:48:16.930 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: started with ip=127.0.0.1, port=21234 DEBUG 10/09/2020 11:48:16.938 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: completed with ip=127.0.0.1, port=21234 DEBUG 10/09/2020 11:48:16.941 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=prepareListening message: Start DEBUG 10/09/2020 11:48:16.948 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=prepareListening message: IO Streams were created DEBUG 10/09/2020 11:48:16.948 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionMaker method=connect message: The connection is established. The current state=CONNECTED DEBUG 10/09/2020 11:48:16.948 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket$tryConnect$2 method=invoke message: The connection is ready. Start messages listening DEBUG 10/09/2020 11:48:16.949 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=startListening message: Started INFO 10/09/2020 11:48:16.949 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device was success DEBUG 10/09/2020 11:48:16.949 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring$MessagesListeningThread method=run message: Start listening DEBUG 10/09/2020 11:48:24.132 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=peekNextMessage message: The message=TaskMessage(command=AdbCommand(body=shell input text abc)) INFO 10/09/2020 11:48:24.132 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$Companion$create$connectionServerLifecycle$1 method=onReceivedTask message: The received command to execute: AdbCommand(body=shell input text abc) DEBUG 10/09/2020 11:48:24.132 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket$handleMessages$1 method=invoke message: Received taskMessage=TaskMessage(command=AdbCommand(body=shell input text abc)) DEBUG 10/09/2020 11:48:24.133 desktop=Desktop-27398 device=emulator-5554 tag=CommandExecutorImpl method=execute message: The created adbCommand=adb -s emulator-5554 shell input text abc INFO 10/09/2020 11:48:24.389 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$Companion$create$connectionServerLifecycle$1 method=onExecutedTask message: The executed command: AdbCommand(body=shell input text abc). The result: CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-27398) DEBUG 10/09/2020 11:48:24.389 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket$handleMessages$1$1 method=run message: Result of taskMessage=TaskMessage(command=AdbCommand(body=shell input text abc)) => result=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-27398) DEBUG 10/09/2020 11:48:24.389 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=sendMessage message: Input sendModel=ResultMessage(command=AdbCommand(body=shell input text abc), data=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-27398)) Pay attention that the log row also contains two additional fields: tag and method . Both fields are autogenerated using Throwable().stacktrace method. DEBUG Unlike a VERBOSE type, DEBUG packs repeating pieces of logs. For example, DEBUG 10/09/2020 12:11:37.006 desktop=Desktop-30548 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device. It may take time because the device can be not ready (for example, a kaspresso test was not started). DEBUG 10/09/2020 12:11:44.063 desktop=Desktop-30548 device=emulator-5554 tag=ServiceInfo method=Start message: ////////////////////////////////////////FRAGMENT IS REPEATED 7 TIMES//////////////////////////////////////// DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionServerImplBySocket method=tryConnect message: Start the process DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: Start a connection establishment. The current state=DISCONNECTED DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: The current state=CONNECTING DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: started with ip=127.0.0.1, port=37110 DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: completed with ip=127.0.0.1, port=37110 DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=SocketMessagesTransferring method=prepareListening message: Start DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: The connection establishment process failed. The current state=DISCONNECTED DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionServerImplBySocket$tryConnect$3 method=invoke message: The connection establishment attempt failed. The most possible reason is the opposite socket is not ready yet DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device. It may take time because the device can be not ready (for example, a kaspresso test was not started). DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ServiceInfo method=End message: //////////////////////////////////////////////////////////////////////////////////////////////////// DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionServerImplBySocket method=tryConnect message: Start the process DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: Start a connection establishment. The current state=DISCONNECTED Device part In Kaspresso, the AdbServer interface has a default implementation AdbServerImpl . This implementation sets WARN log level for AdbServer. So, you can see such logs in LogCat: 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: ___________________________________________________________________________ 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: TEST STEP: \"1. Disable network\" in DeviceNetworkSampleTest 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: AdbServer. The command to execute=su 0 svc data disable 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample W/KASPRESSO_ADBSERVER: Something went wrong (fake message) All the logs are printed with KASPRESSO_ADBSERVER tag with WARN log level. If you want to debug the Device part of Autotest AdbServer (the device part), you can set VERBOSE log level: class DeviceNetworkSampleTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { libLogger = UiTestLoggerImpl ( Kaspresso . DEFAULT_LIB_LOGGER_TAG ) adbServer = AdbServerImpl ( LogLevel . VERBOSE , libLogger ) } ) {...} Now the logs looks like: 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: TEST STEP: \"1. Disable network\" in DeviceNetworkSampleTest 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: AdbServer. The command to execute=su 0 svc data disable 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO_ADBSERVER: Start to execute the command=AdbCommand(body=shell su 0 svc data disable) 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=ConnectionClientImplBySocket method=executeCommand message: Started command=AdbCommand(body=shell su 0 svc data disable) 2020-09-10 12:24:27.241 10349-10378/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=SocketMessagesTransferring method=sendMessage message: Input sendModel=TaskMessage(command=AdbCommand(body=shell su 0 svc data disable)) 2020-09-10 12:24:27.427 10349-10406/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=SocketMessagesTransferring method=peekNextMessage message: The message=ResultMessage(command=AdbCommand(body=shell su 0 svc data disable), data=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548)) 2020-09-10 12:24:27.427 10349-10406/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=ConnectionClientImplBySocket$handleMessages$1 method=invoke message: Received resultMessage=ResultMessage(command=AdbCommand(body=shell su 0 svc data disable), data=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548)) 2020-09-10 12:24:27.427 10349-10378/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=ConnectionClientImplBySocket method=executeCommand message: Command=AdbCommand(body=shell su 0 svc data disable) completed with commandResult=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548) 2020-09-10 12:24:27.427 10349-10378/com.kaspersky.kaspressample I/KASPRESSO_ADBSERVER: The result of command=AdbCommand(body=shell su 0 svc data disable) => CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548) Development The source code of AdbServer is available in adb-server module. If you want to build adbserver-desktop.jar manually, just execute ./gradlew :adb-server:adbserver-desktop:assemble .","title":"Executing adb commands"},{"location":"Wiki/Executing_adb_commands/#executing-adb-commands","text":"","title":"Executing adb commands"},{"location":"Wiki/Executing_adb_commands/#description","text":"As you remember from the previous part devoted to Device interface , Device interface contains the following things under the hood: - Espresso - UI Automator - ADB An attentive reader could notice that ADB is not available in Espresso tests. But using some other frameworks, like Appium, you can execute ADB commands. So we decided to add this important functionality too. We've developed a special Autotest's AdbServer to compensate lack of this feature. The main idea of the tool is similar to the idea in Appium. We just built a simple client-server system which contains two parts: - Device that starts up a test acts as client - Desktop sends ADB commands to be executed on the device. Also, the system uses a port forwarding to be able to organize a socket tunnel between Device and Desktop through any kind of connection (Wi-Fi, Bluetooth, USB and etc.).","title":"Description"},{"location":"Wiki/Executing_adb_commands/#usage","text":"The algorithm how to use Autotest AdbServer: 1. Run the Desktop part on your work station. Execute the following command: java -jar <path/to/kaspresso>/artifacts/adbserver-desktop.jar in the terminal 2. Run the Device part. Build and start adbserver-sample module . You should see the following screen: For example, type shell input text abc in the app's EditText and click Execute button. As result you will get shell input text abcabc in the EditText because ADB command has been executed and abc symbols has been added into the focused EditText. You can notice that the app uses AdbTerminal class to execute ADB commands.","title":"Usage"},{"location":"Wiki/Executing_adb_commands/#usage-in-kaspresso","text":"In Kaspresso, we wrap AdbTerminal into a special interface AdbServer . AdbServer 's instance is available in BaseTestContext scope and BaseTestCase with adbServer property: @Test fun test () = run { step ( \"Open Simple Screen\" ) { activityTestRule . launchActivity ( null ) ======> adbServer . performShell ( \"input text 1\" ) <====== MainScreen { simpleButton { isVisible () click () } } } // .... } Also, don't forget to grant necessary permission: <uses-permission android:name=\"android.permission.INTERNET\" />","title":"Usage in Kaspresso"},{"location":"Wiki/Executing_adb_commands/#options-and-logging","text":"","title":"Options and Logging"},{"location":"Wiki/Executing_adb_commands/#desktop-part","text":"You can also use a few special flags when he starts adbserver-desktop.jar . For example, java -jar adbserver-desktop.jar -e emulator-5554,emulator-5556 -p 5041 -l VERBOSE . Flags: - e , --emulators - the list of emulators that can be captured by adbserver-desktop.jar (by default, adbserver-desktop.jar captures all available emulators) - p , --port - the adb server port number (the default value is 5037) - l , --logs - what type of logs show (the default value is INFO). For more information, you can run java -jar adbserver-desktop.jar --help Consider available types of logs: 1. ERROR You will see only error messages in the output. For example, ERROR 10/09/2020 11:37:19.893 desktop=Desktop-25920 device=emulator-5554 message: Incorrect type of the message... Take a look at the log format. You can see the type of a message, date and time, the host name and the emulator which executes the command, and the message. WARN Prints error and warning messages. INFO Default value, provides all the base events. For example, INFO 10/09/2020 11:37:04.822 desktop=Desktop-25920 message: Desktop started with arguments: emulators=[], adbServerPort=null INFO 10/09/2020 11:37:19.859 desktop=Desktop-25920 message: New device has been found: emulator-5554. Initialize connection to the device... INFO 10/09/2020 11:37:19.892 desktop=Desktop-25920 device=emulator-5554 message: The connection establishment to device started INFO 10/09/2020 11:37:19.893 desktop=Desktop-25920 device=emulator-5554 message: WatchdogThread is started from Desktop to Device INFO 10/09/2020 11:37:19.893 desktop=Desktop-25920 device=emulator-5554 message: Desktop tries to connect to the Device. It may take time because the device can be not ready. Possible reason: a kaspresso test has not been started INFO 10/09/2020 11:37:20.185 desktop=Desktop-25920 device=emulator-5554 message: The attempt to connect to Device was success INFO 10/09/2020 11:44:47.810 desktop=Desktop-25920 device=emulator-5554 message: The received command to execute: AdbCommand(body=shell input text abc) INFO 10/09/2020 11:44:49.115 desktop=Desktop-25920 device=emulator-5554 message: The executed command: AdbCommand(body=shell input text abc). The result: CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-25920) Also, the Desktop prints an emulator name, where the concrete command has been executed (this information is available on the Desktop and on the Device). It could be very useful in debugging. Take a look at the field serviceInfo at the end: INFO 10/09/2020 11:44:49.115 desktop=Desktop-25920 device=emulator-5554 message: The executed command: AdbCommand(body=shell input text abc). The result: CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-25920) VERBOSE There are cases when you might to debug Desktop part of AdbServer. That's why there is a special very detailed format \u2014 VERBOSE. Have a glance at logs reflecting similar events presented above (initialization, device connection and execution of a command): INFO 10/09/2020 11:48:16.850 desktop=Desktop-27398 tag=MainKt method=main message: Desktop started with arguments: emulators=[], adbServerPort=null DEBUG 10/09/2020 11:48:16.853 desktop=Desktop-27398 tag=Desktop method=startDevicesObserving message: start INFO 10/09/2020 11:48:16.913 desktop=Desktop-27398 tag=Desktop method=startDevicesObserving message: New device has been found: emulator-5554. Initialize connection to the device... DEBUG 10/09/2020 11:48:16.918 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=getDesktopSocketLoad message: calculated desktop client port=21234 DEBUG 10/09/2020 11:48:16.918 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=forwardPorts message: fromPort=21234, toPort=8500 started DEBUG 10/09/2020 11:48:16.919 desktop=Desktop-27398 device=emulator-5554 tag=CommandExecutorImpl method=execute message: The created adbCommand=adb -s emulator-5554 forward tcp:21234 tcp:8500 DEBUG 10/09/2020 11:48:16.925 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=forwardPorts message: fromPort=21234, toPort=8500) finished with result=CommandResult(status=SUCCESS, description=exitCode=0, message=21234 , serviceInfo=The command was executed on desktop=Desktop-27398) DEBUG 10/09/2020 11:48:16.925 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl method=getDesktopSocketLoad message: desktop client port=21234 is forwarding with device server port=8500 INFO 10/09/2020 11:48:16.927 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror method=startConnectionToDevice message: The connection establishment to device started INFO 10/09/2020 11:48:16.928 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: WatchdogThread is started from Desktop to Device DEBUG 10/09/2020 11:48:16.928 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device. It may take time because the device can be not ready (for example, a kaspresso test was not started). INFO 10/09/2020 11:48:16.928 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: Desktop tries to connect to the Device. It may take time because the device can be not ready. Possible reason: a kaspresso test has not been started DEBUG 10/09/2020 11:48:16.929 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket method=tryConnect message: Start the process DEBUG 10/09/2020 11:48:16.929 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionMaker method=connect message: Start a connection establishment. The current state=DISCONNECTED DEBUG 10/09/2020 11:48:16.929 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionMaker method=connect message: The current state=CONNECTING DEBUG 10/09/2020 11:48:16.930 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: started with ip=127.0.0.1, port=21234 DEBUG 10/09/2020 11:48:16.938 desktop=Desktop-27398 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: completed with ip=127.0.0.1, port=21234 DEBUG 10/09/2020 11:48:16.941 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=prepareListening message: Start DEBUG 10/09/2020 11:48:16.948 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=prepareListening message: IO Streams were created DEBUG 10/09/2020 11:48:16.948 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionMaker method=connect message: The connection is established. The current state=CONNECTED DEBUG 10/09/2020 11:48:16.948 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket$tryConnect$2 method=invoke message: The connection is ready. Start messages listening DEBUG 10/09/2020 11:48:16.949 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=startListening message: Started INFO 10/09/2020 11:48:16.949 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device was success DEBUG 10/09/2020 11:48:16.949 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring$MessagesListeningThread method=run message: Start listening DEBUG 10/09/2020 11:48:24.132 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=peekNextMessage message: The message=TaskMessage(command=AdbCommand(body=shell input text abc)) INFO 10/09/2020 11:48:24.132 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$Companion$create$connectionServerLifecycle$1 method=onReceivedTask message: The received command to execute: AdbCommand(body=shell input text abc) DEBUG 10/09/2020 11:48:24.132 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket$handleMessages$1 method=invoke message: Received taskMessage=TaskMessage(command=AdbCommand(body=shell input text abc)) DEBUG 10/09/2020 11:48:24.133 desktop=Desktop-27398 device=emulator-5554 tag=CommandExecutorImpl method=execute message: The created adbCommand=adb -s emulator-5554 shell input text abc INFO 10/09/2020 11:48:24.389 desktop=Desktop-27398 device=emulator-5554 tag=DeviceMirror$Companion$create$connectionServerLifecycle$1 method=onExecutedTask message: The executed command: AdbCommand(body=shell input text abc). The result: CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-27398) DEBUG 10/09/2020 11:48:24.389 desktop=Desktop-27398 device=emulator-5554 tag=ConnectionServerImplBySocket$handleMessages$1$1 method=run message: Result of taskMessage=TaskMessage(command=AdbCommand(body=shell input text abc)) => result=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-27398) DEBUG 10/09/2020 11:48:24.389 desktop=Desktop-27398 device=emulator-5554 tag=SocketMessagesTransferring method=sendMessage message: Input sendModel=ResultMessage(command=AdbCommand(body=shell input text abc), data=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-27398)) Pay attention that the log row also contains two additional fields: tag and method . Both fields are autogenerated using Throwable().stacktrace method. DEBUG Unlike a VERBOSE type, DEBUG packs repeating pieces of logs. For example, DEBUG 10/09/2020 12:11:37.006 desktop=Desktop-30548 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device. It may take time because the device can be not ready (for example, a kaspresso test was not started). DEBUG 10/09/2020 12:11:44.063 desktop=Desktop-30548 device=emulator-5554 tag=ServiceInfo method=Start message: ////////////////////////////////////////FRAGMENT IS REPEATED 7 TIMES//////////////////////////////////////// DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionServerImplBySocket method=tryConnect message: Start the process DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: Start a connection establishment. The current state=DISCONNECTED DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: The current state=CONNECTING DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: started with ip=127.0.0.1, port=37110 DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=DesktopDeviceSocketConnectionForwardImpl$getDesktopSocketLoad$1 method=invoke message: completed with ip=127.0.0.1, port=37110 DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=SocketMessagesTransferring method=prepareListening message: Start DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: The connection establishment process failed. The current state=DISCONNECTED DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionServerImplBySocket$tryConnect$3 method=invoke message: The connection establishment attempt failed. The most possible reason is the opposite socket is not ready yet DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=DeviceMirror$WatchdogThread method=run message: The attempt to connect to Device. It may take time because the device can be not ready (for example, a kaspresso test was not started). DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ServiceInfo method=End message: //////////////////////////////////////////////////////////////////////////////////////////////////// DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionServerImplBySocket method=tryConnect message: Start the process DEBUG 10/09/2020 12:11:44.064 desktop=Desktop-30548 device=emulator-5554 tag=ConnectionMaker method=connect message: Start a connection establishment. The current state=DISCONNECTED","title":"Desktop part"},{"location":"Wiki/Executing_adb_commands/#device-part","text":"In Kaspresso, the AdbServer interface has a default implementation AdbServerImpl . This implementation sets WARN log level for AdbServer. So, you can see such logs in LogCat: 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: ___________________________________________________________________________ 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: TEST STEP: \"1. Disable network\" in DeviceNetworkSampleTest 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: AdbServer. The command to execute=su 0 svc data disable 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample W/KASPRESSO_ADBSERVER: Something went wrong (fake message) All the logs are printed with KASPRESSO_ADBSERVER tag with WARN log level. If you want to debug the Device part of Autotest AdbServer (the device part), you can set VERBOSE log level: class DeviceNetworkSampleTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { libLogger = UiTestLoggerImpl ( Kaspresso . DEFAULT_LIB_LOGGER_TAG ) adbServer = AdbServerImpl ( LogLevel . VERBOSE , libLogger ) } ) {...} Now the logs looks like: 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: TEST STEP: \"1. Disable network\" in DeviceNetworkSampleTest 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO: AdbServer. The command to execute=su 0 svc data disable 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample I/KASPRESSO_ADBSERVER: Start to execute the command=AdbCommand(body=shell su 0 svc data disable) 2020-09-10 12:24:27.240 10349-10378/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=ConnectionClientImplBySocket method=executeCommand message: Started command=AdbCommand(body=shell su 0 svc data disable) 2020-09-10 12:24:27.241 10349-10378/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=SocketMessagesTransferring method=sendMessage message: Input sendModel=TaskMessage(command=AdbCommand(body=shell su 0 svc data disable)) 2020-09-10 12:24:27.427 10349-10406/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=SocketMessagesTransferring method=peekNextMessage message: The message=ResultMessage(command=AdbCommand(body=shell su 0 svc data disable), data=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548)) 2020-09-10 12:24:27.427 10349-10406/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=ConnectionClientImplBySocket$handleMessages$1 method=invoke message: Received resultMessage=ResultMessage(command=AdbCommand(body=shell su 0 svc data disable), data=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548)) 2020-09-10 12:24:27.427 10349-10378/com.kaspersky.kaspressample D/KASPRESSO_ADBSERVER: class=ConnectionClientImplBySocket method=executeCommand message: Command=AdbCommand(body=shell su 0 svc data disable) completed with commandResult=CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548) 2020-09-10 12:24:27.427 10349-10378/com.kaspersky.kaspressample I/KASPRESSO_ADBSERVER: The result of command=AdbCommand(body=shell su 0 svc data disable) => CommandResult(status=SUCCESS, description=exitCode=0, message=, serviceInfo=The command was executed on desktop=Desktop-30548)","title":"Device part"},{"location":"Wiki/Executing_adb_commands/#development","text":"The source code of AdbServer is available in adb-server module. If you want to build adbserver-desktop.jar manually, just execute ./gradlew :adb-server:adbserver-desktop:assemble .","title":"Development"},{"location":"Wiki/Jetpack_Compose/","text":"Jetpack Compose support [Early access] Keep in mind it's early access that may contain bugs. Also, API can be changed, but we are going to avoid it. Be free to create relative issues if you've encountered with any kind of problem. Jetpack Compose support consists of two parts: Kakao Compose library and Kaspresso Interceptors mechanism. Kakao Compose library All detailed information is available in the README of the library. Jetpack Compose support is provided by a separate module to not force developers to up their minSDK version to 21. So, first of all, add a dependency to build.gradle : dependencies { androidTestImplementation \"com.kaspersky.android-components:kaspresso-compose-support:<latest_version>\" } In a nutshell, let's see at how Kakao Compose DSL looks like: // Screen class class ComposeMainScreen ( semanticsProvider : SemanticsNodeInteractionsProvider ) : ComposeScreen < ComposeMainScreen > ( semanticsProvider = semanticsProvider , // Screen in Kakao Compose can be a Node too due to 'viewBuilderAction' param. // 'viewBuilderAction' param is nullable. viewBuilderAction = { hasTestTag ( \"ComposeMainScreen\" ) } ) { // You can set clear parent-child relationship due to 'child' extension // Here, 'simpleFlakyButton' is a child of 'ComposeMainScreen' (that is Node too) val simpleFlakyButton : KNode = child { hasTestTag ( \"main_screen_simple_flaky_button\" ) } } // This annotation is here to make the test is appropriate for JVM environment (with Robolectric) @RunWith ( AndroidJUnit4 :: class ) // Test class declaration class ComposeSimpleFlakyTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withComposeSupport () ) { // Special rule for Compose tests @get : Rule val composeTestRule = createAndroidComposeRule < JetpackComposeActivity > () // Test DSL. It's so similar to Kakao or Kautomator DSL @Test fun test () = run { step ( \"Open Flaky screen\" ) { onComposeScreen < ComposeMainScreen > ( composeTestRule ) { simpleFlakyButton { assertIsDisplayed () performClick () } } } step ( \"Click on the First button\" ) { onComposeScreen < ComposeSimpleFlakyScreen > ( composeTestRule ) { firstButton { assertIsDisplayed () performClick () } } } // ... } } Again, all related to DSL information is available in the docs . Kaspresso Interceptors mechanism Interceptors are one of the main advantages and powers of Kaspresso library. How interceptors work is described at the article (look the chapter \"Flaky tests and logging\" ). The same principles are using in Kaspresso for Jetpack Compose. Let's enumerate default interceptors that work under the hood by default when you write tests with Kaspresso. Behavior interceptors FailureLoggingSemanticsBehaviorInterceptor Build the clear and undestandable exception in case of the test failure. FlakySafeSemanticsBehaviorInterceptor Tries to repeat the failed action or assertion during defined timeout. All params for this interceptor are at FlakySafetyParams . SystemDialogSafetySemanticsBehaviorInterceptor Eliminates various system dialogs that prevent correct execution of a test. AutoScrollSemanticsBehaviorInterceptor Performs autoscrolling to an element if the element is not visible on the screen. ElementLoaderSemanticsBehaviorInterceptor Requests the related SemanticNodeInteraction using saved Matcher when the element is not found. Watcher interceptors LoggingSemanticsWatcherInterceptor . The Interceptor produces human-readable logs. The example: I/KASPRESSO: TEST STEP: \"1. Open Flaky screen\" in ComposeSimpleFlakyTest SUCCEED. It took 0 minutes, 0 seconds and 212 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"2. Click on the First button\" in ComposeSimpleFlakyTest I/KASPRESSO: Operation: Check=IS_DISPLAYED(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: Reloading of the element is started I/KASPRESSO: Reloading of the element is finished I/KASPRESSO: Repeat action again with the reloaded element I/KASPRESSO: Operation: Check=IS_DISPLAYED(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: SemanticsNodeInteraction autoscroll successfully performed. I/KASPRESSO: Operation: Check=IS_DISPLAYED(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: Operation: Perform=PERFORM_CLICK(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: TEST STEP: \"2. Click on the First button\" in ComposeSimpleFlakyTest SUCCEED. It took 0 minutes, 0 seconds and 123 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"3. Click on the Second button\" in ComposeSimpleFlakyTest Caveats Remember, that Jetpack Compose and all relative tools are developing. It means Jetpack Compose is not learned very well and some things can be unexpected after \"Old fashioned View World\" experience. Let me show the interesting case. For example, this code composeSimpleFlakyScreen ( composeTestRule ) { firstButton { performClick () } } can be the source of flakiness behavior if firstButton is located in non visible for a user area (you just need to scroll to see the element). But, this code will always work stably: composeSimpleFlakyScreen ( composeTestRule ) { firstButton { assertIsDisplayed () performClick () } } The explanation is in the nature of SemanticsNode Tree and Jetpack Compose. firstButton is a Node and presented in the Tree. It means that performClick() may work and nothing bad doesn't happen. But, firstButton is not visible physically and a real click doesn't occur. Such behavior causes the crash of a test a little bit later. But, assertIsDisplayed() check doesn't pass on the first try (we don't see the element on the screen) and launches work of all Interceptors including Autoscroll interceptor which scrolls the Screen to the desired element. Please, share your experience to help other developers. What else Configuration Jetpack Compose support is fully configurable. Have a look at various options to configure: // We edit only semanticsBehaviorInterceptors // Now, semanticsBehaviorInterceptors contains only FailureLoggingSemanticsBehaviorInterceptor class ComposeCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withComposeSupport { composeBuilder -> composeBuilder . semanticsBehaviorInterceptors = composeBuilder . semanticsBehaviorInterceptors . filter { it is FailureLoggingSemanticsBehaviorInterceptor }. toMutableList () } ) // We edit flakySafetyParams and semanticsBehaviorInterceptors // Also, we change semanticsBehaviorInterceptors where we exclude SystemDialogSafetySemanticsBehaviorInterceptor class ComposeCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withComposeSupport ( // It's very important to change flakySafetyParams in customize section // Otherwise, all interceptors will use a default version of flakySafetyParams customize = { flakySafetyParams = FlakySafetyParams . custom ( timeoutMs = 5000 , intervalMs = 1000 ) }, lateComposeCustomize = { composeBuilder -> composeBuilder . semanticsBehaviorInterceptors = composeBuilder . semanticsBehaviorInterceptors . filter { it !is SystemDialogSafetySemanticsBehaviorInterceptor }. toMutableList () } ). apply { // Remember, It's better to customize ComposeSupport only after Kaspresso customizing // Because ComposeSupport interceptors can be dependent on some Kaspresso entities // For example, changing flakySafetyParams in this section will not affect ComposeSupport interceptors } ) // There is another way to do exactly the same class ComposeCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { flakySafetyParams = FlakySafetyParams . custom ( timeoutMs = 5000 , intervalMs = 1000 ) }. apply { addComposeSupport { composeBuilder -> composeBuilder . semanticsBehaviorInterceptors = composeBuilder . semanticsBehaviorInterceptors . filter { it !is SystemDialogSafetySemanticsBehaviorInterceptor }. toMutableList () } } ) Robolectric support You can run your Compose tests on the JVM environment with Robolectric. Run ComposeSimpleFlakyTest (from \"kaspresso-sample\" module) on the JVM right now: ./gradlew :samples:kaspresso-compose-support-sample:testDebugUnitTest --info --tests \"com.kaspersky.kaspresso.composesupport.sample.test.ComposeSimpleFlakyTest\" All information about Robolectric support is available here . Compose is compatible with all sweet Kaspresso extensions Sweet Kaspresso extensions means using of the such constructions as - flakySafely - continuously The support of some constructions is in progress: issue-317 .","title":"Jetpack Compose in Kaspresso"},{"location":"Wiki/Jetpack_Compose/#jetpack-compose-support-early-access","text":"Keep in mind it's early access that may contain bugs. Also, API can be changed, but we are going to avoid it. Be free to create relative issues if you've encountered with any kind of problem. Jetpack Compose support consists of two parts: Kakao Compose library and Kaspresso Interceptors mechanism.","title":"Jetpack Compose support [Early access]"},{"location":"Wiki/Jetpack_Compose/#kakao-compose-library","text":"All detailed information is available in the README of the library. Jetpack Compose support is provided by a separate module to not force developers to up their minSDK version to 21. So, first of all, add a dependency to build.gradle : dependencies { androidTestImplementation \"com.kaspersky.android-components:kaspresso-compose-support:<latest_version>\" } In a nutshell, let's see at how Kakao Compose DSL looks like: // Screen class class ComposeMainScreen ( semanticsProvider : SemanticsNodeInteractionsProvider ) : ComposeScreen < ComposeMainScreen > ( semanticsProvider = semanticsProvider , // Screen in Kakao Compose can be a Node too due to 'viewBuilderAction' param. // 'viewBuilderAction' param is nullable. viewBuilderAction = { hasTestTag ( \"ComposeMainScreen\" ) } ) { // You can set clear parent-child relationship due to 'child' extension // Here, 'simpleFlakyButton' is a child of 'ComposeMainScreen' (that is Node too) val simpleFlakyButton : KNode = child { hasTestTag ( \"main_screen_simple_flaky_button\" ) } } // This annotation is here to make the test is appropriate for JVM environment (with Robolectric) @RunWith ( AndroidJUnit4 :: class ) // Test class declaration class ComposeSimpleFlakyTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withComposeSupport () ) { // Special rule for Compose tests @get : Rule val composeTestRule = createAndroidComposeRule < JetpackComposeActivity > () // Test DSL. It's so similar to Kakao or Kautomator DSL @Test fun test () = run { step ( \"Open Flaky screen\" ) { onComposeScreen < ComposeMainScreen > ( composeTestRule ) { simpleFlakyButton { assertIsDisplayed () performClick () } } } step ( \"Click on the First button\" ) { onComposeScreen < ComposeSimpleFlakyScreen > ( composeTestRule ) { firstButton { assertIsDisplayed () performClick () } } } // ... } } Again, all related to DSL information is available in the docs .","title":"Kakao Compose library"},{"location":"Wiki/Jetpack_Compose/#kaspresso-interceptors-mechanism","text":"Interceptors are one of the main advantages and powers of Kaspresso library. How interceptors work is described at the article (look the chapter \"Flaky tests and logging\" ). The same principles are using in Kaspresso for Jetpack Compose. Let's enumerate default interceptors that work under the hood by default when you write tests with Kaspresso.","title":"Kaspresso Interceptors mechanism"},{"location":"Wiki/Jetpack_Compose/#behavior-interceptors","text":"FailureLoggingSemanticsBehaviorInterceptor Build the clear and undestandable exception in case of the test failure. FlakySafeSemanticsBehaviorInterceptor Tries to repeat the failed action or assertion during defined timeout. All params for this interceptor are at FlakySafetyParams . SystemDialogSafetySemanticsBehaviorInterceptor Eliminates various system dialogs that prevent correct execution of a test. AutoScrollSemanticsBehaviorInterceptor Performs autoscrolling to an element if the element is not visible on the screen. ElementLoaderSemanticsBehaviorInterceptor Requests the related SemanticNodeInteraction using saved Matcher when the element is not found.","title":"Behavior interceptors"},{"location":"Wiki/Jetpack_Compose/#watcher-interceptors","text":"LoggingSemanticsWatcherInterceptor . The Interceptor produces human-readable logs. The example: I/KASPRESSO: TEST STEP: \"1. Open Flaky screen\" in ComposeSimpleFlakyTest SUCCEED. It took 0 minutes, 0 seconds and 212 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"2. Click on the First button\" in ComposeSimpleFlakyTest I/KASPRESSO: Operation: Check=IS_DISPLAYED(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: Reloading of the element is started I/KASPRESSO: Reloading of the element is finished I/KASPRESSO: Repeat action again with the reloaded element I/KASPRESSO: Operation: Check=IS_DISPLAYED(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: SemanticsNodeInteraction autoscroll successfully performed. I/KASPRESSO: Operation: Check=IS_DISPLAYED(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: Operation: Perform=PERFORM_CLICK(description={null}). ComposeInteraction: matcher: (hasParentThat(TestTag = 'simple_flaky_screen_container')) && (TestTag = 'simple_flaky_screen_simple_first_button'); position: 0; useUnmergedTree: false. I/KASPRESSO: TEST STEP: \"2. Click on the First button\" in ComposeSimpleFlakyTest SUCCEED. It took 0 minutes, 0 seconds and 123 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"3. Click on the Second button\" in ComposeSimpleFlakyTest","title":"Watcher interceptors"},{"location":"Wiki/Jetpack_Compose/#caveats","text":"Remember, that Jetpack Compose and all relative tools are developing. It means Jetpack Compose is not learned very well and some things can be unexpected after \"Old fashioned View World\" experience. Let me show the interesting case. For example, this code composeSimpleFlakyScreen ( composeTestRule ) { firstButton { performClick () } } can be the source of flakiness behavior if firstButton is located in non visible for a user area (you just need to scroll to see the element). But, this code will always work stably: composeSimpleFlakyScreen ( composeTestRule ) { firstButton { assertIsDisplayed () performClick () } } The explanation is in the nature of SemanticsNode Tree and Jetpack Compose. firstButton is a Node and presented in the Tree. It means that performClick() may work and nothing bad doesn't happen. But, firstButton is not visible physically and a real click doesn't occur. Such behavior causes the crash of a test a little bit later. But, assertIsDisplayed() check doesn't pass on the first try (we don't see the element on the screen) and launches work of all Interceptors including Autoscroll interceptor which scrolls the Screen to the desired element. Please, share your experience to help other developers.","title":"Caveats"},{"location":"Wiki/Jetpack_Compose/#what-else","text":"","title":"What else"},{"location":"Wiki/Jetpack_Compose/#configuration","text":"Jetpack Compose support is fully configurable. Have a look at various options to configure: // We edit only semanticsBehaviorInterceptors // Now, semanticsBehaviorInterceptors contains only FailureLoggingSemanticsBehaviorInterceptor class ComposeCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withComposeSupport { composeBuilder -> composeBuilder . semanticsBehaviorInterceptors = composeBuilder . semanticsBehaviorInterceptors . filter { it is FailureLoggingSemanticsBehaviorInterceptor }. toMutableList () } ) // We edit flakySafetyParams and semanticsBehaviorInterceptors // Also, we change semanticsBehaviorInterceptors where we exclude SystemDialogSafetySemanticsBehaviorInterceptor class ComposeCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withComposeSupport ( // It's very important to change flakySafetyParams in customize section // Otherwise, all interceptors will use a default version of flakySafetyParams customize = { flakySafetyParams = FlakySafetyParams . custom ( timeoutMs = 5000 , intervalMs = 1000 ) }, lateComposeCustomize = { composeBuilder -> composeBuilder . semanticsBehaviorInterceptors = composeBuilder . semanticsBehaviorInterceptors . filter { it !is SystemDialogSafetySemanticsBehaviorInterceptor }. toMutableList () } ). apply { // Remember, It's better to customize ComposeSupport only after Kaspresso customizing // Because ComposeSupport interceptors can be dependent on some Kaspresso entities // For example, changing flakySafetyParams in this section will not affect ComposeSupport interceptors } ) // There is another way to do exactly the same class ComposeCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { flakySafetyParams = FlakySafetyParams . custom ( timeoutMs = 5000 , intervalMs = 1000 ) }. apply { addComposeSupport { composeBuilder -> composeBuilder . semanticsBehaviorInterceptors = composeBuilder . semanticsBehaviorInterceptors . filter { it !is SystemDialogSafetySemanticsBehaviorInterceptor }. toMutableList () } } )","title":"Configuration"},{"location":"Wiki/Jetpack_Compose/#robolectric-support","text":"You can run your Compose tests on the JVM environment with Robolectric. Run ComposeSimpleFlakyTest (from \"kaspresso-sample\" module) on the JVM right now: ./gradlew :samples:kaspresso-compose-support-sample:testDebugUnitTest --info --tests \"com.kaspersky.kaspresso.composesupport.sample.test.ComposeSimpleFlakyTest\" All information about Robolectric support is available here .","title":"Robolectric support"},{"location":"Wiki/Jetpack_Compose/#compose-is-compatible-with-all-sweet-kaspresso-extensions","text":"Sweet Kaspresso extensions means using of the such constructions as - flakySafely - continuously The support of some constructions is in progress: issue-317 .","title":"Compose is compatible with all sweet Kaspresso extensions"},{"location":"Wiki/Kaspresso_Allure/","text":"Kaspresso-allure support What's new In the new 1.3.0 Kaspresso release the allure-framework support was added. Now it is very easy to generate pretty test reports using both Kaspresso and Allure frameworks. In this release, the file-managing classes family that is responsible for providing files for screenshots and logs has been refactored for better usage and extensibility. This change has affected the old classes that are deprecated now (see package com.kaspersky.kaspresso.files). Usage example: CustomizedSimpleTest . Also, the following interceptors were added: 1. VideoRecordingInterceptor . Tests video recording interceptor (please not that it was fully tested on emulators with android api 29 and older). 2. DumpViewsInterceptor . Interceptor that dumps XML-representation of view hierarchy in case of a test failure. In the package com.kaspersky.components.alluresupport.interceptors , there are special Kaspresso interceptors helping to link and process files for Allure-report. How to use First of all, add the following Gradle dependency and Allure runner to your project's gradle file to include allure-support Kaspresso module: android { defaultConfig { //... testInstrumentationRunner \"io.qameta.allure.android.runners.AllureAndroidJUnitRunner\" } //... } dependencies { //... androidTestImplementation \"com.kaspersky.android-components:kaspresso-allure-support:<latest_version>\" } Next, use special withAllureSupport function in your TestCase constructor or in your TestCaseRule to turn on all available Allure-supporting interceptors: class AllureSupportTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withAllureSupport () ) { If you want to specify the parameters or add more interceptors you can use addAllureSupport function: class AllureSupportCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple ( customize = { videoParams = VideoParams ( bitRate = 10 _000_000 ) screenshotParams = ScreenshotParams ( quality = 1 ) } ). addAllureSupport (). apply { testRunWatcherInterceptors . apply { add ( object : TestRunWatcherInterceptor { override fun onTestFinished ( testInfo : TestInfo , success : Boolean ) { viewHierarchyDumper . dumpAndApply ( \"ViewHierarchy\" ) { attachViewHierarchyToAllureReport () } } }) } } ) { ... } If you don't need all of these interceptors providing by withAllureSupport and addAllureSupport functions then you may add only interceptors that you prefer. But please note that AllureMapperStepInterceptor.kt is mandatory for Allure support work. For example, if you don't need videos and view hierarchies after test failures then you can do something like: class AllureSupportCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple (). apply { stepWatcherInterceptors . addAll ( listOf ( ScreenshotStepInterceptor ( screenshots ), AllureMapperStepInterceptor () ) ) testRunWatcherInterceptors . addAll ( listOf ( DumpLogcatTestInterceptor ( logcatDumper ), ScreenshotTestInterceptor ( screenshots ), ) ) } ) { ... } kaspresso-allure-support-sample is available to watch, to launch and to experiment with all of this staff. Watch result So you added the list of needed Allure-supporting interceptors to your Kaspresso configuration and launched the test. After the test finishes there will be sdcard/allure-results dir created on the device with all the files processed to be included to Allure-report. This dir should be moved from the device to the host machine which will do generate the report. For example, you can use adb pull command on your host for this. Let say you want to locate the data for the report at /Users/username/Desktop/allure-results , so you call: adb pull /sdcard/allure-results /Users/username/Desktop If there are few devices connected to yout host you should specify the needed device id. To watch the list of connected devices you can call: adb devices The output will be something like: List of devices attached CLCDU18508004769 device emulator-5554 device Select the needed device and call: adb -s emulator-5554 pull /sdcard/allure-results /Users/username/Desktop And that's it, the allure-results dir with all the test resources is now at /Users/username/Desktop . Now, we want to generate and watch the report. The Allure server must be installed on our machine for this. To find out how to do it with all the details please follow the Allure docs . For example to install Allure server on MacOS we can use the following command: brew install allure Now we are ready to generate and watch the report, just call: allure serve /Users/username/Desktop/allure-results Next, the Allure server generates the html-page representing the report and puts it to temp dir in your system. You will see the report opening in the new tab in your browser (the tab is opening automatically). If you want to save the generated html-report to a specific dir for future use you can just call: allure generate -o ~/kaspresso-allure-report /Users/username/Desktop/allure-results And to watch it then in your browser you just call: allure open ~/kaspresso-allure-report After all of this actions you see something like: Details for succeeded test: Details for failed test: Details that you need to know By default, Kaspresso-Allure introduces additional timeouts to assure the correctness of a Video recording as much as possible. To summarize, these timeouts increase a test execution time by 5 seconds. You are free to change these values by customizing videoParams in Kaspresso.Builder . See the example above.","title":"Kaspresso with Allure"},{"location":"Wiki/Kaspresso_Allure/#kaspresso-allure-support","text":"","title":"Kaspresso-allure support"},{"location":"Wiki/Kaspresso_Allure/#whats-new","text":"In the new 1.3.0 Kaspresso release the allure-framework support was added. Now it is very easy to generate pretty test reports using both Kaspresso and Allure frameworks. In this release, the file-managing classes family that is responsible for providing files for screenshots and logs has been refactored for better usage and extensibility. This change has affected the old classes that are deprecated now (see package com.kaspersky.kaspresso.files). Usage example: CustomizedSimpleTest . Also, the following interceptors were added: 1. VideoRecordingInterceptor . Tests video recording interceptor (please not that it was fully tested on emulators with android api 29 and older). 2. DumpViewsInterceptor . Interceptor that dumps XML-representation of view hierarchy in case of a test failure. In the package com.kaspersky.components.alluresupport.interceptors , there are special Kaspresso interceptors helping to link and process files for Allure-report.","title":"What's new"},{"location":"Wiki/Kaspresso_Allure/#how-to-use","text":"First of all, add the following Gradle dependency and Allure runner to your project's gradle file to include allure-support Kaspresso module: android { defaultConfig { //... testInstrumentationRunner \"io.qameta.allure.android.runners.AllureAndroidJUnitRunner\" } //... } dependencies { //... androidTestImplementation \"com.kaspersky.android-components:kaspresso-allure-support:<latest_version>\" } Next, use special withAllureSupport function in your TestCase constructor or in your TestCaseRule to turn on all available Allure-supporting interceptors: class AllureSupportTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . withAllureSupport () ) { If you want to specify the parameters or add more interceptors you can use addAllureSupport function: class AllureSupportCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple ( customize = { videoParams = VideoParams ( bitRate = 10 _000_000 ) screenshotParams = ScreenshotParams ( quality = 1 ) } ). addAllureSupport (). apply { testRunWatcherInterceptors . apply { add ( object : TestRunWatcherInterceptor { override fun onTestFinished ( testInfo : TestInfo , success : Boolean ) { viewHierarchyDumper . dumpAndApply ( \"ViewHierarchy\" ) { attachViewHierarchyToAllureReport () } } }) } } ) { ... } If you don't need all of these interceptors providing by withAllureSupport and addAllureSupport functions then you may add only interceptors that you prefer. But please note that AllureMapperStepInterceptor.kt is mandatory for Allure support work. For example, if you don't need videos and view hierarchies after test failures then you can do something like: class AllureSupportCustomizeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple (). apply { stepWatcherInterceptors . addAll ( listOf ( ScreenshotStepInterceptor ( screenshots ), AllureMapperStepInterceptor () ) ) testRunWatcherInterceptors . addAll ( listOf ( DumpLogcatTestInterceptor ( logcatDumper ), ScreenshotTestInterceptor ( screenshots ), ) ) } ) { ... } kaspresso-allure-support-sample is available to watch, to launch and to experiment with all of this staff.","title":"How to use"},{"location":"Wiki/Kaspresso_Allure/#watch-result","text":"So you added the list of needed Allure-supporting interceptors to your Kaspresso configuration and launched the test. After the test finishes there will be sdcard/allure-results dir created on the device with all the files processed to be included to Allure-report. This dir should be moved from the device to the host machine which will do generate the report. For example, you can use adb pull command on your host for this. Let say you want to locate the data for the report at /Users/username/Desktop/allure-results , so you call: adb pull /sdcard/allure-results /Users/username/Desktop If there are few devices connected to yout host you should specify the needed device id. To watch the list of connected devices you can call: adb devices The output will be something like: List of devices attached CLCDU18508004769 device emulator-5554 device Select the needed device and call: adb -s emulator-5554 pull /sdcard/allure-results /Users/username/Desktop And that's it, the allure-results dir with all the test resources is now at /Users/username/Desktop . Now, we want to generate and watch the report. The Allure server must be installed on our machine for this. To find out how to do it with all the details please follow the Allure docs . For example to install Allure server on MacOS we can use the following command: brew install allure Now we are ready to generate and watch the report, just call: allure serve /Users/username/Desktop/allure-results Next, the Allure server generates the html-page representing the report and puts it to temp dir in your system. You will see the report opening in the new tab in your browser (the tab is opening automatically). If you want to save the generated html-report to a specific dir for future use you can just call: allure generate -o ~/kaspresso-allure-report /Users/username/Desktop/allure-results And to watch it then in your browser you just call: allure open ~/kaspresso-allure-report After all of this actions you see something like: Details for succeeded test: Details for failed test:","title":"Watch result"},{"location":"Wiki/Kaspresso_Allure/#details-that-you-need-to-know","text":"By default, Kaspresso-Allure introduces additional timeouts to assure the correctness of a Video recording as much as possible. To summarize, these timeouts increase a test execution time by 5 seconds. You are free to change these values by customizing videoParams in Kaspresso.Builder . See the example above.","title":"Details that you need to know"},{"location":"Wiki/Kaspresso_Robolectric/","text":"Kaspresso tests running on the JVM with Robolectric Main purpose Since Robolectric 4.0, we can also run Espresso-like tests also on the JVM with Robolectric. That is part of the Project nitrogen from Google (which became Unified Test Platform), where they want to allow developers to write UI test once, and run them everywhere. However, before Kaspresso 1.3.0, if you tried to run Kaspresso-like test extending TestCase on the JVM with Robolectric, you got the following error: java.lang.NullPointerException at androidx.test.uiautomator.QueryController.<init>(QueryController.java:95) at androidx.test.uiautomator.UiDevice.<init>(UiDevice.java:109) at androidx.test.uiautomator.UiDevice.getInstance(UiDevice.java:261) at com.kaspersky.kaspresso.kaspresso.Kaspresso$Builder.<init>(Kaspresso.kt:297) at com.kaspersky.kaspresso.kaspresso.Kaspresso$Builder$Companion.simple(Kaspresso.kt:215) ... That is because Robolectric is just compatible with Espresso and not with uiAutomator. Now, all Kaspresso tests are allowed to be executed correctly on the JVM with Robolectric with the following restrictions: 1. Easy configuration of your project according to Robolectric guideline . 2. Not possible to use adb-server because there is no a term like \"Desktop\" on the JVM environment. Tests that use adb-server will crash on the JVM with Robolectric with very explaining error message. 3. Not possible to work with UiDevice and UiAutomation classes. That's why a lot of (not all!) implementations in Device will crash on the JVM with Robolectric with NotSupportedInstrumentalTestException . 4. Non working Kautomator. Mentioned problem with UiDevice and UiAutomation classes affect the entire Kautomator. So, tests using Kautomator will crash on the JVM with Robolectric with KautomatorInUnitTestException . 5. Interceptors that use UiDevice , UiAutomation or adb-server are turning off on the JVM with Robolectric automatically. 6. DocLocScreenshotTestCase will crash on the JVM with Robolectric with DocLocInUnitTestException . Usage To create a test that can run on a device/emulator and on the JVM, we recommend to create a sharedTest folder, and configure sourceSets in gradle accordingly, similar to what you can see under the build.gradle.kts :samples:kaspresso-sample sourceSets { ... //configure shared test folder val sharedTestFolder = \"src/sharedTest/kotlin\" val androidTest by getting { java . srcDirs ( \"src/androidTest/java\" , sharedTestFolder ) } val test by getting { java . srcDirs ( \"src/test/java\" , sharedTestFolder ) } } It is also important that such tests use @RunWith(AndroidJUnit4::class) , since it is required by Robolectric. In order to run your shared tests as Unit Tests on the JVM, you need to run a command looking like this: ./gradlew :MODULE:testVARIANTUnitTest --info --tests \"PACKAGE.CLASS\" For example, to run the sample RobolectricTest on the JVM you need to run: ./gradlew :samples:kaspresso-sample:testDebugUnitTest --info --tests \"com.kaspersky.kaspressample.sharedtest.SharedSimpleFlakyTest\" To run them on a device/emulator, the command to run would look like this: ./gradlew :MODULE:connectedVARIANTAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=PACKAGE.CLASS For instance, to run the sample SharedTest on a device/emulator, you need to run: ./gradlew :samples:kaspresso-sample:connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.kaspersky.kaspressample.sharedtest.SharedSimpleFlakyTest Accommodation of tests to work on the JVM (with Robolectric) environment We've prepared a bunch of tools and advices to accommodate your tests for the JVM (with Robolectric) environment. Let's consider the most popular problem when a test uses a class containing calls to UiDevice / UiAutomation / AdbServer or other not working in JVM environment things. For example, your test looks like below: @RunWith ( AndroidJUnit4 :: class ) class FailingSharedTest : TestCase () { @get : Rule val runtimePermissionRule : GrantPermissionRule = GrantPermissionRule . grant ( Manifest . permission . WRITE_EXTERNAL_STORAGE , Manifest . permission . READ_EXTERNAL_STORAGE ) @get : Rule val activityTestRule = ActivityTestRule ( DeviceSampleActivity :: class . java , false , true ) @Test fun exploitSampleTest () = run { step ( \"Press Home button\" ) { device . exploit . pressHome () } //... } } device.exploit.pressHome() calls UiDevice under the hood and it leads to a crash the JVM environment. There is following possible solution: // change an implementation of Exploit class @RunWith ( AndroidJUnit4 :: class ) class FailingSharedTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { exploit = if ( isAndroidRuntime ) ExploitImpl () // old implementation else ExploitUnit () // new implementation without UiDevice } ) { ... } // isAndroidRuntime property is available in Kaspresso.Builder. Also, if your custom Interceptor uses UiDevice / UiAutomation / AdbServer then you can turn off this Interceptor for JVM. The example: class KaspressoConfiguringTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { viewBehaviorInterceptors = if ( isAndroidRuntime ) mutableListOf ( YourCustomInterceptor () FlakySafeViewBehaviorInterceptor ( flakySafetyParams , libLogger ) ) else mutableListOf ( FlakySafeViewBehaviorInterceptor ( flakySafetyParams , libLogger ) ) } ) { ... } Of course, there is a very obvious last option. Just don't include the test in a set of Unit tests. Further remarks As of Robolectric 4.8.1, there are some limitations to sharedTest: those tests run flawless on an emulator/device, but fail on the JVM 1) Robolectric-Espresso supports Idling resources, but doesn't support posting delayed messages to the looper 2) Robolectric-Espresso will not support tests that start new activities (i.e. activity jumping)","title":"Kaspresso with Robolectric"},{"location":"Wiki/Kaspresso_Robolectric/#kaspresso-tests-running-on-the-jvm-with-robolectric","text":"","title":"Kaspresso tests running on the JVM with Robolectric"},{"location":"Wiki/Kaspresso_Robolectric/#main-purpose","text":"Since Robolectric 4.0, we can also run Espresso-like tests also on the JVM with Robolectric. That is part of the Project nitrogen from Google (which became Unified Test Platform), where they want to allow developers to write UI test once, and run them everywhere. However, before Kaspresso 1.3.0, if you tried to run Kaspresso-like test extending TestCase on the JVM with Robolectric, you got the following error: java.lang.NullPointerException at androidx.test.uiautomator.QueryController.<init>(QueryController.java:95) at androidx.test.uiautomator.UiDevice.<init>(UiDevice.java:109) at androidx.test.uiautomator.UiDevice.getInstance(UiDevice.java:261) at com.kaspersky.kaspresso.kaspresso.Kaspresso$Builder.<init>(Kaspresso.kt:297) at com.kaspersky.kaspresso.kaspresso.Kaspresso$Builder$Companion.simple(Kaspresso.kt:215) ... That is because Robolectric is just compatible with Espresso and not with uiAutomator. Now, all Kaspresso tests are allowed to be executed correctly on the JVM with Robolectric with the following restrictions: 1. Easy configuration of your project according to Robolectric guideline . 2. Not possible to use adb-server because there is no a term like \"Desktop\" on the JVM environment. Tests that use adb-server will crash on the JVM with Robolectric with very explaining error message. 3. Not possible to work with UiDevice and UiAutomation classes. That's why a lot of (not all!) implementations in Device will crash on the JVM with Robolectric with NotSupportedInstrumentalTestException . 4. Non working Kautomator. Mentioned problem with UiDevice and UiAutomation classes affect the entire Kautomator. So, tests using Kautomator will crash on the JVM with Robolectric with KautomatorInUnitTestException . 5. Interceptors that use UiDevice , UiAutomation or adb-server are turning off on the JVM with Robolectric automatically. 6. DocLocScreenshotTestCase will crash on the JVM with Robolectric with DocLocInUnitTestException .","title":"Main purpose"},{"location":"Wiki/Kaspresso_Robolectric/#usage","text":"To create a test that can run on a device/emulator and on the JVM, we recommend to create a sharedTest folder, and configure sourceSets in gradle accordingly, similar to what you can see under the build.gradle.kts :samples:kaspresso-sample sourceSets { ... //configure shared test folder val sharedTestFolder = \"src/sharedTest/kotlin\" val androidTest by getting { java . srcDirs ( \"src/androidTest/java\" , sharedTestFolder ) } val test by getting { java . srcDirs ( \"src/test/java\" , sharedTestFolder ) } } It is also important that such tests use @RunWith(AndroidJUnit4::class) , since it is required by Robolectric. In order to run your shared tests as Unit Tests on the JVM, you need to run a command looking like this: ./gradlew :MODULE:testVARIANTUnitTest --info --tests \"PACKAGE.CLASS\" For example, to run the sample RobolectricTest on the JVM you need to run: ./gradlew :samples:kaspresso-sample:testDebugUnitTest --info --tests \"com.kaspersky.kaspressample.sharedtest.SharedSimpleFlakyTest\" To run them on a device/emulator, the command to run would look like this: ./gradlew :MODULE:connectedVARIANTAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=PACKAGE.CLASS For instance, to run the sample SharedTest on a device/emulator, you need to run: ./gradlew :samples:kaspresso-sample:connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.kaspersky.kaspressample.sharedtest.SharedSimpleFlakyTest","title":"Usage"},{"location":"Wiki/Kaspresso_Robolectric/#accommodation-of-tests-to-work-on-the-jvm-with-robolectric-environment","text":"We've prepared a bunch of tools and advices to accommodate your tests for the JVM (with Robolectric) environment. Let's consider the most popular problem when a test uses a class containing calls to UiDevice / UiAutomation / AdbServer or other not working in JVM environment things. For example, your test looks like below: @RunWith ( AndroidJUnit4 :: class ) class FailingSharedTest : TestCase () { @get : Rule val runtimePermissionRule : GrantPermissionRule = GrantPermissionRule . grant ( Manifest . permission . WRITE_EXTERNAL_STORAGE , Manifest . permission . READ_EXTERNAL_STORAGE ) @get : Rule val activityTestRule = ActivityTestRule ( DeviceSampleActivity :: class . java , false , true ) @Test fun exploitSampleTest () = run { step ( \"Press Home button\" ) { device . exploit . pressHome () } //... } } device.exploit.pressHome() calls UiDevice under the hood and it leads to a crash the JVM environment. There is following possible solution: // change an implementation of Exploit class @RunWith ( AndroidJUnit4 :: class ) class FailingSharedTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { exploit = if ( isAndroidRuntime ) ExploitImpl () // old implementation else ExploitUnit () // new implementation without UiDevice } ) { ... } // isAndroidRuntime property is available in Kaspresso.Builder. Also, if your custom Interceptor uses UiDevice / UiAutomation / AdbServer then you can turn off this Interceptor for JVM. The example: class KaspressoConfiguringTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { viewBehaviorInterceptors = if ( isAndroidRuntime ) mutableListOf ( YourCustomInterceptor () FlakySafeViewBehaviorInterceptor ( flakySafetyParams , libLogger ) ) else mutableListOf ( FlakySafeViewBehaviorInterceptor ( flakySafetyParams , libLogger ) ) } ) { ... } Of course, there is a very obvious last option. Just don't include the test in a set of Unit tests. Further remarks As of Robolectric 4.8.1, there are some limitations to sharedTest: those tests run flawless on an emulator/device, but fail on the JVM 1) Robolectric-Espresso supports Idling resources, but doesn't support posting delayed messages to the looper 2) Robolectric-Espresso will not support tests that start new activities (i.e. activity jumping)","title":"Accommodation of tests to work on the JVM (with Robolectric) environment"},{"location":"Wiki/Kaspresso_configuration/","text":"Kaspresso configurator Kaspresso class - is a single point to set Kaspresso parameters. A developer can customize Kaspresso by setting Kaspresso.Builder at constructors of TestCase , BaseTestCase , TestCaseRule , BaseTestCaseRule . The example: class SomeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { beforeEachTest { testLogger . i ( \"The beginning\" ) } afterEachTest { testLogger . i ( \"The end\" ) } } ) { // your test } Structure Kaspresso configuration contains: Loggers libLogger - inner Kaspresso logger testLogger - logger that is available for developers in tests. It's accessible by testLogger property in test sections ( before, after, init, transform, run ) in the test dsl (by TestContext class). Also, it is available while setting Kaspresso.Builder if you want to add it to your custom interceptors, for example. Kaspresso interceptors based on Kakao/Kautomator Interceptors. These interceptors were introduced to simplify and uniform using of Kakao interceptors and Kautomator interceptors . Important moment about a mixing of Kaspresso interceptors and Kakao/Kautomator interceptors. Kaspresso interceptors will not work if you set your custom Kakao interceptors by calling of Kakao.intercept method in the test or set your custom Kautomator interceptors by calling of Kautomator.intercept in the test. If you set your custom Kakao interceptors for concrete Screen or KView and set argument isOverride in true then Kaspresso interceptors will not work for concrete Screen or KView fully. The same statement is right for Kautomator where a developer interacts with UiScreen and UiBaseView . Kaspresso interceptors can be divided into two types: 1. Behavior Interceptors - are intercepting calls to ViewInteraction , DataInteraction , WebInteraction , UiObjectInteraction , UiDeviceInteraction and do some stuff. Attention , we are going to consider some important notes about Behavior Interceptors at the end of this document. 2. Watcher Interceptors - are intercepting calls to ViewAction , ViewAssertion , Atom , WebAssertion , UiObjectAssertion , UiObjectAction , UiDeviceAssertion , UiDeviceAction and do some stuff. Let's expand mentioned Kaspresso interceptors types: 1. Behavior Interceptors 1. viewBehaviorInterceptors - intercept calls to ViewInteraction#perform and ViewInteraction#check 2. dataBehaviorInterceptors - intercept calls to DataInteraction#check 3. webBehaviorInterceptors - intercept calls to Web.WebInteraction<R>#perform and Web.WebInteraction<R>#check 4. objectBehaviorInterceptors - intercept calls to UiObjectInteraction#perform and UiObjectInteraction#check 5. deviceBehaviorInterceptors - intercept calls to UiDeviceInteraction#perform and UiDeviceInteraction#check 2. Watcher Interceptors 1. viewActionWatcherInterceptors - do some stuff before android.support.test.espresso.ViewAction.perform is actually called 2. viewAssertionWatcherInterceptors - do some stuff before android.support.test.espresso.ViewAssertion.check is actually called 3. atomWatcherInterceptors - do some stuff before android.support.test.espresso.web.model.Atom.transform is actually called 4. webAssertionWatcherInterceptors - do some stuff before android.support.test.espresso.web.assertion.WebAssertion.checkResult is actually called 5. objectWatcherInterceptors - do some stuff before UiObjectInteraction.perform or UiObjectInteraction.check is actually called 6. deviceWatcherInterceptors - do some stuff before UiDeviceInteraction.perform or UiDeviceInteraction.check is actually called Please, remember! Behavior and watcher interceptors work under the hood in every action and assertion of every View of Kakao and Kautomator by default in Kaspresso. Special Kaspresso interceptors These interceptors are not based on some lib. Short description: 1. stepWatcherInterceptors - an interceptor of Step lifecycle actions 2. testRunWatcherInterceptors - an interceptor of entire Test lifecycle actions As you noticed these interceptors are a part of Watcher Interceptors , also. BuildStepReportWatcherInterceptor This watcher interceptor by default is included into Kaspresso configurator to collect your tests steps information for further processing in tests orchestrator. By default this interceptor is based on AllureReportWriter (if you don't know what Allure is you should really check on it). This report writer works with each TestInfo after test finishing, converts its steps information into Allure's steps info JSON, and then prints JSON into LogCat in the following format: I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: TEST PASSED I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: #AllureStepsInfoJson#: [{\"attachments\":[],\"name\":\"My step 1\",\"parameters\":[],\"stage\":\"finished\",\"start\":1568790287246,\"status\":\"passed\", \"steps\":[],\"stop\":1568790288184}] This logs should be processed by your test orchestrator (e.g. Marathon ). If you use Marathon you should know that the latest version requires some additional modifications to support processing this logs and doesn't work as expected at the current moment. But we are working hard on it. Default actions in before/after sections Sometimes, a developer wishes to put some actions repeating in all tests before/after into a single place to simplify the maintenance of tests. You can make a remark that there are @beforeTest/@afterTest annotations to resolve mentioned tasks. But the developer doesn't have an access to BaseTestContext in those methods. That's why we have introduced special default actions that you can set in constructor by Kaspresso.Builder . The example how to implement default actions in Kaspresso.Builder is: open class YourTestCase : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { beforeEachTest { testLogger . i ( \"beforeTestFirstAction\" ) } afterEachTest { testLogger . i ( \"afterTestFirstAction\" ) } } ) The full signature of beforeEachTest is: beforeEachTest ( override = true , action = { testLogger . i ( \"beforeTestFirstAction\" ) }) afterEachTest is similar to beforeEachTest . If you set override in false then the final beforeAction will be beforeAction of the parent TestCase plus current action . Otherwise, final beforeAction will be only current action . How it's work and how to override (or just extend) default action, please, observe the example . Device Device instance. Detailed info is at Device wiki AdbServer AdbServer instance. Detailed info is at AdbServer wiki Kaspresso configuring and Kaspresso interceptors example The example of how to configure Kaspresso and how to use Kaspresso interceptors is in here . Default Kaspresso settings BaseTestCase , TestCase , BaseTestCaseRule , TestCaseRule are using default customized Kaspresso ( Kaspresso.Builder.simple builder). Most valuable features of default customized Kaspresso are below. Logging Just start SimpleTest . Next, you will see those logspen Simple Screen\" in SimpleTest I/KASPRESSO_SPECIAL: I am kLogger I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@95afab5' assertion on view (with id: com.kaspersky.kaspressample:id/activity_main_button_next) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatButton(id=activity_main_button_next;text=Next;) I/KASPRESSO: single click on AppCompatButton(id=activity_main_button_next;text=Next;) I/KASPRESSO: TEST STEP: \"1. Open Simple Screen\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 618 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"2. Click button_1 and check button_2\" in SimpleTest I/KASPRESSO: single click on AppCompatButton(id=button_1;text=Button 1;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@9f38781' assertion on view (with id: com.kaspersky.kaspressample:id/button_2) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatButton(id=button_2;text=Button 2;) I/KASPRESSO: TEST STEP: \"2. Click button_1 and check button_2\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 301 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"3. Click button_2 and check edit\" in SimpleTest I/KASPRESSO: single click on AppCompatButton(id=button_2;text=Button 2;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@ad01abd' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatEditText(id=edit;text=Some text;) E/KASPRESSO: Failed to interact with view matching: (with id: com.kaspersky.kaspressample:id/edit) because of AssertionFailedError I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@d0f1c0a' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatEditText(id=edit;text=Some text;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@3b62c7b' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check with string from resource id: <2131558461> on AppCompatEditText(id=edit;text=Some text;) I/KASPRESSO: TEST STEP: \"3. Click button_2 and check edit\" in SimpleTest SUCCEED. It took 0 minutes, 2 seconds and 138 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4. Check all possibilities of edit\" in SimpleTest I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4.1. Change the text in edit and check it\" in SimpleTest I/KASPRESSO: replace text on AppCompatEditText(id=edit;text=Some text;) I/KASPRESSO: type text(111) on AppCompatEditText(id=edit;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@dbd9c8' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check with text: is \"111\" on AppCompatEditText(id=edit;text=111;) I/KASPRESSO: TEST STEP: \"4.1. Change the text in edit and check it\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 621 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4.2. Change the text in edit and check it. Second check\" in SimpleTest I/KASPRESSO: replace text on AppCompatEditText(id=edit;text=111;) I/KASPRESSO: type text(222) on AppCompatEditText(id=edit;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@b8ca74' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check with text: is \"222\" on AppCompatEditText(id=edit;text=222;) I/KASPRESSO: TEST STEP: \"4.2. Change the text in edit and check it. Second check\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 403 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4. Check all possibilities of edit\" in SimpleTest SUCCEED. It took 0 minutes, 1 seconds and 488 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: AFTER TEST SECTION I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: TEST PASSED I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: #AllureStepsInfoJson#: [{\"attachments\":[],\"name\":\"My step 1\",\"parameters\":[],\"stage\":\"finished\",\"start\":1568790287246,\"status\":\"passed\", \"steps\":[],\"stop\":1568790288184}] I/KASPRESSO: --------------------------------------------------------------------------- Pretty good. Screenshots A developer receives a screenshot after each Step and after any error. Screenshots are saving at Device in \"sdcard/screenshots/\". But you can turn off this feature using Kaspresso.Builder.simple builder. Defense from flaky tests If a failure occurs then Kaspresso tries to fix it using a big set of diverse ways. This defense works for every action and assertion of each View of Kakao and Kautomator! You just need to extend your test class from TestCase ( BaseTestCase ) or to set TestCaseRule ( BaseTestCaseRule ) in your test. More detailed info about some ways of defense is below Interceptors Interceptors turned by default: 1. Watcher interceptors 2. Behavior interceptors 3. Kaspresso interceptors 4. BuildStepReportWatcherInterceptor So, all features described above are available thanks to these interceptors. Some words about Behavior Interceptors Any lib for ui-tests is flaky. It's a hard truth of life. Any action/assert in your test may fail for some undefined reason. What general kinds of flaky errors exist: 1. Common flaky errors that happened because Espresso/UI Automator was in a bad mood =) That's why Kaspresso wraps all actions/assertions of Kakao/Kautomator and handles set of potential flaky exceptions. If an exception happened then Kaspresso attempts to repeat failed actions/assert for 10 seconds. Such handling rescues developers of any flaky action/assert. The details are available at flakysafety and examples are here . 2. The reason of a failure is non visibility of a View. In most cases you just need to scroll a parent layout to make the View visible. So, Kaspresso tries to perform it in auto mode. The details are available at autoscroll . 3. Also, Kaspresso attempts to remove all system dialogs if it prevents the test execution. The details are available at systemsafety . These handlings are possible thanks to BehaviorInterceptors . Also, you can set your custom processing by Kaspresso.Builder . But remember, the order of BehaviorInterceptors is significant: the first item will be at the lowest level of intercepting chain, and the last item will be at the highest level. Let's consider the work principle of BehaviorInterceptors over Kakao interceptors. The first item actually wraps the androidx.test.espresso.ViewInteraction.perform call, the second item wraps the first item, and so on. Have a glance at the order of BehaviorInterceptors enabled by default in Kaspresso over Kakao. It's: 1. AutoScrollViewBehaviorInterceptor 2. SystemDialogSafetyViewBehaviorInterceptor 3. FlakySafeViewBehaviorInterceptor Under the hood, all Kakao actions and assertions first of all call FlakySafeViewBehaviorInterceptor that calls SystemDialogSafetyViewBehaviorInterceptor and that calls AutoScrollViewBehaviorInterceptor . If a result of AutoScrollViewBehaviorInterceptor handling is an error then SystemDialogSafetyViewBehaviorInterceptor attempts to handle received error. If a result of SystemDialogSafetyViewBehaviorInterceptor handling is an error too then FlakySafeViewBehaviorInterceptor attempts to handle received the error. To simplify the discussed topic we have drawn a picture: Main section enrichers Developer also can extends parametrized tests functionality by providing MainSectionEnricher in BaseTestCase or BaseTestCaseRule . The main idea of enrichers - allow adding additional test case's steps before and after the main section's run block. All you need to do is: Define your enricher implementation for MainSectionEnricher interface; class LoggingMainSectionEnricher : MainSectionEnricher < TestCaseData > { ... } Here, TestCaseData is the same data type as in your BaseTestCase implementation. Override beforeMainSectionRun or/and afterMainSectionRun methods to add your before/after actions; class LoggingMainSectionEnricher : MainSectionEnricher < TestCaseData > { override fun TestContext < TestCaseData > . beforeMainSectionRun ( testInfo : TestInfo ) { testLogger . d ( \"Before main section run... | ${ testInfo . testName } \" ) step ( \"Check users count...\" ) { testLogger . d ( \"Check users count: ${ data . users . size } \" ) } } override fun TestContext < TestCaseData > . afterMainSectionRun ( testInfo : TestInfo ) { testLogger . d ( \"After main section run... | ${ testInfo . testName } \" ) step ( \"Check posts count...\" ) { testLogger . d ( \"Check posts count: ${ data . posts . size } \" ) } } } In beforeMainSectionRun and afterMainSectionRun methods you have full access to TestContext<TestCaseData properties and methods, so you can use logger, add test case's steps and so on. Also, this methods received TestInfo parameter. Add your enrichers into your BaseTestCase implementation. class EnricherBaseTestCase : BaseTestCase < TestCaseDsl , TestCaseData > ( kaspresso = Kaspresso . Builder . default (), dataProducer = { action -> TestCaseDataCreator . initData ( action ) }, mainSectionEnrichers = listOf ( LoggingMainSectionEnricher (), AnalyticsMainSectionEnricher () ) ) After this manipulations your described actions will be executed before or after main section's run block.","title":"Kaspresso configuration"},{"location":"Wiki/Kaspresso_configuration/#kaspresso-configurator","text":"Kaspresso class - is a single point to set Kaspresso parameters. A developer can customize Kaspresso by setting Kaspresso.Builder at constructors of TestCase , BaseTestCase , TestCaseRule , BaseTestCaseRule . The example: class SomeTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { beforeEachTest { testLogger . i ( \"The beginning\" ) } afterEachTest { testLogger . i ( \"The end\" ) } } ) { // your test }","title":"Kaspresso configurator"},{"location":"Wiki/Kaspresso_configuration/#structure","text":"Kaspresso configuration contains:","title":"Structure"},{"location":"Wiki/Kaspresso_configuration/#loggers","text":"libLogger - inner Kaspresso logger testLogger - logger that is available for developers in tests. It's accessible by testLogger property in test sections ( before, after, init, transform, run ) in the test dsl (by TestContext class). Also, it is available while setting Kaspresso.Builder if you want to add it to your custom interceptors, for example.","title":"Loggers"},{"location":"Wiki/Kaspresso_configuration/#kaspresso-interceptors-based-on-kakaokautomator-interceptors","text":"These interceptors were introduced to simplify and uniform using of Kakao interceptors and Kautomator interceptors . Important moment about a mixing of Kaspresso interceptors and Kakao/Kautomator interceptors. Kaspresso interceptors will not work if you set your custom Kakao interceptors by calling of Kakao.intercept method in the test or set your custom Kautomator interceptors by calling of Kautomator.intercept in the test. If you set your custom Kakao interceptors for concrete Screen or KView and set argument isOverride in true then Kaspresso interceptors will not work for concrete Screen or KView fully. The same statement is right for Kautomator where a developer interacts with UiScreen and UiBaseView . Kaspresso interceptors can be divided into two types: 1. Behavior Interceptors - are intercepting calls to ViewInteraction , DataInteraction , WebInteraction , UiObjectInteraction , UiDeviceInteraction and do some stuff. Attention , we are going to consider some important notes about Behavior Interceptors at the end of this document. 2. Watcher Interceptors - are intercepting calls to ViewAction , ViewAssertion , Atom , WebAssertion , UiObjectAssertion , UiObjectAction , UiDeviceAssertion , UiDeviceAction and do some stuff. Let's expand mentioned Kaspresso interceptors types: 1. Behavior Interceptors 1. viewBehaviorInterceptors - intercept calls to ViewInteraction#perform and ViewInteraction#check 2. dataBehaviorInterceptors - intercept calls to DataInteraction#check 3. webBehaviorInterceptors - intercept calls to Web.WebInteraction<R>#perform and Web.WebInteraction<R>#check 4. objectBehaviorInterceptors - intercept calls to UiObjectInteraction#perform and UiObjectInteraction#check 5. deviceBehaviorInterceptors - intercept calls to UiDeviceInteraction#perform and UiDeviceInteraction#check 2. Watcher Interceptors 1. viewActionWatcherInterceptors - do some stuff before android.support.test.espresso.ViewAction.perform is actually called 2. viewAssertionWatcherInterceptors - do some stuff before android.support.test.espresso.ViewAssertion.check is actually called 3. atomWatcherInterceptors - do some stuff before android.support.test.espresso.web.model.Atom.transform is actually called 4. webAssertionWatcherInterceptors - do some stuff before android.support.test.espresso.web.assertion.WebAssertion.checkResult is actually called 5. objectWatcherInterceptors - do some stuff before UiObjectInteraction.perform or UiObjectInteraction.check is actually called 6. deviceWatcherInterceptors - do some stuff before UiDeviceInteraction.perform or UiDeviceInteraction.check is actually called Please, remember! Behavior and watcher interceptors work under the hood in every action and assertion of every View of Kakao and Kautomator by default in Kaspresso.","title":"Kaspresso interceptors based on Kakao/Kautomator Interceptors."},{"location":"Wiki/Kaspresso_configuration/#special-kaspresso-interceptors","text":"These interceptors are not based on some lib. Short description: 1. stepWatcherInterceptors - an interceptor of Step lifecycle actions 2. testRunWatcherInterceptors - an interceptor of entire Test lifecycle actions As you noticed these interceptors are a part of Watcher Interceptors , also.","title":"Special Kaspresso interceptors"},{"location":"Wiki/Kaspresso_configuration/#buildstepreportwatcherinterceptor","text":"This watcher interceptor by default is included into Kaspresso configurator to collect your tests steps information for further processing in tests orchestrator. By default this interceptor is based on AllureReportWriter (if you don't know what Allure is you should really check on it). This report writer works with each TestInfo after test finishing, converts its steps information into Allure's steps info JSON, and then prints JSON into LogCat in the following format: I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: TEST PASSED I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: #AllureStepsInfoJson#: [{\"attachments\":[],\"name\":\"My step 1\",\"parameters\":[],\"stage\":\"finished\",\"start\":1568790287246,\"status\":\"passed\", \"steps\":[],\"stop\":1568790288184}] This logs should be processed by your test orchestrator (e.g. Marathon ). If you use Marathon you should know that the latest version requires some additional modifications to support processing this logs and doesn't work as expected at the current moment. But we are working hard on it.","title":"BuildStepReportWatcherInterceptor"},{"location":"Wiki/Kaspresso_configuration/#default-actions-in-beforeafter-sections","text":"Sometimes, a developer wishes to put some actions repeating in all tests before/after into a single place to simplify the maintenance of tests. You can make a remark that there are @beforeTest/@afterTest annotations to resolve mentioned tasks. But the developer doesn't have an access to BaseTestContext in those methods. That's why we have introduced special default actions that you can set in constructor by Kaspresso.Builder . The example how to implement default actions in Kaspresso.Builder is: open class YourTestCase : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { beforeEachTest { testLogger . i ( \"beforeTestFirstAction\" ) } afterEachTest { testLogger . i ( \"afterTestFirstAction\" ) } } ) The full signature of beforeEachTest is: beforeEachTest ( override = true , action = { testLogger . i ( \"beforeTestFirstAction\" ) }) afterEachTest is similar to beforeEachTest . If you set override in false then the final beforeAction will be beforeAction of the parent TestCase plus current action . Otherwise, final beforeAction will be only current action . How it's work and how to override (or just extend) default action, please, observe the example .","title":"Default actions in before/after sections"},{"location":"Wiki/Kaspresso_configuration/#device","text":"Device instance. Detailed info is at Device wiki","title":"Device"},{"location":"Wiki/Kaspresso_configuration/#adbserver","text":"AdbServer instance. Detailed info is at AdbServer wiki","title":"AdbServer"},{"location":"Wiki/Kaspresso_configuration/#kaspresso-configuring-and-kaspresso-interceptors-example","text":"The example of how to configure Kaspresso and how to use Kaspresso interceptors is in here .","title":"Kaspresso configuring and Kaspresso interceptors example"},{"location":"Wiki/Kaspresso_configuration/#default-kaspresso-settings","text":"BaseTestCase , TestCase , BaseTestCaseRule , TestCaseRule are using default customized Kaspresso ( Kaspresso.Builder.simple builder). Most valuable features of default customized Kaspresso are below.","title":"Default Kaspresso settings"},{"location":"Wiki/Kaspresso_configuration/#logging","text":"Just start SimpleTest . Next, you will see those logspen Simple Screen\" in SimpleTest I/KASPRESSO_SPECIAL: I am kLogger I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@95afab5' assertion on view (with id: com.kaspersky.kaspressample:id/activity_main_button_next) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatButton(id=activity_main_button_next;text=Next;) I/KASPRESSO: single click on AppCompatButton(id=activity_main_button_next;text=Next;) I/KASPRESSO: TEST STEP: \"1. Open Simple Screen\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 618 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"2. Click button_1 and check button_2\" in SimpleTest I/KASPRESSO: single click on AppCompatButton(id=button_1;text=Button 1;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@9f38781' assertion on view (with id: com.kaspersky.kaspressample:id/button_2) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatButton(id=button_2;text=Button 2;) I/KASPRESSO: TEST STEP: \"2. Click button_1 and check button_2\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 301 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"3. Click button_2 and check edit\" in SimpleTest I/KASPRESSO: single click on AppCompatButton(id=button_2;text=Button 2;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@ad01abd' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatEditText(id=edit;text=Some text;) E/KASPRESSO: Failed to interact with view matching: (with id: com.kaspersky.kaspressample:id/edit) because of AssertionFailedError I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@d0f1c0a' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check view has effective visibility=VISIBLE on AppCompatEditText(id=edit;text=Some text;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@3b62c7b' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check with string from resource id: <2131558461> on AppCompatEditText(id=edit;text=Some text;) I/KASPRESSO: TEST STEP: \"3. Click button_2 and check edit\" in SimpleTest SUCCEED. It took 0 minutes, 2 seconds and 138 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4. Check all possibilities of edit\" in SimpleTest I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4.1. Change the text in edit and check it\" in SimpleTest I/KASPRESSO: replace text on AppCompatEditText(id=edit;text=Some text;) I/KASPRESSO: type text(111) on AppCompatEditText(id=edit;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@dbd9c8' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check with text: is \"111\" on AppCompatEditText(id=edit;text=111;) I/KASPRESSO: TEST STEP: \"4.1. Change the text in edit and check it\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 621 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4.2. Change the text in edit and check it. Second check\" in SimpleTest I/KASPRESSO: replace text on AppCompatEditText(id=edit;text=111;) I/KASPRESSO: type text(222) on AppCompatEditText(id=edit;) I/ViewInteraction: Checking 'com.kaspersky.kaspresso.proxy.ViewAssertionProxy@b8ca74' assertion on view (with id: com.kaspersky.kaspressample:id/edit) I/KASPRESSO: Check with text: is \"222\" on AppCompatEditText(id=edit;text=222;) I/KASPRESSO: TEST STEP: \"4.2. Change the text in edit and check it. Second check\" in SimpleTest SUCCEED. It took 0 minutes, 0 seconds and 403 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: TEST STEP: \"4. Check all possibilities of edit\" in SimpleTest SUCCEED. It took 0 minutes, 1 seconds and 488 millis. I/KASPRESSO: ___________________________________________________________________________ I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: AFTER TEST SECTION I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: TEST PASSED I/KASPRESSO: --------------------------------------------------------------------------- I/KASPRESSO: #AllureStepsInfoJson#: [{\"attachments\":[],\"name\":\"My step 1\",\"parameters\":[],\"stage\":\"finished\",\"start\":1568790287246,\"status\":\"passed\", \"steps\":[],\"stop\":1568790288184}] I/KASPRESSO: --------------------------------------------------------------------------- Pretty good.","title":"Logging"},{"location":"Wiki/Kaspresso_configuration/#screenshots","text":"A developer receives a screenshot after each Step and after any error. Screenshots are saving at Device in \"sdcard/screenshots/\". But you can turn off this feature using Kaspresso.Builder.simple builder.","title":"Screenshots"},{"location":"Wiki/Kaspresso_configuration/#defense-from-flaky-tests","text":"If a failure occurs then Kaspresso tries to fix it using a big set of diverse ways. This defense works for every action and assertion of each View of Kakao and Kautomator! You just need to extend your test class from TestCase ( BaseTestCase ) or to set TestCaseRule ( BaseTestCaseRule ) in your test. More detailed info about some ways of defense is below","title":"Defense from flaky tests"},{"location":"Wiki/Kaspresso_configuration/#interceptors","text":"Interceptors turned by default: 1. Watcher interceptors 2. Behavior interceptors 3. Kaspresso interceptors 4. BuildStepReportWatcherInterceptor So, all features described above are available thanks to these interceptors.","title":"Interceptors"},{"location":"Wiki/Kaspresso_configuration/#some-words-about-behavior-interceptors","text":"Any lib for ui-tests is flaky. It's a hard truth of life. Any action/assert in your test may fail for some undefined reason. What general kinds of flaky errors exist: 1. Common flaky errors that happened because Espresso/UI Automator was in a bad mood =) That's why Kaspresso wraps all actions/assertions of Kakao/Kautomator and handles set of potential flaky exceptions. If an exception happened then Kaspresso attempts to repeat failed actions/assert for 10 seconds. Such handling rescues developers of any flaky action/assert. The details are available at flakysafety and examples are here . 2. The reason of a failure is non visibility of a View. In most cases you just need to scroll a parent layout to make the View visible. So, Kaspresso tries to perform it in auto mode. The details are available at autoscroll . 3. Also, Kaspresso attempts to remove all system dialogs if it prevents the test execution. The details are available at systemsafety . These handlings are possible thanks to BehaviorInterceptors . Also, you can set your custom processing by Kaspresso.Builder . But remember, the order of BehaviorInterceptors is significant: the first item will be at the lowest level of intercepting chain, and the last item will be at the highest level. Let's consider the work principle of BehaviorInterceptors over Kakao interceptors. The first item actually wraps the androidx.test.espresso.ViewInteraction.perform call, the second item wraps the first item, and so on. Have a glance at the order of BehaviorInterceptors enabled by default in Kaspresso over Kakao. It's: 1. AutoScrollViewBehaviorInterceptor 2. SystemDialogSafetyViewBehaviorInterceptor 3. FlakySafeViewBehaviorInterceptor Under the hood, all Kakao actions and assertions first of all call FlakySafeViewBehaviorInterceptor that calls SystemDialogSafetyViewBehaviorInterceptor and that calls AutoScrollViewBehaviorInterceptor . If a result of AutoScrollViewBehaviorInterceptor handling is an error then SystemDialogSafetyViewBehaviorInterceptor attempts to handle received error. If a result of SystemDialogSafetyViewBehaviorInterceptor handling is an error too then FlakySafeViewBehaviorInterceptor attempts to handle received the error. To simplify the discussed topic we have drawn a picture:","title":"Some words about Behavior Interceptors"},{"location":"Wiki/Kaspresso_configuration/#main-section-enrichers","text":"Developer also can extends parametrized tests functionality by providing MainSectionEnricher in BaseTestCase or BaseTestCaseRule . The main idea of enrichers - allow adding additional test case's steps before and after the main section's run block. All you need to do is: Define your enricher implementation for MainSectionEnricher interface; class LoggingMainSectionEnricher : MainSectionEnricher < TestCaseData > { ... } Here, TestCaseData is the same data type as in your BaseTestCase implementation. Override beforeMainSectionRun or/and afterMainSectionRun methods to add your before/after actions; class LoggingMainSectionEnricher : MainSectionEnricher < TestCaseData > { override fun TestContext < TestCaseData > . beforeMainSectionRun ( testInfo : TestInfo ) { testLogger . d ( \"Before main section run... | ${ testInfo . testName } \" ) step ( \"Check users count...\" ) { testLogger . d ( \"Check users count: ${ data . users . size } \" ) } } override fun TestContext < TestCaseData > . afterMainSectionRun ( testInfo : TestInfo ) { testLogger . d ( \"After main section run... | ${ testInfo . testName } \" ) step ( \"Check posts count...\" ) { testLogger . d ( \"Check posts count: ${ data . posts . size } \" ) } } } In beforeMainSectionRun and afterMainSectionRun methods you have full access to TestContext<TestCaseData properties and methods, so you can use logger, add test case's steps and so on. Also, this methods received TestInfo parameter. Add your enrichers into your BaseTestCase implementation. class EnricherBaseTestCase : BaseTestCase < TestCaseDsl , TestCaseData > ( kaspresso = Kaspresso . Builder . default (), dataProducer = { action -> TestCaseDataCreator . initData ( action ) }, mainSectionEnrichers = listOf ( LoggingMainSectionEnricher (), AnalyticsMainSectionEnricher () ) ) After this manipulations your described actions will be executed before or after main section's run block.","title":"Main section enrichers"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/","text":"Kautomator: wrapper over UI Automator Kautomator - Nice and simple DSL for UI Automator in Kotlin that allows to accelerate UI Automator to amazing. Inspired by Kakao and russian talk about UI Automator (thanks to Svetlana Smelchakova). Introduction Tests written with UI Automator are so complex, non-readble and hard to maintain especially for testers. Have a look at a typical piece of code written with UI Automator: val instrumentation : Instrumentation = InstrumentationRegistry . getInstrumentation () val uiDevice = UiDevice . getInstance ( instrumentation ) val uiObject = uiDevice . wait ( Until . findObject ( By . res ( \"com.kaspersky.kaspresso.sample_kautomator\" , \"editText\" ) ), 2 _000 ) uiObject . text = \"Kaspresso\" assertEquals ( uiObject . text , \"Kaspresso\" ) This is an example just to input and check the text. Because we have a successful experience of Kakao using we decided to wrap UI Automator over in the same manner and called it Kautomator : MainScreen { simpleEditText { replaceText ( \"Kaspresso\" ) hasText ( \"Kaspresso\" ) } } Another big advantage of Kautomator is a possibility to accelerate UI Automator. Have a glance at video below: The left video is boosted UI Automator, the right video is default UI Automator. Why is it possible? The details are available a little bit later . Benefits Readability Reusability Extensible DSL Amazing speed! How to use it Create Screen Create your entity UiScreen where you will add the views involved in the interactions of the tests: class FormScreen : UiScreen < FormScreen > () UiScreen can represent the whole user interface or a portion of UI. If you are using Page Object pattern you can put the interactions of Kautomator inside the Page Objects. Create UiView UiScreen contains UiView , these are the Android Framework views where you want to do the interactions: class FormScreen : UiScreen < FormScreen > () { val phone = UiView { withId ( this @FormScreen.packageName , \"phone\" ) } val email = UiEditText { withId ( this @FormScreen.packageName , \"email_edit\" ) } val submit = UiButton { withId ( this @FormScreen.packageName , \"submit_button\" ) } } Kautomator provides different types depending on the type of view: * UiView * UiEditText * UiTextView * UiButton * UiCheckbox * UiChipGroup * UiSwitchView * UiScrollView * and more Every UiView contains matchers to retrieve the view involved in the ViewInteraction . Some examples of matchers provided by Kakao: withId withText withPackage withContentDescription textStartsWith and more Like in Ui Automator you can combine different matchers: val email = UiEditText { withId ( this @FormScreen.packageName , \"email\" ) withText ( this @FormScreen.packageName , \"matsyuk@kaspresso.com\" ) } Write the interaction The syntax of the test with Kautomator is very easy, once you have the UiScreen and the UiView defined, you only have to apply the actions or assertions like in UI Automator: FormScreen { phone { hasText ( \"971201771\" ) } button { click () } } The difference from Kakao-Espresso In Espresso, all interaction with a View is processing through ViewInteraction that has two main methods: onCheck and onPerform which take ViewAction and ViewAssertion as arguments. Kakao was written based on this architecture. So, we have set a goal to write Kautomator which would be like Kakao as much as possible. That's why we have introduced an additional layer over UiObject2 and UiDevice and that is so similar to ViewInteraction . This layer is represented by UiObjectInteraction and UiDeviceInteraction that have two methods: onCheck and onPerform taking UiObjectAssertion and UiObjectAction or UiDeviceAssertion and UiDeviceAction as arguments. UiObjectInteraction is designed to work with concrete View like ViewInteraction . UiDeviceInteraction has been created because UI Automator has a featureallowing you to do some system things like a click on Home button or on hard Back button, open Quick Setttings, open Notifications and so on. All such things are hidden by UiSystem class. So, enjoy it =) Advanced Custom UiView If you have custom Views in your tests and you want to create your own UiView , we have UiBaseView . Just extend this class and implement as much additional Action/Assertion interfaces as you want. You also need to override constructors that you need. class UiMyView : UiBaseView < KView > , UiMyActions , UiMyAssertions { constructor ( selector : UiViewSelector ) : super ( selector ) constructor ( builder : UiViewBuilder .() -> Unit ) : super ( builder ) } Intercepting If you need to add custom logic during the Kautomator -> UI Automator call chain (for example, logging) or if you need to completely change the UiAssertion or UiAction that are being sent to UI Automator during runtime in some cases, you can use the intercepting mechanism. Interceptors are lambdas that you pass to a configuration DSL that will be invoked before real calls inside UiObject2 and UiDevice classes in UI Automator. You have the ability to provide interceptors at 3 different levels: Kautomator runtime, your 'UiScreen' classes and any individual UiView instance. On each invocation of UI Automator function that can be intercepted, Kautomator will aggregate all available interceptors for this particular call and invoke them in descending order: UiView interceptor -> Active Screens interceptors -> Kautomator interceptor . Each of the interceptors in the chain can break the chain call by setting isOverride to true during configuration. In that case Kautomator will not only stop invoking remaining interceptors in the chain, but will not perform the UI Automator call . It means that in such case, the responsibility to actually invoke Kautomator lies on the shoulders of the developer. Here's the examples of intercepting configurations: class SomeTest { @Before fun setup () { KautomatorConfigurator { // Kautomator runtime intercept { onUiInteraction { // Intercepting calls on UiInteraction classes across whole runtime onPerform { uiInteraction , uiAction -> // Intercept perform() call testLogger . i ( \"KautomatorIntercept\" , \"interaction= $ uiInteraction , action= $ uiAction \" ) } } } } } @Test fun test () { MyScreen { intercept { onUiInteraction { // Intercepting calls on UiInteraction classes while in the context of MyScreen onCheck { uiInteraction , uiAssert -> // Intercept check() call testLogger . i ( \"KautomatorIntercept\" , \"interaction= $ uiInteraction , assert= $ uiAssert \" ) } } } myView { intercept { // Intercepting ViewInteraction calls on this individual view onPerform ( true ) { uiInteraction , uiAction -> // Intercept perform() call and overriding the chain // When performing actions on this view, Kautomator level interceptor will not be called // and we have to manually call UI Automator now. Log . d ( \"KAUTOMATOR_VIEW\" , \" $ uiInteraction is performing $ uiAction \" ) uiInteraction . perform ( uiAction ) } } } } } } For more detailed info please refer to the documentation. Accelerate UI Automator As you remember we told about the possible acceleration of UI Automator. How does it become a reality? UI Automator has an inner mechanism to prevent potential flakiness. Under the hood, the library listens and gives commands through AccessibilityManagerService. AccessibilityManagerService is a single point for all accessibility events in the system. At one moment, creators of UI Automator faced with the flakiness problem. One of the most popular reasons for such undetermined behavior is a big count of events processing in the System at the current moment. But UI Automator has a connection with AccessibilityManagerService. Such a connection gives an opportunity to listen to all accessibility events in the System and to wait for a calm state when there are no actions. The calm state leads to determined system behavior and decreases the possibility of flakiness. All of this pushed UI Automator authors to introduce the following algorithm: UI Automator waits 500ms ( waitForIdleTimeout and waitForSelectorTimeout in androidx.test.uiautomator.Configurator ) window during 10 seconds for each action . EACH ACTION. Perhaps, described solution made UI Automator more stable. But, the speed crashed, no doubts. Kautomator is a DSL over UI Automator that provides a mechanism of interceptors . Kaspresso offers a big set of default interceptors which eliminates any potential flaky action. So, Kaspresso + Kautomator helps UI Automator to struggle with flakiness. After some time, we thought why we need to save artificial timeouts inside UI Automator while Kaspresso + Kautomator does the same work. Have a look at the measure example: @RunWith ( AndroidJUnit4 :: class ) class KautomatorMeasureTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { kautomatorWaitForIdleSettings = KautomatorWaitForIdleSettings . boost () } ) { companion object { private val RANGE = 0. . 20 } @get : Rule val runtimePermissionRule : GrantPermissionRule = GrantPermissionRule . grant ( Manifest . permission . WRITE_EXTERNAL_STORAGE , Manifest . permission . READ_EXTERNAL_STORAGE ) @get : Rule val activityTestRule = ActivityTestRule ( MainActivity :: class . java , true , false ) @Test fun test () = before { activityTestRule . launchActivity ( null ) }. after { }. run { ======> UI Automator : 0 minutes , 1 seconds and 252 millis ======> UI Automator boost : 0 minutes , 0 seconds and 310 millis step ( \"MainScreen. Click on `measure fragment` button\" ) { UiMainScreen { measureButton { isDisplayed () click () } } } ======> UI Automator : 0 minutes , 11 seconds and 725 millis ======> UI Automator boost : 0 minutes , 1 seconds and 50 millis step ( \"Measure screen. Button_1 clicks comparing\" ) { UiMeasureScreen { RANGE . forEach { _ -> button1 { click () hasText ( device . targetContext . getString ( R . string . measure_fragment_text_button_1 ). toUpperCase ()) } } } } ======> UI Automator : 0 minutes , 11 seconds and 789 millis ======> UI Automator boost : 0 minutes , 1 seconds and 482 millis step ( \"Measure screen. Button_2 clicks and TextView changes comparing\" ) { UiMeasureScreen { RANGE . forEach { index -> button2 { click () hasText ( device . targetContext . getString ( R . string . measure_fragment_text_button_2 ). toUpperCase ()) } textView { hasText ( \" ${ device . targetContext . getString ( R . string . measure_fragment_text_textview ) }${ index + 1 } \" ) } } } } ======> UI Automator : 0 minutes , 45 seconds and 903 millis ======> UI Automator boost : 0 minutes , 2 seconds and 967 millis step ( \"Measure fragment. EditText updates comparing\" ) { UiMeasureScreen { edit { isDisplayed () hasText ( device . targetContext . getString ( R . string . measure_fragment_text_edittext )) RANGE . forEach { _ -> clearText () typeText ( \"bla-bla-bla\" ) hasText ( \"bla-bla-bla\" ) clearText () typeText ( \"mo-mo-mo\" ) hasText ( \"mo-mo-mo\" ) clearText () } } } } ======> UI Automator : 0 minutes , 10 seconds and 901 millis ======> UI Automator boost : 0 minutes , 1 seconds and 23 millis step ( \"Measure fragment. Checkbox clicks comparing\" ) { UiMeasureScreen { RANGE . forEach { index -> checkBox { if ( index % 2 == 0 ) { setChecked ( true ) isChecked () } else { setChecked ( false ) isNotChecked () } } } } } } } It's a great deal! Also, there are cases when UI Automator can't catch 500ms window. For example, when one element is updating too fast (one update in 100 ms). Just have a look at this test . Only KautomatorWaitForIdleSettings.boost() allows to pass the test. As you see, we have introduced a special kautomatorWaitForIdleSettings property in Kaspresso configurator. By default, this property is not boost. Why? Because: 1. You can have tests where you use UI Automator directly. But mentioned timeouts are global parameters. Resetting of these timeouts can lead to an undetermined state. 2. We want to take time collecting data from the world and then to analyze potential problems of our solutions (but, we believe it's a stable and brilliant solution). Another important remark is about kaspressoBuilder = Kaspresso.Builder.simple configuration. This configuration is faster than advanced because of each step's screenshots interceptor absence. If you need, add them manually. Anyway, it's a small change for a developer, but it's a big step for the world =)","title":"Kautomator. Wrapper over UI Automator"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#kautomator-wrapper-over-ui-automator","text":"Kautomator - Nice and simple DSL for UI Automator in Kotlin that allows to accelerate UI Automator to amazing. Inspired by Kakao and russian talk about UI Automator (thanks to Svetlana Smelchakova).","title":"Kautomator: wrapper over UI Automator"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#introduction","text":"Tests written with UI Automator are so complex, non-readble and hard to maintain especially for testers. Have a look at a typical piece of code written with UI Automator: val instrumentation : Instrumentation = InstrumentationRegistry . getInstrumentation () val uiDevice = UiDevice . getInstance ( instrumentation ) val uiObject = uiDevice . wait ( Until . findObject ( By . res ( \"com.kaspersky.kaspresso.sample_kautomator\" , \"editText\" ) ), 2 _000 ) uiObject . text = \"Kaspresso\" assertEquals ( uiObject . text , \"Kaspresso\" ) This is an example just to input and check the text. Because we have a successful experience of Kakao using we decided to wrap UI Automator over in the same manner and called it Kautomator : MainScreen { simpleEditText { replaceText ( \"Kaspresso\" ) hasText ( \"Kaspresso\" ) } } Another big advantage of Kautomator is a possibility to accelerate UI Automator. Have a glance at video below: The left video is boosted UI Automator, the right video is default UI Automator. Why is it possible? The details are available a little bit later .","title":"Introduction"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#benefits","text":"Readability Reusability Extensible DSL Amazing speed!","title":"Benefits"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#how-to-use-it","text":"","title":"How to use it"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#create-screen","text":"Create your entity UiScreen where you will add the views involved in the interactions of the tests: class FormScreen : UiScreen < FormScreen > () UiScreen can represent the whole user interface or a portion of UI. If you are using Page Object pattern you can put the interactions of Kautomator inside the Page Objects.","title":"Create Screen"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#create-uiview","text":"UiScreen contains UiView , these are the Android Framework views where you want to do the interactions: class FormScreen : UiScreen < FormScreen > () { val phone = UiView { withId ( this @FormScreen.packageName , \"phone\" ) } val email = UiEditText { withId ( this @FormScreen.packageName , \"email_edit\" ) } val submit = UiButton { withId ( this @FormScreen.packageName , \"submit_button\" ) } } Kautomator provides different types depending on the type of view: * UiView * UiEditText * UiTextView * UiButton * UiCheckbox * UiChipGroup * UiSwitchView * UiScrollView * and more Every UiView contains matchers to retrieve the view involved in the ViewInteraction . Some examples of matchers provided by Kakao: withId withText withPackage withContentDescription textStartsWith and more Like in Ui Automator you can combine different matchers: val email = UiEditText { withId ( this @FormScreen.packageName , \"email\" ) withText ( this @FormScreen.packageName , \"matsyuk@kaspresso.com\" ) }","title":"Create UiView"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#write-the-interaction","text":"The syntax of the test with Kautomator is very easy, once you have the UiScreen and the UiView defined, you only have to apply the actions or assertions like in UI Automator: FormScreen { phone { hasText ( \"971201771\" ) } button { click () } }","title":"Write the interaction"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#the-difference-from-kakao-espresso","text":"In Espresso, all interaction with a View is processing through ViewInteraction that has two main methods: onCheck and onPerform which take ViewAction and ViewAssertion as arguments. Kakao was written based on this architecture. So, we have set a goal to write Kautomator which would be like Kakao as much as possible. That's why we have introduced an additional layer over UiObject2 and UiDevice and that is so similar to ViewInteraction . This layer is represented by UiObjectInteraction and UiDeviceInteraction that have two methods: onCheck and onPerform taking UiObjectAssertion and UiObjectAction or UiDeviceAssertion and UiDeviceAction as arguments. UiObjectInteraction is designed to work with concrete View like ViewInteraction . UiDeviceInteraction has been created because UI Automator has a featureallowing you to do some system things like a click on Home button or on hard Back button, open Quick Setttings, open Notifications and so on. All such things are hidden by UiSystem class. So, enjoy it =)","title":"The difference from Kakao-Espresso"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#advanced","text":"","title":"Advanced"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#custom-uiview","text":"If you have custom Views in your tests and you want to create your own UiView , we have UiBaseView . Just extend this class and implement as much additional Action/Assertion interfaces as you want. You also need to override constructors that you need. class UiMyView : UiBaseView < KView > , UiMyActions , UiMyAssertions { constructor ( selector : UiViewSelector ) : super ( selector ) constructor ( builder : UiViewBuilder .() -> Unit ) : super ( builder ) }","title":"Custom UiView"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#intercepting","text":"If you need to add custom logic during the Kautomator -> UI Automator call chain (for example, logging) or if you need to completely change the UiAssertion or UiAction that are being sent to UI Automator during runtime in some cases, you can use the intercepting mechanism. Interceptors are lambdas that you pass to a configuration DSL that will be invoked before real calls inside UiObject2 and UiDevice classes in UI Automator. You have the ability to provide interceptors at 3 different levels: Kautomator runtime, your 'UiScreen' classes and any individual UiView instance. On each invocation of UI Automator function that can be intercepted, Kautomator will aggregate all available interceptors for this particular call and invoke them in descending order: UiView interceptor -> Active Screens interceptors -> Kautomator interceptor . Each of the interceptors in the chain can break the chain call by setting isOverride to true during configuration. In that case Kautomator will not only stop invoking remaining interceptors in the chain, but will not perform the UI Automator call . It means that in such case, the responsibility to actually invoke Kautomator lies on the shoulders of the developer. Here's the examples of intercepting configurations: class SomeTest { @Before fun setup () { KautomatorConfigurator { // Kautomator runtime intercept { onUiInteraction { // Intercepting calls on UiInteraction classes across whole runtime onPerform { uiInteraction , uiAction -> // Intercept perform() call testLogger . i ( \"KautomatorIntercept\" , \"interaction= $ uiInteraction , action= $ uiAction \" ) } } } } } @Test fun test () { MyScreen { intercept { onUiInteraction { // Intercepting calls on UiInteraction classes while in the context of MyScreen onCheck { uiInteraction , uiAssert -> // Intercept check() call testLogger . i ( \"KautomatorIntercept\" , \"interaction= $ uiInteraction , assert= $ uiAssert \" ) } } } myView { intercept { // Intercepting ViewInteraction calls on this individual view onPerform ( true ) { uiInteraction , uiAction -> // Intercept perform() call and overriding the chain // When performing actions on this view, Kautomator level interceptor will not be called // and we have to manually call UI Automator now. Log . d ( \"KAUTOMATOR_VIEW\" , \" $ uiInteraction is performing $ uiAction \" ) uiInteraction . perform ( uiAction ) } } } } } } For more detailed info please refer to the documentation.","title":"Intercepting"},{"location":"Wiki/Kautomator-wrapper_over_UI_Automator/#accelerate-ui-automator","text":"As you remember we told about the possible acceleration of UI Automator. How does it become a reality? UI Automator has an inner mechanism to prevent potential flakiness. Under the hood, the library listens and gives commands through AccessibilityManagerService. AccessibilityManagerService is a single point for all accessibility events in the system. At one moment, creators of UI Automator faced with the flakiness problem. One of the most popular reasons for such undetermined behavior is a big count of events processing in the System at the current moment. But UI Automator has a connection with AccessibilityManagerService. Such a connection gives an opportunity to listen to all accessibility events in the System and to wait for a calm state when there are no actions. The calm state leads to determined system behavior and decreases the possibility of flakiness. All of this pushed UI Automator authors to introduce the following algorithm: UI Automator waits 500ms ( waitForIdleTimeout and waitForSelectorTimeout in androidx.test.uiautomator.Configurator ) window during 10 seconds for each action . EACH ACTION. Perhaps, described solution made UI Automator more stable. But, the speed crashed, no doubts. Kautomator is a DSL over UI Automator that provides a mechanism of interceptors . Kaspresso offers a big set of default interceptors which eliminates any potential flaky action. So, Kaspresso + Kautomator helps UI Automator to struggle with flakiness. After some time, we thought why we need to save artificial timeouts inside UI Automator while Kaspresso + Kautomator does the same work. Have a look at the measure example: @RunWith ( AndroidJUnit4 :: class ) class KautomatorMeasureTest : TestCase ( kaspressoBuilder = Kaspresso . Builder . simple { kautomatorWaitForIdleSettings = KautomatorWaitForIdleSettings . boost () } ) { companion object { private val RANGE = 0. . 20 } @get : Rule val runtimePermissionRule : GrantPermissionRule = GrantPermissionRule . grant ( Manifest . permission . WRITE_EXTERNAL_STORAGE , Manifest . permission . READ_EXTERNAL_STORAGE ) @get : Rule val activityTestRule = ActivityTestRule ( MainActivity :: class . java , true , false ) @Test fun test () = before { activityTestRule . launchActivity ( null ) }. after { }. run { ======> UI Automator : 0 minutes , 1 seconds and 252 millis ======> UI Automator boost : 0 minutes , 0 seconds and 310 millis step ( \"MainScreen. Click on `measure fragment` button\" ) { UiMainScreen { measureButton { isDisplayed () click () } } } ======> UI Automator : 0 minutes , 11 seconds and 725 millis ======> UI Automator boost : 0 minutes , 1 seconds and 50 millis step ( \"Measure screen. Button_1 clicks comparing\" ) { UiMeasureScreen { RANGE . forEach { _ -> button1 { click () hasText ( device . targetContext . getString ( R . string . measure_fragment_text_button_1 ). toUpperCase ()) } } } } ======> UI Automator : 0 minutes , 11 seconds and 789 millis ======> UI Automator boost : 0 minutes , 1 seconds and 482 millis step ( \"Measure screen. Button_2 clicks and TextView changes comparing\" ) { UiMeasureScreen { RANGE . forEach { index -> button2 { click () hasText ( device . targetContext . getString ( R . string . measure_fragment_text_button_2 ). toUpperCase ()) } textView { hasText ( \" ${ device . targetContext . getString ( R . string . measure_fragment_text_textview ) }${ index + 1 } \" ) } } } } ======> UI Automator : 0 minutes , 45 seconds and 903 millis ======> UI Automator boost : 0 minutes , 2 seconds and 967 millis step ( \"Measure fragment. EditText updates comparing\" ) { UiMeasureScreen { edit { isDisplayed () hasText ( device . targetContext . getString ( R . string . measure_fragment_text_edittext )) RANGE . forEach { _ -> clearText () typeText ( \"bla-bla-bla\" ) hasText ( \"bla-bla-bla\" ) clearText () typeText ( \"mo-mo-mo\" ) hasText ( \"mo-mo-mo\" ) clearText () } } } } ======> UI Automator : 0 minutes , 10 seconds and 901 millis ======> UI Automator boost : 0 minutes , 1 seconds and 23 millis step ( \"Measure fragment. Checkbox clicks comparing\" ) { UiMeasureScreen { RANGE . forEach { index -> checkBox { if ( index % 2 == 0 ) { setChecked ( true ) isChecked () } else { setChecked ( false ) isNotChecked () } } } } } } } It's a great deal! Also, there are cases when UI Automator can't catch 500ms window. For example, when one element is updating too fast (one update in 100 ms). Just have a look at this test . Only KautomatorWaitForIdleSettings.boost() allows to pass the test. As you see, we have introduced a special kautomatorWaitForIdleSettings property in Kaspresso configurator. By default, this property is not boost. Why? Because: 1. You can have tests where you use UI Automator directly. But mentioned timeouts are global parameters. Resetting of these timeouts can lead to an undetermined state. 2. We want to take time collecting data from the world and then to analyze potential problems of our solutions (but, we believe it's a stable and brilliant solution). Another important remark is about kaspressoBuilder = Kaspresso.Builder.simple configuration. This configuration is faster than advanced because of each step's screenshots interceptor absence. If you need, add them manually. Anyway, it's a small change for a developer, but it's a big step for the world =)","title":"Accelerate UI Automator"},{"location":"Wiki/Matchers_actions_assertions/","text":"Matchers, Actions and Assertions As you all know Kaspresso is based on Espresso (if you're not familiar with Espresso, check out the official docs ). According to official docs the main components of Espresso include the following: Espresso \u2013 Entry point to interactions with views (via onView() and onData() ). Also exposes APIs that are not necessarily tied to any view, such as pressBack() . ViewMatchers \u2013 A collection of objects that implement the Matcher<? super View> interface. You can pass one or more of these to the onView() method to locate a view within the current view hierarchy. ViewActions \u2013 A collection of ViewAction objects that can be passed to the ViewInteraction.perform() method, such as click() . ViewAssertions \u2013 A collection of ViewAssertion objects that can be passed the ViewInteraction.check() method. Most of the time, you will use the matches assertion, which uses a View matcher to assert the state of the currently selected view. // withId(R.id.my_view) is a ViewMatcher // click() is a ViewAction // matches(isDisplayed()) is a ViewAssertion onView ( withId ( R . id . my_view )) . perform ( click ()) . check ( matches ( isDisplayed ())) Most available instances of Matcher, ViewActions and ViewAssertions can be found in the Google cheat-sheet The results of calling onView() methods ( ViewInteractors ) can be cashed. In (Kakao)[https://github.com/KakaoCup/Kakao] you can get references to ViewInteractors and reuse them in your code. This makes your code in tests more readable and understandable. This framework also allows you to separate the search for an element and actions on it. Kakao has introduced KView and various implementations for the most available Android widgets. This KView implements the BaseAssertions and BaseActions interfaces with some additional methods. Every inheritor of KView implements its own interfaces for assertions and actions for some widget-specific methods. As a result, you can get a reference to specific views from your test code and make the necessary assertions and actions on it in the view block. Since Kasresso inherits all the best from these two frameworks, everything described above is available to you.","title":"View matchers, actions and assertions"},{"location":"Wiki/Matchers_actions_assertions/#matchers-actions-and-assertions","text":"As you all know Kaspresso is based on Espresso (if you're not familiar with Espresso, check out the official docs ). According to official docs the main components of Espresso include the following: Espresso \u2013 Entry point to interactions with views (via onView() and onData() ). Also exposes APIs that are not necessarily tied to any view, such as pressBack() . ViewMatchers \u2013 A collection of objects that implement the Matcher<? super View> interface. You can pass one or more of these to the onView() method to locate a view within the current view hierarchy. ViewActions \u2013 A collection of ViewAction objects that can be passed to the ViewInteraction.perform() method, such as click() . ViewAssertions \u2013 A collection of ViewAssertion objects that can be passed the ViewInteraction.check() method. Most of the time, you will use the matches assertion, which uses a View matcher to assert the state of the currently selected view. // withId(R.id.my_view) is a ViewMatcher // click() is a ViewAction // matches(isDisplayed()) is a ViewAssertion onView ( withId ( R . id . my_view )) . perform ( click ()) . check ( matches ( isDisplayed ())) Most available instances of Matcher, ViewActions and ViewAssertions can be found in the Google cheat-sheet The results of calling onView() methods ( ViewInteractors ) can be cashed. In (Kakao)[https://github.com/KakaoCup/Kakao] you can get references to ViewInteractors and reuse them in your code. This makes your code in tests more readable and understandable. This framework also allows you to separate the search for an element and actions on it. Kakao has introduced KView and various implementations for the most available Android widgets. This KView implements the BaseAssertions and BaseActions interfaces with some additional methods. Every inheritor of KView implements its own interfaces for assertions and actions for some widget-specific methods. As a result, you can get a reference to specific views from your test code and make the necessary assertions and actions on it in the view block. Since Kasresso inherits all the best from these two frameworks, everything described above is available to you.","title":"Matchers, Actions and Assertions"},{"location":"Wiki/Migrate_from_Espresso/","text":"","title":"Migrate from Espresso, Kakao or KAutomator"},{"location":"Wiki/Page_object_in_Kaspresso/","text":"Page object pattern in Kaspresso. What is a Page object pattern? Page object pattern is explained well by Martin Fowler in this article . Long in short this is a test abstraction that describes the screen with some view elements. These view items can be interacted with during tests. As a result the description of the screen elements will be in a separate class. You no longer need to constantly look for the desired UI element with several matchers in tests. This can be done once by saving a link to the screen. How is the page object pattern implemented in Kaspresso? Kaspresso provides KScreen and UiScreen as implementations for Page object pattern. What is the difference between KScreen and UiScreen Kaspresso is based on Kakao and UiAutomator. When we have all info about the application code( white-box testing cases) we should use KScreen to describe the structure of PageObject as Kakao does. This is a class in Kaspresso - extension for Kakao Screen class. When we don't have access to a source code of an application (it can be some system dialogs, windows or apps) we should use UiScreen. Here are two samples: object SimpleScreen : KScreen < SimpleScreen > () { override val layoutId : Int? = R . layout . activity_simple override val viewClass : Class <*>? = SimpleActivity :: class . java val button1 = KButton { withId ( R . id . button_1 ) } val button2 = KButton { withId ( R . id . button_2 ) } val edit = KEditText { withId ( R . id . edit ) } } object MainScreen : UiScreen < MainScreen > () { override val packageName : String = \"com.kaspersky.kaspresso.kautomatorsample\" val simpleEditText = UiEditText { withId ( this @MainScreen.packageName , \"editText\" ) } val simpleButton = UiButton { withId ( this @MainScreen.packageName , \"button\" ) } val checkBox = UiCheckBox { withId ( this @MainScreen.packageName , \"checkBox\" ) } } In KScreen's inheritors we should initialize the layoutId (layout file of a screen) and viewClass (screen activity class name) fields. But this is optional. These fields will help in cases of code refactoring not to forget about the associated tests screens In UiScreen's inheritors we must initialize packageName field (the full name of the application's package). Benefits of the page object for refactoring Page object pattern allows you to exclude the description of the screen in a separate file and to reuse Screens and views in different tests. When you have some changes in the UI of the application you can only change the code in the Screen file without the need for a lot of refactoring of the tests. Benefits of the Page Object for a work in a team In some teams autotests are written only by developers, in others by QA engineers. In some cases autotests are written by someone who does not know details of the code (source code is available, but is bad understandable). In this case developers can write Screens for additional autotests. Having Screens helps another person to write tests using Kotlin DSL.","title":"PageObject in Kaspresso"},{"location":"Wiki/Page_object_in_Kaspresso/#page-object-pattern-in-kaspresso","text":"","title":"Page object pattern in Kaspresso."},{"location":"Wiki/Page_object_in_Kaspresso/#what-is-a-page-object-pattern","text":"Page object pattern is explained well by Martin Fowler in this article . Long in short this is a test abstraction that describes the screen with some view elements. These view items can be interacted with during tests. As a result the description of the screen elements will be in a separate class. You no longer need to constantly look for the desired UI element with several matchers in tests. This can be done once by saving a link to the screen.","title":"What is a Page object pattern?"},{"location":"Wiki/Page_object_in_Kaspresso/#how-is-the-page-object-pattern-implemented-in-kaspresso","text":"Kaspresso provides KScreen and UiScreen as implementations for Page object pattern.","title":"How is the page object pattern implemented in Kaspresso?"},{"location":"Wiki/Page_object_in_Kaspresso/#what-is-the-difference-between-kscreen-and-uiscreen","text":"Kaspresso is based on Kakao and UiAutomator. When we have all info about the application code( white-box testing cases) we should use KScreen to describe the structure of PageObject as Kakao does. This is a class in Kaspresso - extension for Kakao Screen class. When we don't have access to a source code of an application (it can be some system dialogs, windows or apps) we should use UiScreen. Here are two samples: object SimpleScreen : KScreen < SimpleScreen > () { override val layoutId : Int? = R . layout . activity_simple override val viewClass : Class <*>? = SimpleActivity :: class . java val button1 = KButton { withId ( R . id . button_1 ) } val button2 = KButton { withId ( R . id . button_2 ) } val edit = KEditText { withId ( R . id . edit ) } } object MainScreen : UiScreen < MainScreen > () { override val packageName : String = \"com.kaspersky.kaspresso.kautomatorsample\" val simpleEditText = UiEditText { withId ( this @MainScreen.packageName , \"editText\" ) } val simpleButton = UiButton { withId ( this @MainScreen.packageName , \"button\" ) } val checkBox = UiCheckBox { withId ( this @MainScreen.packageName , \"checkBox\" ) } } In KScreen's inheritors we should initialize the layoutId (layout file of a screen) and viewClass (screen activity class name) fields. But this is optional. These fields will help in cases of code refactoring not to forget about the associated tests screens In UiScreen's inheritors we must initialize packageName field (the full name of the application's package).","title":"What is the difference between KScreen and UiScreen"},{"location":"Wiki/Page_object_in_Kaspresso/#benefits-of-the-page-object-for-refactoring","text":"Page object pattern allows you to exclude the description of the screen in a separate file and to reuse Screens and views in different tests. When you have some changes in the UI of the application you can only change the code in the Screen file without the need for a lot of refactoring of the tests.","title":"Benefits of the page object for refactoring"},{"location":"Wiki/Page_object_in_Kaspresso/#benefits-of-the-page-object-for-a-work-in-a-team","text":"In some teams autotests are written only by developers, in others by QA engineers. In some cases autotests are written by someone who does not know details of the code (source code is available, but is bad understandable). In this case developers can write Screens for additional autotests. Having Screens helps another person to write tests using Kotlin DSL.","title":"Benefits of the Page Object for a work in a team"},{"location":"Wiki/Screenshot_tests/","text":"Screenshot tests Main purpose Sometimes when developing new features, there is a need to check if the application works properly in all supported languages. Manual locale setting changes could take a long time and require the efforts of developers, QA engineers, and etc. Also, it could increase the duration of the localization process. In order to avoid that, Kaspresso provides DocLocScreenshotTestCase which allows taking screenshots in all locales you specified. DocLocScreenshotTestCase extends default Kaspresso TestCase and offers the opportunity to make screenshots out the box by calling DocLocScreenshotTestCase#captureScreenshot(String) method. Usage To create a single test, you should extend DocLocScreenshotTestCase class as shown below: @RunWith ( AndroidJUnit4 :: class ) class ScreenshotSampleTest : DocLocScreenshotTestCase ( locales = \"en,ru\" ) { @ScreenShooterTest @Test fun test () { before { }. after { }. run { step ( \"1. Do the first step\" ) { // ... captureScreenshot ( \"First step\" ) } step ( \"2. Do the second step\" ) { // ... captureScreenshot ( \"Second step\" ) } } } } There is one parameter passed in the base constructor: - locales - comma-separated string with locales to run test with. Captured screenshots will be available in the device's storage at the path \"/sdcard/screenshots/\". For full example, check the ScreenshotSampleTest . Notice, that the test is marked with @ScreenShooterTest annotation. This is intended to filter only screenshooter tests to be run. For example, you could pass the annotation to default AndroidJUnitRunner with command: adb shell am instrument -w -e annotation com.kaspersky.kaspresso.annotations.ScreenShooterTest your.package.name/android.support.test.runner.AndroidJUnitRunner Screenshot files location All screenshot files are stored in \"screenshots\" directory by default. They are sorted by locale and test name: <base directory>/<test class canonical name>/<locale>/<your tag>.png For the sample test case, the files tree should be like: - screenshots - com.kaspersky.kaspressample.tests.docloc.ScreenshotSampleTest - en // screenshot files - ru // screenshot files So, in order to save screenshots at external storage, the test application requires android.permission.WRITE_EXTERNAL_STORAGE permission. Screenshot's additional meta-info When a developer calls captureScreenshot(\"la-la-la\") method then Kaspresso creates not only a screenshot but also a special xml file. This xml file contains data about all ui elements with their id located on the screen. Example: <Metadata> <Window Left=\"0\" Top=\"0\" Width=\"1440\" Height=\"2560\"> <LocalizedString Text=\"Simple Fragment\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/text_view_title\" Top=\"140\" Left=\"307\" Width=\"825\" Height=\"146\"/> <LocalizedString Text=\"Button 1\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/button_1\" Top=\"370\" Left=\"84\" Width=\"1272\" Height=\"168\"/> <LocalizedString Text=\"Button 2\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/button_2\" Top=\"622\" Left=\"84\" Width=\"1272\" Height=\"168\"/> <LocalizedString Text=\"Kaspresso\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/edit\" Top=\"874\" Left=\"84\" Width=\"1272\" Height=\"158\"/> <LocalizedString Text=\"Simple screen\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/[id:ffffffff]\" Top=\"51\" Left=\"56\" Width=\"446\" Height=\"93\"/> </Window> </Metadata> Similar data may be useful for different systems automating the process of localization of an application. The automating system saves xml for each screen and compares it with new versions received by new screenshot's runs. If some difference were revealed the system gives a signal to prepare and send a portion of new words to translate server. Screenshots of system dialogs/windows Sometimes you want to take screenshots of Android system dialogs or windows. That's why you have to change the language for the entire system. For this purpose, there is additional param in DocLocScreenshotTestCase constructor - changeSystemLocale . Pay your attention to the fact that changeSystemLocale defined in true demands Manifest.permission.CHANGE_CONFIGURATION . Have a look at the code below: @RunWith ( AndroidJUnit4 :: class ) class ChangeSysLanguageTestCase : DocLocScreenshotTestCase ( screenshotsDirectory = File ( \"screenshots\" ), locales = \"en,ru\" , changeSystemLocale = true ) { @ScreenShooterTest @Test fun test () { before { }. after { }. run { step ( \"1. Do the first step\" ) { // ... captureScreenshot ( \"First step\" ) } step ( \"2. Do the second step\" ) { // ... captureScreenshot ( \"Second step\" ) } } } } The full example is located at ChangeSysLanguageTestCase . Important note Please keep the strategy \"one docloc test == one screen\". If you will seek to capture screenshots from more than one screen during one test consequences may be unpredictable. Be aware. Advanced usage In most cases, there is no need to launch certain activity, do a lot of steps before reaching necessary functionality. Often showing fragments will be sufficient to make required screenshots. Also, when you use Model-View-Presenter architectural pattern, you are able to control UI state directly through the View interface. So, there is no need to interact with the application interface and wait for changes. First create a base test activity with setFragment(Fragment) method in your application: class FragmentTestActivity : AppCompatActivity () { fun setFragment ( fragment : Fragment ) = with ( supportFragmentManager . beginTransaction ()) { replace ( android . R . id . content , fragment ) commit () } } Then add a base product screenshot test case: ```kotlin open class ProductDocLocScreenshotTestCase : DocLocScreenshotTestCase( locales = \"en,ru\" ) { @get:Rule val activityTestRule = ActivityTestRule(FragmentTestActivity::class.java, false, true) protected val activity: FragmentTestActivity get() = activityTestRule.activity } This test case would run your `FragmentTestActivity` on startup. Now you are able to write your screenshooter tests. For example, create a new test class which extends `ProductDocLocScreenshotTestCase`: ```kotlin @RunWith(AndroidJUnit4::class) class AdvancedScreenshotSampleTest : ProductDocLocScreenshotTestCase() { private lateinit var fragment: FeatureFragment private lateinit var view: FeatureView @ScreenShooterTest @Test fun test() { before { fragment = FeatureFragment() view = getUiSafeProxy(fragment as FeatureView) activity.setFragment(fragment) }.after { }.run { step(\"1. Step 1\") { // ... [view] calls captureScreenshot(\"Step 1\") } step(\"2. Step 2\") { // ... [view] calls captureScreenshot(\"Step 2\") } step(\"3. Step 3\") { // ... [view] calls captureScreenshot(\"Step 3\") } // ... other steps } } } As you might notice, the getUiSafeProxy method called to get an instance of FeatureView . This method wraps your View interface and returns a proxy on it. The proxy guarantees that all the methods of the View interface you called, will be invoked on the main thread. There is also getUiSafeProxyFromImplementation which wraps an implementation rather than an interface. For full example, check AdvancedScreenshotSampleTest class. Modifying screenshots path and name By default, all screenshots are stored at: /sdcard/screenshots/<locale>/<full qualified test class name>/<method name>. You can change this behavior by providing custom ResourcesRootDirsProvider , ResourcesDirsProvider , ResourceFileNamesProvider and ResourcesDirNameProvider implementations. Find out details here . Changes We have been forced to redesign our resource providing system to support Allure. That's why we changed the primary constructor of DocLocScreenshotTestCase . But, we've kept the old option of using DocLocScreenshotTestCase with old resource providing system as a secondary constructor. You can view the secondary constructor as an example of migration from old system to new system. Also, we've retained tests using old resource providing system in samples to ensure that nothing is broken.","title":"Screenshot tests"},{"location":"Wiki/Screenshot_tests/#screenshot-tests","text":"","title":"Screenshot tests"},{"location":"Wiki/Screenshot_tests/#main-purpose","text":"Sometimes when developing new features, there is a need to check if the application works properly in all supported languages. Manual locale setting changes could take a long time and require the efforts of developers, QA engineers, and etc. Also, it could increase the duration of the localization process. In order to avoid that, Kaspresso provides DocLocScreenshotTestCase which allows taking screenshots in all locales you specified. DocLocScreenshotTestCase extends default Kaspresso TestCase and offers the opportunity to make screenshots out the box by calling DocLocScreenshotTestCase#captureScreenshot(String) method.","title":"Main purpose"},{"location":"Wiki/Screenshot_tests/#usage","text":"To create a single test, you should extend DocLocScreenshotTestCase class as shown below: @RunWith ( AndroidJUnit4 :: class ) class ScreenshotSampleTest : DocLocScreenshotTestCase ( locales = \"en,ru\" ) { @ScreenShooterTest @Test fun test () { before { }. after { }. run { step ( \"1. Do the first step\" ) { // ... captureScreenshot ( \"First step\" ) } step ( \"2. Do the second step\" ) { // ... captureScreenshot ( \"Second step\" ) } } } } There is one parameter passed in the base constructor: - locales - comma-separated string with locales to run test with. Captured screenshots will be available in the device's storage at the path \"/sdcard/screenshots/\". For full example, check the ScreenshotSampleTest . Notice, that the test is marked with @ScreenShooterTest annotation. This is intended to filter only screenshooter tests to be run. For example, you could pass the annotation to default AndroidJUnitRunner with command: adb shell am instrument -w -e annotation com.kaspersky.kaspresso.annotations.ScreenShooterTest your.package.name/android.support.test.runner.AndroidJUnitRunner Screenshot files location All screenshot files are stored in \"screenshots\" directory by default. They are sorted by locale and test name: <base directory>/<test class canonical name>/<locale>/<your tag>.png For the sample test case, the files tree should be like: - screenshots - com.kaspersky.kaspressample.tests.docloc.ScreenshotSampleTest - en // screenshot files - ru // screenshot files So, in order to save screenshots at external storage, the test application requires android.permission.WRITE_EXTERNAL_STORAGE permission. Screenshot's additional meta-info When a developer calls captureScreenshot(\"la-la-la\") method then Kaspresso creates not only a screenshot but also a special xml file. This xml file contains data about all ui elements with their id located on the screen. Example: <Metadata> <Window Left=\"0\" Top=\"0\" Width=\"1440\" Height=\"2560\"> <LocalizedString Text=\"Simple Fragment\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/text_view_title\" Top=\"140\" Left=\"307\" Width=\"825\" Height=\"146\"/> <LocalizedString Text=\"Button 1\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/button_1\" Top=\"370\" Left=\"84\" Width=\"1272\" Height=\"168\"/> <LocalizedString Text=\"Button 2\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/button_2\" Top=\"622\" Left=\"84\" Width=\"1272\" Height=\"168\"/> <LocalizedString Text=\"Kaspresso\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/edit\" Top=\"874\" Left=\"84\" Width=\"1272\" Height=\"158\"/> <LocalizedString Text=\"Simple screen\" LocValueDescription=\"com.kaspersky.kaspressample.test:id/[id:ffffffff]\" Top=\"51\" Left=\"56\" Width=\"446\" Height=\"93\"/> </Window> </Metadata> Similar data may be useful for different systems automating the process of localization of an application. The automating system saves xml for each screen and compares it with new versions received by new screenshot's runs. If some difference were revealed the system gives a signal to prepare and send a portion of new words to translate server. Screenshots of system dialogs/windows Sometimes you want to take screenshots of Android system dialogs or windows. That's why you have to change the language for the entire system. For this purpose, there is additional param in DocLocScreenshotTestCase constructor - changeSystemLocale . Pay your attention to the fact that changeSystemLocale defined in true demands Manifest.permission.CHANGE_CONFIGURATION . Have a look at the code below: @RunWith ( AndroidJUnit4 :: class ) class ChangeSysLanguageTestCase : DocLocScreenshotTestCase ( screenshotsDirectory = File ( \"screenshots\" ), locales = \"en,ru\" , changeSystemLocale = true ) { @ScreenShooterTest @Test fun test () { before { }. after { }. run { step ( \"1. Do the first step\" ) { // ... captureScreenshot ( \"First step\" ) } step ( \"2. Do the second step\" ) { // ... captureScreenshot ( \"Second step\" ) } } } } The full example is located at ChangeSysLanguageTestCase .","title":"Usage"},{"location":"Wiki/Screenshot_tests/#important-note","text":"Please keep the strategy \"one docloc test == one screen\". If you will seek to capture screenshots from more than one screen during one test consequences may be unpredictable. Be aware.","title":"Important note"},{"location":"Wiki/Screenshot_tests/#advanced-usage","text":"In most cases, there is no need to launch certain activity, do a lot of steps before reaching necessary functionality. Often showing fragments will be sufficient to make required screenshots. Also, when you use Model-View-Presenter architectural pattern, you are able to control UI state directly through the View interface. So, there is no need to interact with the application interface and wait for changes. First create a base test activity with setFragment(Fragment) method in your application: class FragmentTestActivity : AppCompatActivity () { fun setFragment ( fragment : Fragment ) = with ( supportFragmentManager . beginTransaction ()) { replace ( android . R . id . content , fragment ) commit () } } Then add a base product screenshot test case: ```kotlin open class ProductDocLocScreenshotTestCase : DocLocScreenshotTestCase( locales = \"en,ru\" ) { @get:Rule val activityTestRule = ActivityTestRule(FragmentTestActivity::class.java, false, true) protected val activity: FragmentTestActivity get() = activityTestRule.activity } This test case would run your `FragmentTestActivity` on startup. Now you are able to write your screenshooter tests. For example, create a new test class which extends `ProductDocLocScreenshotTestCase`: ```kotlin @RunWith(AndroidJUnit4::class) class AdvancedScreenshotSampleTest : ProductDocLocScreenshotTestCase() { private lateinit var fragment: FeatureFragment private lateinit var view: FeatureView @ScreenShooterTest @Test fun test() { before { fragment = FeatureFragment() view = getUiSafeProxy(fragment as FeatureView) activity.setFragment(fragment) }.after { }.run { step(\"1. Step 1\") { // ... [view] calls captureScreenshot(\"Step 1\") } step(\"2. Step 2\") { // ... [view] calls captureScreenshot(\"Step 2\") } step(\"3. Step 3\") { // ... [view] calls captureScreenshot(\"Step 3\") } // ... other steps } } } As you might notice, the getUiSafeProxy method called to get an instance of FeatureView . This method wraps your View interface and returns a proxy on it. The proxy guarantees that all the methods of the View interface you called, will be invoked on the main thread. There is also getUiSafeProxyFromImplementation which wraps an implementation rather than an interface. For full example, check AdvancedScreenshotSampleTest class.","title":"Advanced usage"},{"location":"Wiki/Screenshot_tests/#modifying-screenshots-path-and-name","text":"By default, all screenshots are stored at: /sdcard/screenshots/<locale>/<full qualified test class name>/<method name>. You can change this behavior by providing custom ResourcesRootDirsProvider , ResourcesDirsProvider , ResourceFileNamesProvider and ResourcesDirNameProvider implementations. Find out details here .","title":"Modifying screenshots path and name"},{"location":"Wiki/Screenshot_tests/#changes","text":"We have been forced to redesign our resource providing system to support Allure. That's why we changed the primary constructor of DocLocScreenshotTestCase . But, we've kept the old option of using DocLocScreenshotTestCase with old resource providing system as a secondary constructor. You can view the secondary constructor as an example of migration from old system to new system. Also, we've retained tests using old resource providing system in samples to ensure that nothing is broken.","title":"Changes"},{"location":"Wiki/Supported_Android_UI_elements/","text":"Supported Android UI widgets Via Kakao All the supported Android UI widgets in Kakao can be found as inheritors of the KBaseView class. Here are some of them: KBottomNavigationView KCheckBox KChipGroup KSwipeView KView KAlertDialog KDrawerView KEditText KTextInputLayout KImageView KNavigationView KViewPager KDatePicker KDatePickerDialog KTimePicker KTimePickerDialog KProgressBar KSeekBar KRatingBar KScrollView KSearchView KSlider KSwipeRefreshLayout KSwitch KTabLayout KButton KSnackbar KTextView KToolbar Via KAutomator If you extend the UiScreen abstract class then the following views are available for you: UiView UiEditText UiTextView UiButton UiCheckbox UiChipGroup UiSwitchView UiScrollView UiBottomNavigationView","title":"Supported Android UI-elements"},{"location":"Wiki/Supported_Android_UI_elements/#supported-android-ui-widgets","text":"","title":"Supported Android UI widgets"},{"location":"Wiki/Supported_Android_UI_elements/#via-kakao","text":"All the supported Android UI widgets in Kakao can be found as inheritors of the KBaseView class. Here are some of them: KBottomNavigationView KCheckBox KChipGroup KSwipeView KView KAlertDialog KDrawerView KEditText KTextInputLayout KImageView KNavigationView KViewPager KDatePicker KDatePickerDialog KTimePicker KTimePickerDialog KProgressBar KSeekBar KRatingBar KScrollView KSearchView KSlider KSwipeRefreshLayout KSwitch KTabLayout KButton KSnackbar KTextView KToolbar","title":"Via Kakao"},{"location":"Wiki/Supported_Android_UI_elements/#via-kautomator","text":"If you extend the UiScreen abstract class then the following views are available for you: UiView UiEditText UiTextView UiButton UiCheckbox UiChipGroup UiSwitchView UiScrollView UiBottomNavigationView","title":"Via KAutomator"},{"location":"Wiki/Working_with_Android_OS/","text":"Working with Android OS. Kaspresso Device abstraction. Device is a provider of managers for all off-screen work. Structure All examples are located in device_tests . Device provides these managers: apps allows to install or uninstall applications. Uses adb install and adb uninstall commands. See the example DeviceAppSampleTest . activities is an interface to work with currently resumed Activities. AdbServer not required. See the example DeviceActivitiesSampleTest . files provides the possibility of pushing or removing files from the device. Uses adb push and adb rm commands and does not require android.permission.WRITE_EXTERNAL_STORAGE permission. See the example DeviceFilesSampleTest . internet allows toggling WiFi and network data transfer settings. Be careful of using this interface, WiFi settings changes could not work with some Android versions. See the example DeviceNetworkSampleTest . keyboard is an interface to send key events via adb. Use it only when Espresso or UiAutomator are not appropriate (e.g. screen is locked). See the example DeviceKeyboardSampleTest . location emulates fake location and allows to toggle GPS setting. See the example DeviceLocationSampleTest . phone allows to emulate incoming calls and receive SMS messages. Works only on emulators since uses adb emu commands. See the example DevicePhoneSampleTest . screenshots is an interface screenshots of currently resumed activity. Requires android.permission.WRITE_EXTERNAL_STORAGE permission . See the example DeviceScreenshotSampleTest . accessibility allows to enable or disable accessibility services. Available since api 24. See the example DeviceAccessibilitySampleTest . permissions provides the possibility of allowing or denying permission requests via default Android permission dialog. See the example DevicePermissionsSampleTest . hackPermissions provides the possibility of allowing any permission requests without default Android permission dialog. See the example DeviceHackPermissionsSampleTest . exploit allows to rotate device or press system buttons. See the example DeviceExploitSampleTest . language allows to switch language. See the example DeviceLanguageSampleTest . logcat provides access to adb logcat. See the example DeviceLogcatSampleTest . The purpose of logcat : If you have not heard about GDPR and high-profile lawsuits then you are lucky. But, if your application works in Europe then it's so important to enable/disable all analytics/statistics according to acceptance of the agreements. One of the most reliable ways to check analytics/statistics sending is to verify logcat where all analytics/statistics write their logs (in debug mode, sure). That's why we have created a special Logcat class providing a wide variety of ways to check logcat. uiDevice returns an instance of android.support.test.uiautomator.UiDevice . We don't recommend to use it directly because there is Kautomator that offers a more readable, predictable and stable API to work outside your application. Also Device provides application and test contexts - targetContext and context . Usage Device instance is available in BaseTestContext scope and BaseTestCase via device property. @Test fun test () = run { step ( \"Open Simple Screen\" ) { activityTestRule . launchActivity ( null ) ======> device . screenshots . take ( \"Additional_screenshot\" ) <====== MainScreen { simpleButton { isVisible () click () } } } // .... } Restrictions Most of the features that Device provides use of adb commands and requires AdbServer to be run. Some of them, such as call emulation or SMS receiving, could be executed only on emulator. All such methods are marked by annotation @RequiresAdbServer . All the methods which use ADB commands require android.permission.INTERNET permission. For more information, see methods JavaDoc description and AdbServer documentation.","title":"Working with Android OS"},{"location":"Wiki/Working_with_Android_OS/#working-with-android-os-kaspresso-device-abstraction","text":"Device is a provider of managers for all off-screen work.","title":"Working with Android OS. Kaspresso Device abstraction."},{"location":"Wiki/Working_with_Android_OS/#structure","text":"All examples are located in device_tests . Device provides these managers: apps allows to install or uninstall applications. Uses adb install and adb uninstall commands. See the example DeviceAppSampleTest . activities is an interface to work with currently resumed Activities. AdbServer not required. See the example DeviceActivitiesSampleTest . files provides the possibility of pushing or removing files from the device. Uses adb push and adb rm commands and does not require android.permission.WRITE_EXTERNAL_STORAGE permission. See the example DeviceFilesSampleTest . internet allows toggling WiFi and network data transfer settings. Be careful of using this interface, WiFi settings changes could not work with some Android versions. See the example DeviceNetworkSampleTest . keyboard is an interface to send key events via adb. Use it only when Espresso or UiAutomator are not appropriate (e.g. screen is locked). See the example DeviceKeyboardSampleTest . location emulates fake location and allows to toggle GPS setting. See the example DeviceLocationSampleTest . phone allows to emulate incoming calls and receive SMS messages. Works only on emulators since uses adb emu commands. See the example DevicePhoneSampleTest . screenshots is an interface screenshots of currently resumed activity. Requires android.permission.WRITE_EXTERNAL_STORAGE permission . See the example DeviceScreenshotSampleTest . accessibility allows to enable or disable accessibility services. Available since api 24. See the example DeviceAccessibilitySampleTest . permissions provides the possibility of allowing or denying permission requests via default Android permission dialog. See the example DevicePermissionsSampleTest . hackPermissions provides the possibility of allowing any permission requests without default Android permission dialog. See the example DeviceHackPermissionsSampleTest . exploit allows to rotate device or press system buttons. See the example DeviceExploitSampleTest . language allows to switch language. See the example DeviceLanguageSampleTest . logcat provides access to adb logcat. See the example DeviceLogcatSampleTest . The purpose of logcat : If you have not heard about GDPR and high-profile lawsuits then you are lucky. But, if your application works in Europe then it's so important to enable/disable all analytics/statistics according to acceptance of the agreements. One of the most reliable ways to check analytics/statistics sending is to verify logcat where all analytics/statistics write their logs (in debug mode, sure). That's why we have created a special Logcat class providing a wide variety of ways to check logcat. uiDevice returns an instance of android.support.test.uiautomator.UiDevice . We don't recommend to use it directly because there is Kautomator that offers a more readable, predictable and stable API to work outside your application. Also Device provides application and test contexts - targetContext and context .","title":"Structure"},{"location":"Wiki/Working_with_Android_OS/#usage","text":"Device instance is available in BaseTestContext scope and BaseTestCase via device property. @Test fun test () = run { step ( \"Open Simple Screen\" ) { activityTestRule . launchActivity ( null ) ======> device . screenshots . take ( \"Additional_screenshot\" ) <====== MainScreen { simpleButton { isVisible () click () } } } // .... }","title":"Usage"},{"location":"Wiki/Working_with_Android_OS/#restrictions","text":"Most of the features that Device provides use of adb commands and requires AdbServer to be run. Some of them, such as call emulation or SMS receiving, could be executed only on emulator. All such methods are marked by annotation @RequiresAdbServer . All the methods which use ADB commands require android.permission.INTERNET permission. For more information, see methods JavaDoc description and AdbServer documentation.","title":"Restrictions"},{"location":"Wiki/how_to_write_autotests/","text":"How to write autotests Anyone who starts to write UI-tests is facing with a problem of how to write UI-tests correctly. At the beginning of our great way, we had three absolutely different UI-test code styles from four developers. It was amazing. At that moment, we decided to do something to prevent it. That's why we have created rules on how to write UI-tests and we have tried to make Kaspresso helping to follow these rules. All rules are divided into two groups: abstractions and structure. Also, we have added a third part containing convenient things resolving the most common problems. Abstractions How many abstractions can you have in your tests? Only one! It's a page object (PO), the term explained well by Martin Fowler in this article . In Kakao a Screen class (in Kautomator a UiScreen ) is the implementation of PO. Each screen visible by the user even a simple dialog is a separate PO. Yes, there are cases when you need new abstraction and it's ok. But our advice is to think well before you introduce new abstraction. How to determine whether View (fragment, dialog, anything) in the project has its description in some Kakao Screen ? In a big project with a lot of UI-tests, it's not an easy challenge. That's why we have implemented an extended version of the Kakao Screen - KScreen ( KScreen ). In KScreen you have to implement two properties: layoutId and viewClass . So your search if the View has its description in some Kakao Screen becomes easier. In Kautomator, there is general UiScreen ( UiScreen ) that has an obligatory field - packageName . Is it ok that your PO contains helper methods? If these methods help to understand what the test is doing then it's ok. For example, compare two parts of code: MainScreen { shieldView { click () } } and MainScreen { navigateToTasksScreen () } object MainScreen : KScreen < MainScreen > () { //... fun navigateToTasksScreen () { shieldView { click () } } //... } I am sure that method navigateToTasksScreen() is more \"talking\" than the simple click on some shieldView . Can Screen contain inner state or logic? No! PO doesn't have any inner state or logic. It's only a description of the UI of concrete View. Assert help methods inside of PO. Is it ok? We think it's ok because it simplifies the code and puts all info that is about Screen into one class. The chosen approach doesn't lead to an uncontrolled grow of class size because even a dialog is a separate Screen , so we don't have a huge Screen describing half of all UI in the app. Just compare three parts of code executing the same thing: ReportsScreen { assertQuarantinedDetectsCountAfterScan ( 0 ) } ReportsScreen { reportsListView { childAt < ReportsScreen . ReportsItem > ( 1 ) { body { containsText ( \"Detected: 0\" ) containsText ( \"Quarantined: 0\" ) containsText ( \"Deleted: 0\" ) } } } } ReportsScreen { val detectsCount = getDetectsCountAfterScan () ReportsScreenAssertions . assertQuarantinedDetectsCountAfterScan ( detectsCount ) } We prefer the first variant. But we follow the next naming convention of such methods: assert<YourCheckName> . Test structure Test and Test-case correlation First of all, let's consider the above-mentioned terms. Test-case is a scenario written in human language by a tester to check some feature. Test is an implementation of Test-case written in program language by developer/autotester. Terms were learned. Let's observe some test: @Test fun test () { MainScreen { nextButton { isVisible () click () } } SimpleScreen { button1 { click () } button2 { isVisible () } } SimpleScreen { button2 { click () } edit { attempt ( timeoutMs = 7000 ) { isVisible () } hasText ( R . string . text_edit_text ) } } } Not bad. But can you correlate this code with the test-case easy? No, you need to read the code of the test and the text of the test-case very attentively. It's not comfortable. So we want to have a structure of the test that would suggest what step of the test-case we are looking at in the particular area of the test. Before/after state of a test Sometimes you have to change the state of a device (edit contacts, phones, put files into storage and more) while you are running a test. What to do with a changed state? There are two variants: 1. Create a universal method that sets a device to a consistent state. 2. Clean the state after each test. The first approach doesn't look like a safe case because you need to remember about all the tests in one huge method. That's why we prefer the second approach. But it would be nice if the structure of a test forced us to remember about a state. Test structure All of the above mentioned inspired us to create the test's structure like below: @Test fun shouldPassOnNoInternetScanTest () = before { activityTestRule . launchActivity ( null ) // some things with the state }. after { // some things with the state }. run { step ( \"Open Simple Screen\" ) { MainScreen { nextButton { isVisible () click () } } } step ( \"Click button_1 and check button_2\" ) { SimpleScreen { button1 { click () } button2 { isVisible () } } } step ( \"Click button_2 and check edit\" ) { SimpleScreen { button2 { click () } edit { attempt ( timeoutMs = 7000 ) { isVisible () } hasText ( R . string . text_edit_text ) } } } step ( \"Check all possibilities of edit\" ) { scenario ( CheckEditScenario () ) } } Let's describe the structure: 1. before - after - run In the beginning, we think about a state. After the state, we begin to consider the test body. 2. step step in the test is similar to step in the test-case. That's why test reading is easier and understandable. 3. scenario There are cases when some sentences of steps are absolutely identical and occur very often in tests. For these sentences we have introduced a scenario where you can replace your sequences of steps. How is this API enabled? Let's look at SimpleTest and SimpleTestWithRule . In the first example we inherit SimpleTest from TestCase . In the second example we use TestCaseRule field. Also you can use BaseTestCase and BaseTestCaseRule . Test data for the test A developer, while he is writing a test, needs to prepare some data for the test. It's a common case. Where do you locate test data preparing? Usually, it's the beginning of the test. But, first, we want to divide test data preparing and test data usage. Second, we want to guarantee that test data were prepared before the test. That's why we decided to introduce a special DSL to help and to highlight the work with test data preparing. Please look at the example - InitTransformDataTest . Updated DSL looks like: before { // ... }. after { // ... }. init { company { name = \"Microsoft\" city = \"Redmond\" country = \"USA\" } company { name = \"Google\" city = \"Mountain View\" country = \"USA\" } owner { firstName = \"Satya\" secondName = \"Nadella\" country = \"India\" } owner { firstName = \"Sundar\" secondName = \"Pichai\" country = \"India\" } }. transform { makeOwner ( ownerSurname = \"Nadella\" , companyName = \"Microsoft\" ) makeOwner ( ownerSurname = \"Pichai\" , companyName = \"Google\" ) }. run { // ... } 1. init Here, you prepare only sets of data without any transforms and connections. Also, you can make requests to your test server, for example. It's an optional block. 2. transform This construction is for transforming of our test data. In our example we join the owner and company . It's an optional block. The block is enabled only after the init block. Alexander Blinov wrote a good article about init-transform DSL in russian article where he explains all DSL details very well. You are welcome! Available Test DSL forms Finally, let's look at all available Test DSL in Kaspresso: 1. before-after-init-transform-run 1. before-after-init-transform-transform-run . It's possible to add multiple transform blocks. 2. before-after-init-run 3. before-after-run 4. init-transform-run 5. init-transform-transform-run . It's possible to add multiple transform blocks. 6. init-run 7. run Examples You can have a look at examples of how to use and configure Kaspresso and how to use different forms of DSL . Sweet additional features Some words about BaseTestContext method You can notice an existing of some BaseTestContext in before , after and run methods. BaseTestContext gives you access to all Kaspresso's entities that a developer can need during the test. Also, BaseTestContext gives you insurance that all of these entities were created correctly for the current session and with actual Kaspresso configurator. So, let's consider what BaseTestContext offers. flakySafely It's a method that receives a lambda and invokes it in the same manner as FlakySafeInterceptors group. If you disabled this interceptor or if you want to set some special flaky safety params for any view, you can use this method. The most common case is when the default timeout (10 seconds) for flakySafety is not enough, because, for example, the appearance of a view is blocked by long background operation. step ( \"Check tv6's text\" ) { CommonFlakyScreen { tv6 { flakySafely ( timeoutMs = 16 _000 ) { hasText ( R . string . common_flaky_final_textview ) } } } } More detailed examples are here . Please, observe a documentation about implementation details. continuously This function is similar to what flakySafely does, but for negative scenarios, where you need all the time to check that something does not happen. ContinuouslyDialogScreen { continuously () { dialogTitle { doesNotExist () } } } The example is here . compose This is a method to make a composed action from multiple actions or assertions, and this action succeeds if at least one of its components succeeds. compose is useful in cases when we don't know an accurate sequence of events and can't influence it. Such cases are possible when a test is performed outside the application. When a test is performed inside the application we strongly recommend to make your test linear and don't put any conditions in tests that are possible thanks to compose . It is available as an extension function for any KView , UiBaseView and as just a regular method (in this case it can take actions on different views as well). The key words using in compose: - compose - marks the beginning of \"compose\", turn on all needed logic - or - marks the possible branches. The lambda after or has a context of concrete element. Just have a look at the simple below. - thenContinue - is an action that will be executed if a branch (the code into lambda of or ) is completed successfully. The context of a lambda after thenContinue is a context of concrete element described in or section. - then - is almost the same construction as thenContinue excepting the context after then . The context after then is not restricted. Have a glance at the example below: step ( \"Handle potential unexpected behavior\" ) { // simple compose CommonFlakyScreen { btn5 . compose { or { // the context of this lambda is `btn5` hasText ( \"Something wrong\" ) } thenContinue { // here, the context of this lambda is a context of KButton(btn5), // that's why we can call KButton's methods inside the lambda directly click () } or { // the context of this lambda is `btn5` hasText ( R . string . common_flaky_final_button ) } then { // here, there is not any special context of this lambda // that's why we can't call KButton's methods inside the lambda directly btn5 . click () } } } // complex compose compose { // the first potential branch when ComplexComposeScreen.stage1Button is visible or ( ComplexComposeScreen . stage1Button ) { // the context of this lambda is `ComplexComposeScreen.stage1Button` isVisible () } then { // if the first branch was succeed then we execute some special flow step ( \"Flow is over the product\" ) { ComplexComposeScreen { stage1Button { click () } stage2Button { isVisible () click () } } } } // the second potential branch when UiComposeDialog1.title is visible // just imagine that is some unexpected system or product behavior and we cannot fix it now or ( UiComposeDialog1 . title ) { // the context of this lambda is `UiComposeDialog1.title` isDisplayed () } then { // if the second branch was succeed then we execute some special flow step ( \"Flow is over dialogs\" ) { UiComposeDialog1 { okButton { isDisplayed () click () } } UiComposeDialog2 { title { isDisplayed () } okButton { isDisplayed () click () } } } } } } The example is here . Please, observe additional opportunities and documentation: common info , ComposeProvider and WebComposeProvider . data If you set your test data by init-transform methods then this test data is available by a data field. testAssistants Special assistants to write tests. Pay attention to the fact that these assistants are available in BaseTestCase also. 1. testLogger It's a logger for tests allowed to output logs by a more appropriate and readable form. 2. device An instance of Device class is available in this context. It's a special interface given beautiful possibilities to do a lot of useful things at the test. More detailed info about Device is here . 3. adbServer You have access to AdbServer instance used in Device 's interfaces via adbServer property. More detailed info about AdbServer is here . 4. params Params is the facade class for all Kaspresso parameters. Please, observe the source code .","title":"How to write autotests"},{"location":"Wiki/how_to_write_autotests/#how-to-write-autotests","text":"Anyone who starts to write UI-tests is facing with a problem of how to write UI-tests correctly. At the beginning of our great way, we had three absolutely different UI-test code styles from four developers. It was amazing. At that moment, we decided to do something to prevent it. That's why we have created rules on how to write UI-tests and we have tried to make Kaspresso helping to follow these rules. All rules are divided into two groups: abstractions and structure. Also, we have added a third part containing convenient things resolving the most common problems.","title":"How to write autotests"},{"location":"Wiki/how_to_write_autotests/#abstractions","text":"","title":"Abstractions"},{"location":"Wiki/how_to_write_autotests/#how-many-abstractions-can-you-have-in-your-tests","text":"Only one! It's a page object (PO), the term explained well by Martin Fowler in this article . In Kakao a Screen class (in Kautomator a UiScreen ) is the implementation of PO. Each screen visible by the user even a simple dialog is a separate PO. Yes, there are cases when you need new abstraction and it's ok. But our advice is to think well before you introduce new abstraction.","title":"How many abstractions can you have in your tests?"},{"location":"Wiki/how_to_write_autotests/#how-to-determine-whether-view-fragment-dialog-anything-in-the-project-has-its-description-in-some-kakao-screen","text":"In a big project with a lot of UI-tests, it's not an easy challenge. That's why we have implemented an extended version of the Kakao Screen - KScreen ( KScreen ). In KScreen you have to implement two properties: layoutId and viewClass . So your search if the View has its description in some Kakao Screen becomes easier. In Kautomator, there is general UiScreen ( UiScreen ) that has an obligatory field - packageName .","title":"How to determine whether View (fragment, dialog, anything) in the project has its description in some Kakao Screen?"},{"location":"Wiki/how_to_write_autotests/#is-it-ok-that-your-po-contains-helper-methods","text":"If these methods help to understand what the test is doing then it's ok. For example, compare two parts of code: MainScreen { shieldView { click () } } and MainScreen { navigateToTasksScreen () } object MainScreen : KScreen < MainScreen > () { //... fun navigateToTasksScreen () { shieldView { click () } } //... } I am sure that method navigateToTasksScreen() is more \"talking\" than the simple click on some shieldView .","title":"Is it ok that your PO contains helper methods?"},{"location":"Wiki/how_to_write_autotests/#can-screen-contain-inner-state-or-logic","text":"No! PO doesn't have any inner state or logic. It's only a description of the UI of concrete View.","title":"Can Screen contain inner state or logic?"},{"location":"Wiki/how_to_write_autotests/#assert-help-methods-inside-of-po-is-it-ok","text":"We think it's ok because it simplifies the code and puts all info that is about Screen into one class. The chosen approach doesn't lead to an uncontrolled grow of class size because even a dialog is a separate Screen , so we don't have a huge Screen describing half of all UI in the app. Just compare three parts of code executing the same thing: ReportsScreen { assertQuarantinedDetectsCountAfterScan ( 0 ) } ReportsScreen { reportsListView { childAt < ReportsScreen . ReportsItem > ( 1 ) { body { containsText ( \"Detected: 0\" ) containsText ( \"Quarantined: 0\" ) containsText ( \"Deleted: 0\" ) } } } } ReportsScreen { val detectsCount = getDetectsCountAfterScan () ReportsScreenAssertions . assertQuarantinedDetectsCountAfterScan ( detectsCount ) } We prefer the first variant. But we follow the next naming convention of such methods: assert<YourCheckName> .","title":"Assert help methods inside of PO. Is it ok?"},{"location":"Wiki/how_to_write_autotests/#test-structure","text":"","title":"Test structure"},{"location":"Wiki/how_to_write_autotests/#test-and-test-case-correlation","text":"First of all, let's consider the above-mentioned terms. Test-case is a scenario written in human language by a tester to check some feature. Test is an implementation of Test-case written in program language by developer/autotester. Terms were learned. Let's observe some test: @Test fun test () { MainScreen { nextButton { isVisible () click () } } SimpleScreen { button1 { click () } button2 { isVisible () } } SimpleScreen { button2 { click () } edit { attempt ( timeoutMs = 7000 ) { isVisible () } hasText ( R . string . text_edit_text ) } } } Not bad. But can you correlate this code with the test-case easy? No, you need to read the code of the test and the text of the test-case very attentively. It's not comfortable. So we want to have a structure of the test that would suggest what step of the test-case we are looking at in the particular area of the test.","title":"Test and Test-case correlation"},{"location":"Wiki/how_to_write_autotests/#beforeafter-state-of-a-test","text":"Sometimes you have to change the state of a device (edit contacts, phones, put files into storage and more) while you are running a test. What to do with a changed state? There are two variants: 1. Create a universal method that sets a device to a consistent state. 2. Clean the state after each test. The first approach doesn't look like a safe case because you need to remember about all the tests in one huge method. That's why we prefer the second approach. But it would be nice if the structure of a test forced us to remember about a state.","title":"Before/after state of a test"},{"location":"Wiki/how_to_write_autotests/#test-structure_1","text":"All of the above mentioned inspired us to create the test's structure like below: @Test fun shouldPassOnNoInternetScanTest () = before { activityTestRule . launchActivity ( null ) // some things with the state }. after { // some things with the state }. run { step ( \"Open Simple Screen\" ) { MainScreen { nextButton { isVisible () click () } } } step ( \"Click button_1 and check button_2\" ) { SimpleScreen { button1 { click () } button2 { isVisible () } } } step ( \"Click button_2 and check edit\" ) { SimpleScreen { button2 { click () } edit { attempt ( timeoutMs = 7000 ) { isVisible () } hasText ( R . string . text_edit_text ) } } } step ( \"Check all possibilities of edit\" ) { scenario ( CheckEditScenario () ) } } Let's describe the structure: 1. before - after - run In the beginning, we think about a state. After the state, we begin to consider the test body. 2. step step in the test is similar to step in the test-case. That's why test reading is easier and understandable. 3. scenario There are cases when some sentences of steps are absolutely identical and occur very often in tests. For these sentences we have introduced a scenario where you can replace your sequences of steps. How is this API enabled? Let's look at SimpleTest and SimpleTestWithRule . In the first example we inherit SimpleTest from TestCase . In the second example we use TestCaseRule field. Also you can use BaseTestCase and BaseTestCaseRule .","title":"Test structure"},{"location":"Wiki/how_to_write_autotests/#test-data-for-the-test","text":"A developer, while he is writing a test, needs to prepare some data for the test. It's a common case. Where do you locate test data preparing? Usually, it's the beginning of the test. But, first, we want to divide test data preparing and test data usage. Second, we want to guarantee that test data were prepared before the test. That's why we decided to introduce a special DSL to help and to highlight the work with test data preparing. Please look at the example - InitTransformDataTest . Updated DSL looks like: before { // ... }. after { // ... }. init { company { name = \"Microsoft\" city = \"Redmond\" country = \"USA\" } company { name = \"Google\" city = \"Mountain View\" country = \"USA\" } owner { firstName = \"Satya\" secondName = \"Nadella\" country = \"India\" } owner { firstName = \"Sundar\" secondName = \"Pichai\" country = \"India\" } }. transform { makeOwner ( ownerSurname = \"Nadella\" , companyName = \"Microsoft\" ) makeOwner ( ownerSurname = \"Pichai\" , companyName = \"Google\" ) }. run { // ... } 1. init Here, you prepare only sets of data without any transforms and connections. Also, you can make requests to your test server, for example. It's an optional block. 2. transform This construction is for transforming of our test data. In our example we join the owner and company . It's an optional block. The block is enabled only after the init block. Alexander Blinov wrote a good article about init-transform DSL in russian article where he explains all DSL details very well. You are welcome!","title":"Test data for the test"},{"location":"Wiki/how_to_write_autotests/#available-test-dsl-forms","text":"Finally, let's look at all available Test DSL in Kaspresso: 1. before-after-init-transform-run 1. before-after-init-transform-transform-run . It's possible to add multiple transform blocks. 2. before-after-init-run 3. before-after-run 4. init-transform-run 5. init-transform-transform-run . It's possible to add multiple transform blocks. 6. init-run 7. run","title":"Available Test DSL forms"},{"location":"Wiki/how_to_write_autotests/#examples","text":"You can have a look at examples of how to use and configure Kaspresso and how to use different forms of DSL .","title":"Examples"},{"location":"Wiki/how_to_write_autotests/#sweet-additional-features","text":"","title":"Sweet additional features"},{"location":"Wiki/how_to_write_autotests/#some-words-about-basetestcontext-method","text":"You can notice an existing of some BaseTestContext in before , after and run methods. BaseTestContext gives you access to all Kaspresso's entities that a developer can need during the test. Also, BaseTestContext gives you insurance that all of these entities were created correctly for the current session and with actual Kaspresso configurator. So, let's consider what BaseTestContext offers.","title":"Some words about BaseTestContext method"},{"location":"Wiki/how_to_write_autotests/#flakysafely","text":"It's a method that receives a lambda and invokes it in the same manner as FlakySafeInterceptors group. If you disabled this interceptor or if you want to set some special flaky safety params for any view, you can use this method. The most common case is when the default timeout (10 seconds) for flakySafety is not enough, because, for example, the appearance of a view is blocked by long background operation. step ( \"Check tv6's text\" ) { CommonFlakyScreen { tv6 { flakySafely ( timeoutMs = 16 _000 ) { hasText ( R . string . common_flaky_final_textview ) } } } } More detailed examples are here . Please, observe a documentation about implementation details.","title":"flakySafely"},{"location":"Wiki/how_to_write_autotests/#continuously","text":"This function is similar to what flakySafely does, but for negative scenarios, where you need all the time to check that something does not happen. ContinuouslyDialogScreen { continuously () { dialogTitle { doesNotExist () } } } The example is here .","title":"continuously"},{"location":"Wiki/how_to_write_autotests/#compose","text":"This is a method to make a composed action from multiple actions or assertions, and this action succeeds if at least one of its components succeeds. compose is useful in cases when we don't know an accurate sequence of events and can't influence it. Such cases are possible when a test is performed outside the application. When a test is performed inside the application we strongly recommend to make your test linear and don't put any conditions in tests that are possible thanks to compose . It is available as an extension function for any KView , UiBaseView and as just a regular method (in this case it can take actions on different views as well). The key words using in compose: - compose - marks the beginning of \"compose\", turn on all needed logic - or - marks the possible branches. The lambda after or has a context of concrete element. Just have a look at the simple below. - thenContinue - is an action that will be executed if a branch (the code into lambda of or ) is completed successfully. The context of a lambda after thenContinue is a context of concrete element described in or section. - then - is almost the same construction as thenContinue excepting the context after then . The context after then is not restricted. Have a glance at the example below: step ( \"Handle potential unexpected behavior\" ) { // simple compose CommonFlakyScreen { btn5 . compose { or { // the context of this lambda is `btn5` hasText ( \"Something wrong\" ) } thenContinue { // here, the context of this lambda is a context of KButton(btn5), // that's why we can call KButton's methods inside the lambda directly click () } or { // the context of this lambda is `btn5` hasText ( R . string . common_flaky_final_button ) } then { // here, there is not any special context of this lambda // that's why we can't call KButton's methods inside the lambda directly btn5 . click () } } } // complex compose compose { // the first potential branch when ComplexComposeScreen.stage1Button is visible or ( ComplexComposeScreen . stage1Button ) { // the context of this lambda is `ComplexComposeScreen.stage1Button` isVisible () } then { // if the first branch was succeed then we execute some special flow step ( \"Flow is over the product\" ) { ComplexComposeScreen { stage1Button { click () } stage2Button { isVisible () click () } } } } // the second potential branch when UiComposeDialog1.title is visible // just imagine that is some unexpected system or product behavior and we cannot fix it now or ( UiComposeDialog1 . title ) { // the context of this lambda is `UiComposeDialog1.title` isDisplayed () } then { // if the second branch was succeed then we execute some special flow step ( \"Flow is over dialogs\" ) { UiComposeDialog1 { okButton { isDisplayed () click () } } UiComposeDialog2 { title { isDisplayed () } okButton { isDisplayed () click () } } } } } } The example is here . Please, observe additional opportunities and documentation: common info , ComposeProvider and WebComposeProvider .","title":"compose"},{"location":"Wiki/how_to_write_autotests/#data","text":"If you set your test data by init-transform methods then this test data is available by a data field.","title":"data"},{"location":"Wiki/how_to_write_autotests/#testassistants","text":"Special assistants to write tests. Pay attention to the fact that these assistants are available in BaseTestCase also. 1. testLogger It's a logger for tests allowed to output logs by a more appropriate and readable form. 2. device An instance of Device class is available in this context. It's a special interface given beautiful possibilities to do a lot of useful things at the test. More detailed info about Device is here . 3. adbServer You have access to AdbServer instance used in Device 's interfaces via adbServer property. More detailed info about AdbServer is here . 4. params Params is the facade class for all Kaspresso parameters. Please, observe the source code .","title":"testAssistants"}]}